{"ast":null,"code":"import { __rest } from \"tslib\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { useProcessReactions } from './hooks/useProcessReactions';\nimport { ReactionsListModal } from './ReactionsListModal';\nimport { useTranslationContext } from '../../context';\nimport { MAX_MESSAGE_REACTIONS_TO_FETCH } from '../Message/hooks';\nvar UnMemoizedReactionsList = function (props) {\n  var handleFetchReactions = props.handleFetchReactions,\n    _a = props.reverse,\n    reverse = _a === void 0 ? false : _a,\n    sortReactionDetails = props.sortReactionDetails,\n    rest = __rest(props, [\"handleFetchReactions\", \"reverse\", \"sortReactionDetails\"]);\n  var _b = useProcessReactions(rest),\n    existingReactions = _b.existingReactions,\n    hasReactions = _b.hasReactions,\n    totalReactionCount = _b.totalReactionCount;\n  var _c = useState(null),\n    selectedReactionType = _c[0],\n    setSelectedReactionType = _c[1];\n  var t = useTranslationContext('ReactionsList').t;\n  var handleReactionButtonClick = function (reactionType) {\n    if (totalReactionCount > MAX_MESSAGE_REACTIONS_TO_FETCH) {\n      return;\n    }\n    setSelectedReactionType(reactionType);\n  };\n  if (!hasReactions) return null;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    \"aria-label\": t('aria/Reaction list'),\n    className: clsx('str-chat__reaction-list str-chat__message-reactions-container', {\n      'str-chat__reaction-list--reverse': reverse\n    }),\n    \"data-testid\": 'reaction-list',\n    role: 'figure'\n  }, React.createElement(\"ul\", {\n    className: 'str-chat__message-reactions'\n  }, existingReactions.map(function (_a) {\n    var EmojiComponent = _a.EmojiComponent,\n      isOwnReaction = _a.isOwnReaction,\n      reactionCount = _a.reactionCount,\n      reactionType = _a.reactionType;\n    return EmojiComponent && React.createElement(\"li\", {\n      className: clsx('str-chat__message-reaction', {\n        'str-chat__message-reaction-own': isOwnReaction\n      }),\n      key: reactionType\n    }, React.createElement(\"button\", {\n      \"aria-label\": \"Reactions: \".concat(reactionType),\n      \"data-testid\": \"reactions-list-button-\".concat(reactionType),\n      onClick: function () {\n        return handleReactionButtonClick(reactionType);\n      },\n      type: 'button'\n    }, React.createElement(\"span\", {\n      className: 'str-chat__message-reaction-emoji'\n    }, React.createElement(EmojiComponent, null)), \"\\u00A0\", React.createElement(\"span\", {\n      className: 'str-chat__message-reaction-count',\n      \"data-testclass\": 'reaction-list-reaction-count'\n    }, reactionCount)));\n  }), React.createElement(\"li\", null, React.createElement(\"span\", {\n    className: 'str-chat__reaction-list--counter'\n  }, totalReactionCount)))), React.createElement(ReactionsListModal, {\n    handleFetchReactions: handleFetchReactions,\n    onClose: function () {\n      return setSelectedReactionType(null);\n    },\n    onSelectedReactionTypeChange: setSelectedReactionType,\n    open: selectedReactionType !== null,\n    reactions: existingReactions,\n    selectedReactionType: selectedReactionType,\n    sortReactionDetails: sortReactionDetails\n  }));\n};\n/**\n * Component that displays a list of reactions on a message.\n */\nexport var ReactionsList = React.memo(UnMemoizedReactionsList);","map":{"version":3,"names":["__rest","React","useState","clsx","useProcessReactions","ReactionsListModal","useTranslationContext","MAX_MESSAGE_REACTIONS_TO_FETCH","UnMemoizedReactionsList","props","handleFetchReactions","_a","reverse","sortReactionDetails","rest","_b","existingReactions","hasReactions","totalReactionCount","_c","selectedReactionType","setSelectedReactionType","t","handleReactionButtonClick","reactionType","createElement","Fragment","className","role","map","EmojiComponent","isOwnReaction","reactionCount","key","concat","onClick","type","onClose","onSelectedReactionTypeChange","open","reactions","ReactionsList","memo"],"sources":["C:/Users/Gesti/Desktop/chat_application/client/node_modules/stream-chat-react/dist/components/Reactions/ReactionsList.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { useProcessReactions } from './hooks/useProcessReactions';\nimport { ReactionsListModal } from './ReactionsListModal';\nimport { useTranslationContext } from '../../context';\nimport { MAX_MESSAGE_REACTIONS_TO_FETCH } from '../Message/hooks';\nvar UnMemoizedReactionsList = function (props) {\n    var handleFetchReactions = props.handleFetchReactions, _a = props.reverse, reverse = _a === void 0 ? false : _a, sortReactionDetails = props.sortReactionDetails, rest = __rest(props, [\"handleFetchReactions\", \"reverse\", \"sortReactionDetails\"]);\n    var _b = useProcessReactions(rest), existingReactions = _b.existingReactions, hasReactions = _b.hasReactions, totalReactionCount = _b.totalReactionCount;\n    var _c = useState(null), selectedReactionType = _c[0], setSelectedReactionType = _c[1];\n    var t = useTranslationContext('ReactionsList').t;\n    var handleReactionButtonClick = function (reactionType) {\n        if (totalReactionCount > MAX_MESSAGE_REACTIONS_TO_FETCH) {\n            return;\n        }\n        setSelectedReactionType(reactionType);\n    };\n    if (!hasReactions)\n        return null;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { \"aria-label\": t('aria/Reaction list'), className: clsx('str-chat__reaction-list str-chat__message-reactions-container', {\n                'str-chat__reaction-list--reverse': reverse,\n            }), \"data-testid\": 'reaction-list', role: 'figure' },\n            React.createElement(\"ul\", { className: 'str-chat__message-reactions' },\n                existingReactions.map(function (_a) {\n                    var EmojiComponent = _a.EmojiComponent, isOwnReaction = _a.isOwnReaction, reactionCount = _a.reactionCount, reactionType = _a.reactionType;\n                    return EmojiComponent && (React.createElement(\"li\", { className: clsx('str-chat__message-reaction', {\n                            'str-chat__message-reaction-own': isOwnReaction,\n                        }), key: reactionType },\n                        React.createElement(\"button\", { \"aria-label\": \"Reactions: \".concat(reactionType), \"data-testid\": \"reactions-list-button-\".concat(reactionType), onClick: function () { return handleReactionButtonClick(reactionType); }, type: 'button' },\n                            React.createElement(\"span\", { className: 'str-chat__message-reaction-emoji' },\n                                React.createElement(EmojiComponent, null)),\n                            \"\\u00A0\",\n                            React.createElement(\"span\", { className: 'str-chat__message-reaction-count', \"data-testclass\": 'reaction-list-reaction-count' }, reactionCount))));\n                }),\n                React.createElement(\"li\", null,\n                    React.createElement(\"span\", { className: 'str-chat__reaction-list--counter' }, totalReactionCount)))),\n        React.createElement(ReactionsListModal, { handleFetchReactions: handleFetchReactions, onClose: function () { return setSelectedReactionType(null); }, onSelectedReactionTypeChange: setSelectedReactionType, open: selectedReactionType !== null, reactions: existingReactions, selectedReactionType: selectedReactionType, sortReactionDetails: sortReactionDetails })));\n};\n/**\n * Component that displays a list of reactions on a message.\n */\nexport var ReactionsList = React.memo(UnMemoizedReactionsList);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}