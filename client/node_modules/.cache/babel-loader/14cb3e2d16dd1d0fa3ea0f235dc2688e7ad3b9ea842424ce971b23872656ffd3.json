{"ast":null,"code":"import React from 'react';\nimport { ChatDown } from '../ChatDown/ChatDown';\nimport { LoadingChannels } from '../Loading/LoadingChannels';\nimport { useTranslationContext } from '../../context';\n/**\n * A preview list of channels, allowing you to select the channel you want to open\n */\nexport var ChannelListMessenger = function (props) {\n  var children = props.children,\n    _a = props.error,\n    error = _a === void 0 ? null : _a,\n    loading = props.loading,\n    _b = props.LoadingErrorIndicator,\n    LoadingErrorIndicator = _b === void 0 ? ChatDown : _b,\n    _c = props.LoadingIndicator,\n    LoadingIndicator = _c === void 0 ? LoadingChannels : _c;\n  var t = useTranslationContext('ChannelListMessenger').t;\n  if (error) {\n    return React.createElement(LoadingErrorIndicator, {\n      type: 'Connection Error'\n    });\n  }\n  if (loading) {\n    return React.createElement(LoadingIndicator, null);\n  }\n  return React.createElement(\"div\", {\n    className: 'str-chat__channel-list-messenger str-chat__channel-list-messenger-react'\n  }, React.createElement(\"div\", {\n    \"aria-label\": t('aria/Channel list'),\n    className: 'str-chat__channel-list-messenger__main str-chat__channel-list-messenger-react__main',\n    role: 'listbox'\n  }, children));\n};","map":{"version":3,"names":["React","ChatDown","LoadingChannels","useTranslationContext","ChannelListMessenger","props","children","_a","error","loading","_b","LoadingErrorIndicator","_c","LoadingIndicator","t","createElement","type","className","role"],"sources":["C:/Users/Gesti/Desktop/chat_application/client/node_modules/stream-chat-react/dist/components/ChannelList/ChannelListMessenger.js"],"sourcesContent":["import React from 'react';\nimport { ChatDown } from '../ChatDown/ChatDown';\nimport { LoadingChannels } from '../Loading/LoadingChannels';\nimport { useTranslationContext } from '../../context';\n/**\n * A preview list of channels, allowing you to select the channel you want to open\n */\nexport var ChannelListMessenger = function (props) {\n    var children = props.children, _a = props.error, error = _a === void 0 ? null : _a, loading = props.loading, _b = props.LoadingErrorIndicator, LoadingErrorIndicator = _b === void 0 ? ChatDown : _b, _c = props.LoadingIndicator, LoadingIndicator = _c === void 0 ? LoadingChannels : _c;\n    var t = useTranslationContext('ChannelListMessenger').t;\n    if (error) {\n        return React.createElement(LoadingErrorIndicator, { type: 'Connection Error' });\n    }\n    if (loading) {\n        return React.createElement(LoadingIndicator, null);\n    }\n    return (React.createElement(\"div\", { className: 'str-chat__channel-list-messenger str-chat__channel-list-messenger-react' },\n        React.createElement(\"div\", { \"aria-label\": t('aria/Channel list'), className: 'str-chat__channel-list-messenger__main str-chat__channel-list-messenger-react__main', role: 'listbox' }, children)));\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,qBAAqB,QAAQ,eAAe;AACrD;AACA;AACA;AACA,OAAO,IAAIC,oBAAoB,GAAG,SAAAA,CAAUC,KAAK,EAAE;EAC/C,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;IAAEC,EAAE,GAAGF,KAAK,CAACG,KAAK;IAAEA,KAAK,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,EAAE;IAAEE,OAAO,GAAGJ,KAAK,CAACI,OAAO;IAAEC,EAAE,GAAGL,KAAK,CAACM,qBAAqB;IAAEA,qBAAqB,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAGT,QAAQ,GAAGS,EAAE;IAAEE,EAAE,GAAGP,KAAK,CAACQ,gBAAgB;IAAEA,gBAAgB,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAGV,eAAe,GAAGU,EAAE;EAC1R,IAAIE,CAAC,GAAGX,qBAAqB,CAAC,sBAAsB,CAAC,CAACW,CAAC;EACvD,IAAIN,KAAK,EAAE;IACP,OAAOR,KAAK,CAACe,aAAa,CAACJ,qBAAqB,EAAE;MAAEK,IAAI,EAAE;IAAmB,CAAC,CAAC;EACnF;EACA,IAAIP,OAAO,EAAE;IACT,OAAOT,KAAK,CAACe,aAAa,CAACF,gBAAgB,EAAE,IAAI,CAAC;EACtD;EACA,OAAQb,KAAK,CAACe,aAAa,CAAC,KAAK,EAAE;IAAEE,SAAS,EAAE;EAA0E,CAAC,EACvHjB,KAAK,CAACe,aAAa,CAAC,KAAK,EAAE;IAAE,YAAY,EAAED,CAAC,CAAC,mBAAmB,CAAC;IAAEG,SAAS,EAAE,qFAAqF;IAAEC,IAAI,EAAE;EAAU,CAAC,EAAEZ,QAAQ,CAAC,CAAC;AAC1M,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}