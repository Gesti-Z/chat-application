{"ast":null,"code":"import { __rest } from \"tslib\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useMessageContext } from '../../context/MessageContext';\nimport { useProcessReactions } from './hooks/useProcessReactions';\nimport { useEnterLeaveHandlers } from '../Tooltip/hooks';\nimport { PopperTooltip } from '../Tooltip';\nvar WithTooltip = function (_a) {\n  var children = _a.children,\n    onMouseEnter = _a.onMouseEnter,\n    onMouseLeave = _a.onMouseLeave,\n    title = _a.title;\n  var _b = useState(null),\n    referenceElement = _b[0],\n    setReferenceElement = _b[1];\n  var _c = useEnterLeaveHandlers({\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave\n    }),\n    handleEnter = _c.handleEnter,\n    handleLeave = _c.handleLeave,\n    tooltipVisible = _c.tooltipVisible;\n  var themeVersion = useChatContext('WithTooltip').themeVersion;\n  return React.createElement(React.Fragment, null, themeVersion === '2' && React.createElement(PopperTooltip, {\n    referenceElement: referenceElement,\n    visible: tooltipVisible\n  }, title), React.createElement(\"span\", {\n    onMouseEnter: handleEnter,\n    onMouseLeave: handleLeave,\n    ref: setReferenceElement\n  }, children));\n};\nvar UnMemoizedSimpleReactionsList = function (props) {\n  var propHandleReaction = props.handleReaction,\n    rest = __rest(props, [\"handleReaction\"]);\n  var contextHandleReaction = useMessageContext('SimpleReactionsList').handleReaction;\n  var _a = useProcessReactions(rest),\n    existingReactions = _a.existingReactions,\n    hasReactions = _a.hasReactions,\n    totalReactionCount = _a.totalReactionCount;\n  var _b = useState(undefined),\n    tooltipReactionType = _b[0],\n    setTooltipReactionType = _b[1];\n  var themeVersion = useChatContext('SimpleReactionsList').themeVersion;\n  var handleReaction = propHandleReaction || contextHandleReaction;\n  if (!hasReactions) return null;\n  return React.createElement(\"div\", {\n    className: 'str-chat__message-reactions-container'\n  }, React.createElement(\"ul\", {\n    className: 'str-chat__simple-reactions-list str-chat__message-reactions',\n    \"data-testid\": 'simple-reaction-list',\n    onMouseLeave: function () {\n      return setTooltipReactionType(undefined);\n    }\n  }, existingReactions.map(function (_a) {\n    var EmojiComponent = _a.EmojiComponent,\n      isOwnReaction = _a.isOwnReaction,\n      latestReactedUserNames = _a.latestReactedUserNames,\n      reactionType = _a.reactionType;\n    var tooltipVisible = tooltipReactionType === reactionType;\n    var tooltipContent = latestReactedUserNames.join(', ');\n    return EmojiComponent && React.createElement(\"li\", {\n      className: clsx('str-chat__simple-reactions-list-item', {\n        'str-chat__message-reaction-own': isOwnReaction\n      }),\n      key: reactionType,\n      onClick: function (event) {\n        return handleReaction(reactionType, event);\n      },\n      onKeyUp: function (event) {\n        return handleReaction(reactionType, event);\n      }\n    }, React.createElement(WithTooltip, {\n      onMouseEnter: function () {\n        return setTooltipReactionType(reactionType);\n      },\n      onMouseLeave: function () {\n        return setTooltipReactionType(undefined);\n      },\n      title: tooltipContent\n    }, React.createElement(EmojiComponent, null), \"\\u00A0\", tooltipVisible && themeVersion === '1' && React.createElement(\"div\", {\n      className: 'str-chat__simple-reactions-list-tooltip'\n    }, React.createElement(\"div\", {\n      className: 'arrow'\n    }), tooltipContent)));\n  }), React.createElement(\"li\", {\n    className: 'str-chat__simple-reactions-list-item--last-number'\n  }, totalReactionCount)));\n};\nexport var SimpleReactionsList = React.memo(UnMemoizedSimpleReactionsList);","map":{"version":3,"names":["__rest","React","useState","clsx","useChatContext","useMessageContext","useProcessReactions","useEnterLeaveHandlers","PopperTooltip","WithTooltip","_a","children","onMouseEnter","onMouseLeave","title","_b","referenceElement","setReferenceElement","_c","handleEnter","handleLeave","tooltipVisible","themeVersion","createElement","Fragment","visible","ref","UnMemoizedSimpleReactionsList","props","propHandleReaction","handleReaction","rest","contextHandleReaction","existingReactions","hasReactions","totalReactionCount","undefined","tooltipReactionType","setTooltipReactionType","className","map","EmojiComponent","isOwnReaction","latestReactedUserNames","reactionType","tooltipContent","join","key","onClick","event","onKeyUp","SimpleReactionsList","memo"],"sources":["C:/Users/Gesti/Desktop/chat_application/client/node_modules/stream-chat-react/dist/components/Reactions/SimpleReactionsList.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useMessageContext } from '../../context/MessageContext';\nimport { useProcessReactions } from './hooks/useProcessReactions';\nimport { useEnterLeaveHandlers } from '../Tooltip/hooks';\nimport { PopperTooltip } from '../Tooltip';\nvar WithTooltip = function (_a) {\n    var children = _a.children, onMouseEnter = _a.onMouseEnter, onMouseLeave = _a.onMouseLeave, title = _a.title;\n    var _b = useState(null), referenceElement = _b[0], setReferenceElement = _b[1];\n    var _c = useEnterLeaveHandlers({\n        onMouseEnter: onMouseEnter,\n        onMouseLeave: onMouseLeave,\n    }), handleEnter = _c.handleEnter, handleLeave = _c.handleLeave, tooltipVisible = _c.tooltipVisible;\n    var themeVersion = useChatContext('WithTooltip').themeVersion;\n    return (React.createElement(React.Fragment, null,\n        themeVersion === '2' && (React.createElement(PopperTooltip, { referenceElement: referenceElement, visible: tooltipVisible }, title)),\n        React.createElement(\"span\", { onMouseEnter: handleEnter, onMouseLeave: handleLeave, ref: setReferenceElement }, children)));\n};\nvar UnMemoizedSimpleReactionsList = function (props) {\n    var propHandleReaction = props.handleReaction, rest = __rest(props, [\"handleReaction\"]);\n    var contextHandleReaction = useMessageContext('SimpleReactionsList').handleReaction;\n    var _a = useProcessReactions(rest), existingReactions = _a.existingReactions, hasReactions = _a.hasReactions, totalReactionCount = _a.totalReactionCount;\n    var _b = useState(undefined), tooltipReactionType = _b[0], setTooltipReactionType = _b[1];\n    var themeVersion = useChatContext('SimpleReactionsList').themeVersion;\n    var handleReaction = propHandleReaction || contextHandleReaction;\n    if (!hasReactions)\n        return null;\n    return (React.createElement(\"div\", { className: 'str-chat__message-reactions-container' },\n        React.createElement(\"ul\", { className: 'str-chat__simple-reactions-list str-chat__message-reactions', \"data-testid\": 'simple-reaction-list', onMouseLeave: function () { return setTooltipReactionType(undefined); } },\n            existingReactions.map(function (_a) {\n                var EmojiComponent = _a.EmojiComponent, isOwnReaction = _a.isOwnReaction, latestReactedUserNames = _a.latestReactedUserNames, reactionType = _a.reactionType;\n                var tooltipVisible = tooltipReactionType === reactionType;\n                var tooltipContent = latestReactedUserNames.join(', ');\n                return (EmojiComponent && (React.createElement(\"li\", { className: clsx('str-chat__simple-reactions-list-item', {\n                        'str-chat__message-reaction-own': isOwnReaction,\n                    }), key: reactionType, onClick: function (event) { return handleReaction(reactionType, event); }, onKeyUp: function (event) { return handleReaction(reactionType, event); } },\n                    React.createElement(WithTooltip, { onMouseEnter: function () { return setTooltipReactionType(reactionType); }, onMouseLeave: function () { return setTooltipReactionType(undefined); }, title: tooltipContent },\n                        React.createElement(EmojiComponent, null),\n                        \"\\u00A0\",\n                        tooltipVisible && themeVersion === '1' && (React.createElement(\"div\", { className: 'str-chat__simple-reactions-list-tooltip' },\n                            React.createElement(\"div\", { className: 'arrow' }),\n                            tooltipContent))))));\n            }),\n            React.createElement(\"li\", { className: 'str-chat__simple-reactions-list-item--last-number' }, totalReactionCount))));\n};\nexport var SimpleReactionsList = React.memo(UnMemoizedSimpleReactionsList);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}