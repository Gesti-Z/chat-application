{"ast":null,"code":"import { __assign, __rest, __spreadArray } from \"tslib\";\nimport React, { useMemo } from 'react';\nimport { isAudioAttachment, isFileAttachment, isMediaAttachment, isScrapedContent, isUploadedImage, isVoiceRecordingAttachment } from './utils';\nimport { AudioContainer, CardContainer, FileContainer, GalleryContainer, ImageContainer, MediaContainer, UnsupportedAttachmentContainer, VoiceRecordingContainer } from './AttachmentContainer';\nvar CONTAINER_MAP = {\n  audio: AudioContainer,\n  card: CardContainer,\n  file: FileContainer,\n  media: MediaContainer,\n  unsupported: UnsupportedAttachmentContainer,\n  voiceRecording: VoiceRecordingContainer\n};\nexport var ATTACHMENT_GROUPS_ORDER = ['card', 'gallery', 'image', 'media', 'audio', 'voiceRecording', 'file', 'unsupported'];\n/**\n * A component used for rendering message attachments. By default, the component supports: AttachmentActions, Audio, Card, File, Gallery, Image, and Video\n */\nexport var Attachment = function (props) {\n  var attachments = props.attachments;\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  var groupedAttachments = useMemo(function () {\n    return renderGroupedAttachments(props);\n  }, [attachments]);\n  return React.createElement(\"div\", {\n    className: 'str-chat__attachment-list'\n  }, ATTACHMENT_GROUPS_ORDER.reduce(function (acc, groupName) {\n    return __spreadArray(__spreadArray([], acc, true), groupedAttachments[groupName], true);\n  }, []));\n};\nvar renderGroupedAttachments = function (_a) {\n  var attachments = _a.attachments,\n    rest = __rest(_a, [\"attachments\"]);\n  var uploadedImages = attachments.filter(function (attachment) {\n    return isUploadedImage(attachment);\n  });\n  var containers = attachments.filter(function (attachment) {\n    return !isUploadedImage(attachment);\n  }).reduce(function (typeMap, attachment) {\n    var attachmentType = getAttachmentType(attachment);\n    var Container = CONTAINER_MAP[attachmentType];\n    typeMap[attachmentType].push(React.createElement(Container, __assign({\n      key: \"\".concat(attachmentType, \"-\").concat(typeMap[attachmentType].length)\n    }, rest, {\n      attachment: attachment\n    })));\n    return typeMap;\n  }, {\n    audio: [],\n    card: [],\n    file: [],\n    media: [],\n    unsupported: [],\n    // not used in reduce\n    // eslint-disable-next-line sort-keys\n    image: [],\n    // eslint-disable-next-line sort-keys\n    gallery: [],\n    voiceRecording: []\n  });\n  if (uploadedImages.length > 1) {\n    containers['gallery'] = [React.createElement(GalleryContainer, __assign({\n      key: 'gallery-container'\n    }, rest, {\n      attachment: {\n        images: uploadedImages,\n        type: 'gallery'\n      }\n    }))];\n  } else if (uploadedImages.length === 1) {\n    containers['image'] = [React.createElement(ImageContainer, __assign({\n      key: 'image-container'\n    }, rest, {\n      attachment: uploadedImages[0]\n    }))];\n  }\n  return containers;\n};\nvar getAttachmentType = function (attachment) {\n  if (isScrapedContent(attachment)) {\n    return 'card';\n  } else if (isMediaAttachment(attachment)) {\n    return 'media';\n  } else if (isAudioAttachment(attachment)) {\n    return 'audio';\n  } else if (isVoiceRecordingAttachment(attachment)) {\n    return 'voiceRecording';\n  } else if (isFileAttachment(attachment)) {\n    return 'file';\n  }\n  return 'unsupported';\n};","map":{"version":3,"names":["__assign","__rest","__spreadArray","React","useMemo","isAudioAttachment","isFileAttachment","isMediaAttachment","isScrapedContent","isUploadedImage","isVoiceRecordingAttachment","AudioContainer","CardContainer","FileContainer","GalleryContainer","ImageContainer","MediaContainer","UnsupportedAttachmentContainer","VoiceRecordingContainer","CONTAINER_MAP","audio","card","file","media","unsupported","voiceRecording","ATTACHMENT_GROUPS_ORDER","Attachment","props","attachments","groupedAttachments","renderGroupedAttachments","createElement","className","reduce","acc","groupName","_a","rest","uploadedImages","filter","attachment","containers","typeMap","attachmentType","getAttachmentType","Container","push","key","concat","length","image","gallery","images","type"],"sources":["C:/Users/Gesti/Desktop/chat_application/client/node_modules/stream-chat-react/dist/components/Attachment/Attachment.js"],"sourcesContent":["import { __assign, __rest, __spreadArray } from \"tslib\";\nimport React, { useMemo } from 'react';\nimport { isAudioAttachment, isFileAttachment, isMediaAttachment, isScrapedContent, isUploadedImage, isVoiceRecordingAttachment, } from './utils';\nimport { AudioContainer, CardContainer, FileContainer, GalleryContainer, ImageContainer, MediaContainer, UnsupportedAttachmentContainer, VoiceRecordingContainer, } from './AttachmentContainer';\nvar CONTAINER_MAP = {\n    audio: AudioContainer,\n    card: CardContainer,\n    file: FileContainer,\n    media: MediaContainer,\n    unsupported: UnsupportedAttachmentContainer,\n    voiceRecording: VoiceRecordingContainer,\n};\nexport var ATTACHMENT_GROUPS_ORDER = [\n    'card',\n    'gallery',\n    'image',\n    'media',\n    'audio',\n    'voiceRecording',\n    'file',\n    'unsupported',\n];\n/**\n * A component used for rendering message attachments. By default, the component supports: AttachmentActions, Audio, Card, File, Gallery, Image, and Video\n */\nexport var Attachment = function (props) {\n    var attachments = props.attachments;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    var groupedAttachments = useMemo(function () { return renderGroupedAttachments(props); }, [attachments]);\n    return (React.createElement(\"div\", { className: 'str-chat__attachment-list' }, ATTACHMENT_GROUPS_ORDER.reduce(function (acc, groupName) { return __spreadArray(__spreadArray([], acc, true), groupedAttachments[groupName], true); }, [])));\n};\nvar renderGroupedAttachments = function (_a) {\n    var attachments = _a.attachments, rest = __rest(_a, [\"attachments\"]);\n    var uploadedImages = attachments.filter(function (attachment) {\n        return isUploadedImage(attachment);\n    });\n    var containers = attachments\n        .filter(function (attachment) { return !isUploadedImage(attachment); })\n        .reduce(function (typeMap, attachment) {\n        var attachmentType = getAttachmentType(attachment);\n        var Container = CONTAINER_MAP[attachmentType];\n        typeMap[attachmentType].push(React.createElement(Container, __assign({ key: \"\".concat(attachmentType, \"-\").concat(typeMap[attachmentType].length) }, rest, { attachment: attachment })));\n        return typeMap;\n    }, {\n        audio: [],\n        card: [],\n        file: [],\n        media: [],\n        unsupported: [],\n        // not used in reduce\n        // eslint-disable-next-line sort-keys\n        image: [],\n        // eslint-disable-next-line sort-keys\n        gallery: [],\n        voiceRecording: [],\n    });\n    if (uploadedImages.length > 1) {\n        containers['gallery'] = [\n            React.createElement(GalleryContainer, __assign({ key: 'gallery-container' }, rest, { attachment: {\n                    images: uploadedImages,\n                    type: 'gallery',\n                } })),\n        ];\n    }\n    else if (uploadedImages.length === 1) {\n        containers['image'] = [\n            React.createElement(ImageContainer, __assign({ key: 'image-container' }, rest, { attachment: uploadedImages[0] })),\n        ];\n    }\n    return containers;\n};\nvar getAttachmentType = function (attachment) {\n    if (isScrapedContent(attachment)) {\n        return 'card';\n    }\n    else if (isMediaAttachment(attachment)) {\n        return 'media';\n    }\n    else if (isAudioAttachment(attachment)) {\n        return 'audio';\n    }\n    else if (isVoiceRecordingAttachment(attachment)) {\n        return 'voiceRecording';\n    }\n    else if (isFileAttachment(attachment)) {\n        return 'file';\n    }\n    return 'unsupported';\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}