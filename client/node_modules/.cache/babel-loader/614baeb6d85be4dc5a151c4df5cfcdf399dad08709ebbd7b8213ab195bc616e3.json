{"ast":null,"code":"import React, { useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { divMod } from '../utils';\nexport var WaveProgressBar = function (_a) {\n  var _b = _a.amplitudesCount,\n    amplitudesCount = _b === void 0 ? 40 : _b,\n    _c = _a.progress,\n    progress = _c === void 0 ? 0 : _c,\n    seek = _a.seek,\n    waveformData = _a.waveformData;\n  var _d = useState(null),\n    progressIndicator = _d[0],\n    setProgressIndicator = _d[1];\n  var isDragging = useRef(false);\n  var handleMouseDown = function () {\n    if (!progressIndicator) return;\n    isDragging.current = true;\n    progressIndicator.style.cursor = 'grabbing';\n  };\n  var handleMouseMove = function (event) {\n    if (!isDragging.current) return;\n    seek(event);\n  };\n  var handleMouseUp = function () {\n    if (!progressIndicator) return;\n    isDragging.current = false;\n    progressIndicator.style.removeProperty('cursor');\n  };\n  var resampledWaveformData = useMemo(function () {\n    return waveformData.length === amplitudesCount ? waveformData : waveformData.length > amplitudesCount ? downSample(waveformData, amplitudesCount) : upSample(waveformData, amplitudesCount);\n  }, [amplitudesCount, waveformData]);\n  if (!waveformData.length) return null;\n  return React.createElement(\"div\", {\n    className: 'str-chat__wave-progress-bar__track',\n    \"data-testid\": 'wave-progress-bar-track',\n    onClick: seek,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseUp,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    role: 'progressbar'\n  }, resampledWaveformData.map(function (amplitude, i) {\n    var _a;\n    return React.createElement(\"div\", {\n      className: clsx('str-chat__wave-progress-bar__amplitude-bar', (_a = {}, _a['str-chat__wave-progress-bar__amplitude-bar--active'] = progress > i / resampledWaveformData.length * 100, _a)),\n      \"data-testid\": 'amplitude-bar',\n      key: \"amplitude-\".concat(i),\n      style: {\n        '--str-chat__wave-progress-bar__amplitude-bar-height': amplitude ? amplitude * 100 + '%' : '0%'\n      }\n    });\n  }), React.createElement(\"div\", {\n    className: 'str-chat__wave-progress-bar__progress-indicator',\n    \"data-testid\": 'wave-progress-bar-progress-indicator',\n    ref: setProgressIndicator,\n    style: {\n      left: \"\".concat(progress < 0 ? 0 : progress > 100 ? 100 : progress, \"%\")\n    }\n  }));\n};\n/**\n * The downSample function uses the Largest-Triangle-Three-Buckets (LTTB) algorithm.\n * See the thesis Downsampling Time Series for Visual Representation by Sveinn Steinarsson for more (https://skemman.is/bitstream/1946/15343/3/SS_MSthesis.pdf)\n * @param data\n * @param targetOutputSize\n */\nexport function downSample(data, targetOutputSize) {\n  if (data.length <= targetOutputSize || targetOutputSize === 0) {\n    return data;\n  }\n  if (targetOutputSize === 1) return [mean(data)];\n  var result = [];\n  // bucket size adjusted due to the fact that the first and the last item in the original data array is kept in target output\n  var bucketSize = (data.length - 2) / (targetOutputSize - 2);\n  var lastSelectedPointIndex = 0;\n  result.push(data[lastSelectedPointIndex]); // Always add the first point\n  var maxAreaPoint, maxArea, triangleArea;\n  for (var bucketIndex = 1; bucketIndex < targetOutputSize - 1; bucketIndex++) {\n    var previousBucketRefPoint = data[lastSelectedPointIndex];\n    var nextBucketMean = getNextBucketMean(data, bucketIndex, bucketSize);\n    var currentBucketStartIndex = Math.floor((bucketIndex - 1) * bucketSize) + 1;\n    var nextBucketStartIndex = Math.floor(bucketIndex * bucketSize) + 1;\n    var countUnitsBetweenAtoC = 1 + nextBucketStartIndex - currentBucketStartIndex;\n    maxArea = triangleArea = -1;\n    for (var currentPointIndex = currentBucketStartIndex; currentPointIndex < nextBucketStartIndex; currentPointIndex++) {\n      var countUnitsBetweenAtoB = Math.abs(currentPointIndex - currentBucketStartIndex) + 1;\n      var countUnitsBetweenBtoC = countUnitsBetweenAtoC - countUnitsBetweenAtoB;\n      var currentPointValue = data[currentPointIndex];\n      triangleArea = triangleAreaHeron(triangleBase(Math.abs(previousBucketRefPoint - currentPointValue), countUnitsBetweenAtoB), triangleBase(Math.abs(currentPointValue - nextBucketMean), countUnitsBetweenBtoC), triangleBase(Math.abs(previousBucketRefPoint - nextBucketMean), countUnitsBetweenAtoC));\n      if (triangleArea > maxArea) {\n        maxArea = triangleArea;\n        maxAreaPoint = data[currentPointIndex];\n        lastSelectedPointIndex = currentPointIndex;\n      }\n    }\n    if (typeof maxAreaPoint !== 'undefined') result.push(maxAreaPoint);\n  }\n  result.push(data[data.length - 1]); // Always add the last point\n  return result;\n}\nvar triangleAreaHeron = function (a, b, c) {\n  var s = (a + b + c) / 2;\n  return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n};\nvar triangleBase = function (a, b) {\n  return Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n};\nvar mean = function (values) {\n  return values.reduce(function (acc, value) {\n    return acc + value;\n  }, 0) / values.length;\n};\nvar getNextBucketMean = function (data, currentBucketIndex, bucketSize) {\n  var nextBucketStartIndex = Math.floor(currentBucketIndex * bucketSize) + 1;\n  var nextNextBucketStartIndex = Math.floor((currentBucketIndex + 1) * bucketSize) + 1;\n  nextNextBucketStartIndex = nextNextBucketStartIndex < data.length ? nextNextBucketStartIndex : data.length;\n  return mean(data.slice(nextBucketStartIndex, nextNextBucketStartIndex));\n};\nexport var upSample = function (values, targetSize) {\n  if (!values.length) {\n    console.warn('Cannot extend empty array of amplitudes.');\n    return values;\n  }\n  if (values.length > targetSize) {\n    console.warn('Requested to extend the waveformData that is longer than the target list size');\n    return values;\n  }\n  if (targetSize === values.length) return values;\n  // eslint-disable-next-line prefer-const\n  var _a = divMod(targetSize, values.length),\n    bucketSize = _a[0],\n    remainder = _a[1];\n  var result = [];\n  for (var i = 0; i < values.length; i++) {\n    var extra = remainder && remainder-- ? 1 : 0;\n    result.push.apply(result, Array(bucketSize + extra).fill(values[i]));\n  }\n  return result;\n};","map":{"version":3,"names":["React","useMemo","useRef","useState","clsx","divMod","WaveProgressBar","_a","_b","amplitudesCount","_c","progress","seek","waveformData","_d","progressIndicator","setProgressIndicator","isDragging","handleMouseDown","current","style","cursor","handleMouseMove","event","handleMouseUp","removeProperty","resampledWaveformData","length","downSample","upSample","createElement","className","onClick","onMouseDown","onMouseLeave","onMouseMove","onMouseUp","role","map","amplitude","i","key","concat","ref","left","data","targetOutputSize","mean","result","bucketSize","lastSelectedPointIndex","push","maxAreaPoint","maxArea","triangleArea","bucketIndex","previousBucketRefPoint","nextBucketMean","getNextBucketMean","currentBucketStartIndex","Math","floor","nextBucketStartIndex","countUnitsBetweenAtoC","currentPointIndex","countUnitsBetweenAtoB","abs","countUnitsBetweenBtoC","currentPointValue","triangleAreaHeron","triangleBase","a","b","c","s","sqrt","pow","values","reduce","acc","value","currentBucketIndex","nextNextBucketStartIndex","slice","targetSize","console","warn","remainder","extra","apply","Array","fill"],"sources":["C:/Users/Gesti/Desktop/chat_application/client/node_modules/stream-chat-react/dist/components/Attachment/components/WaveProgressBar.js"],"sourcesContent":["import React, { useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { divMod } from '../utils';\nexport var WaveProgressBar = function (_a) {\n    var _b = _a.amplitudesCount, amplitudesCount = _b === void 0 ? 40 : _b, _c = _a.progress, progress = _c === void 0 ? 0 : _c, seek = _a.seek, waveformData = _a.waveformData;\n    var _d = useState(null), progressIndicator = _d[0], setProgressIndicator = _d[1];\n    var isDragging = useRef(false);\n    var handleMouseDown = function () {\n        if (!progressIndicator)\n            return;\n        isDragging.current = true;\n        progressIndicator.style.cursor = 'grabbing';\n    };\n    var handleMouseMove = function (event) {\n        if (!isDragging.current)\n            return;\n        seek(event);\n    };\n    var handleMouseUp = function () {\n        if (!progressIndicator)\n            return;\n        isDragging.current = false;\n        progressIndicator.style.removeProperty('cursor');\n    };\n    var resampledWaveformData = useMemo(function () {\n        return waveformData.length === amplitudesCount\n            ? waveformData\n            : waveformData.length > amplitudesCount\n                ? downSample(waveformData, amplitudesCount)\n                : upSample(waveformData, amplitudesCount);\n    }, [amplitudesCount, waveformData]);\n    if (!waveformData.length)\n        return null;\n    return (React.createElement(\"div\", { className: 'str-chat__wave-progress-bar__track', \"data-testid\": 'wave-progress-bar-track', onClick: seek, onMouseDown: handleMouseDown, onMouseLeave: handleMouseUp, onMouseMove: handleMouseMove, onMouseUp: handleMouseUp, role: 'progressbar' },\n        resampledWaveformData.map(function (amplitude, i) {\n            var _a;\n            return (React.createElement(\"div\", { className: clsx('str-chat__wave-progress-bar__amplitude-bar', (_a = {},\n                    _a['str-chat__wave-progress-bar__amplitude-bar--active'] = progress > (i / resampledWaveformData.length) * 100,\n                    _a)), \"data-testid\": 'amplitude-bar', key: \"amplitude-\".concat(i), style: {\n                    '--str-chat__wave-progress-bar__amplitude-bar-height': amplitude\n                        ? amplitude * 100 + '%'\n                        : '0%',\n                } }));\n        }),\n        React.createElement(\"div\", { className: 'str-chat__wave-progress-bar__progress-indicator', \"data-testid\": 'wave-progress-bar-progress-indicator', ref: setProgressIndicator, style: { left: \"\".concat(progress < 0 ? 0 : progress > 100 ? 100 : progress, \"%\") } })));\n};\n/**\n * The downSample function uses the Largest-Triangle-Three-Buckets (LTTB) algorithm.\n * See the thesis Downsampling Time Series for Visual Representation by Sveinn Steinarsson for more (https://skemman.is/bitstream/1946/15343/3/SS_MSthesis.pdf)\n * @param data\n * @param targetOutputSize\n */\nexport function downSample(data, targetOutputSize) {\n    if (data.length <= targetOutputSize || targetOutputSize === 0) {\n        return data;\n    }\n    if (targetOutputSize === 1)\n        return [mean(data)];\n    var result = [];\n    // bucket size adjusted due to the fact that the first and the last item in the original data array is kept in target output\n    var bucketSize = (data.length - 2) / (targetOutputSize - 2);\n    var lastSelectedPointIndex = 0;\n    result.push(data[lastSelectedPointIndex]); // Always add the first point\n    var maxAreaPoint, maxArea, triangleArea;\n    for (var bucketIndex = 1; bucketIndex < targetOutputSize - 1; bucketIndex++) {\n        var previousBucketRefPoint = data[lastSelectedPointIndex];\n        var nextBucketMean = getNextBucketMean(data, bucketIndex, bucketSize);\n        var currentBucketStartIndex = Math.floor((bucketIndex - 1) * bucketSize) + 1;\n        var nextBucketStartIndex = Math.floor(bucketIndex * bucketSize) + 1;\n        var countUnitsBetweenAtoC = 1 + nextBucketStartIndex - currentBucketStartIndex;\n        maxArea = triangleArea = -1;\n        for (var currentPointIndex = currentBucketStartIndex; currentPointIndex < nextBucketStartIndex; currentPointIndex++) {\n            var countUnitsBetweenAtoB = Math.abs(currentPointIndex - currentBucketStartIndex) + 1;\n            var countUnitsBetweenBtoC = countUnitsBetweenAtoC - countUnitsBetweenAtoB;\n            var currentPointValue = data[currentPointIndex];\n            triangleArea = triangleAreaHeron(triangleBase(Math.abs(previousBucketRefPoint - currentPointValue), countUnitsBetweenAtoB), triangleBase(Math.abs(currentPointValue - nextBucketMean), countUnitsBetweenBtoC), triangleBase(Math.abs(previousBucketRefPoint - nextBucketMean), countUnitsBetweenAtoC));\n            if (triangleArea > maxArea) {\n                maxArea = triangleArea;\n                maxAreaPoint = data[currentPointIndex];\n                lastSelectedPointIndex = currentPointIndex;\n            }\n        }\n        if (typeof maxAreaPoint !== 'undefined')\n            result.push(maxAreaPoint);\n    }\n    result.push(data[data.length - 1]); // Always add the last point\n    return result;\n}\nvar triangleAreaHeron = function (a, b, c) {\n    var s = (a + b + c) / 2;\n    return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n};\nvar triangleBase = function (a, b) { return Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)); };\nvar mean = function (values) { return values.reduce(function (acc, value) { return acc + value; }, 0) / values.length; };\nvar getNextBucketMean = function (data, currentBucketIndex, bucketSize) {\n    var nextBucketStartIndex = Math.floor(currentBucketIndex * bucketSize) + 1;\n    var nextNextBucketStartIndex = Math.floor((currentBucketIndex + 1) * bucketSize) + 1;\n    nextNextBucketStartIndex =\n        nextNextBucketStartIndex < data.length ? nextNextBucketStartIndex : data.length;\n    return mean(data.slice(nextBucketStartIndex, nextNextBucketStartIndex));\n};\nexport var upSample = function (values, targetSize) {\n    if (!values.length) {\n        console.warn('Cannot extend empty array of amplitudes.');\n        return values;\n    }\n    if (values.length > targetSize) {\n        console.warn('Requested to extend the waveformData that is longer than the target list size');\n        return values;\n    }\n    if (targetSize === values.length)\n        return values;\n    // eslint-disable-next-line prefer-const\n    var _a = divMod(targetSize, values.length), bucketSize = _a[0], remainder = _a[1];\n    var result = [];\n    for (var i = 0; i < values.length; i++) {\n        var extra = remainder && remainder-- ? 1 : 0;\n        result.push.apply(result, Array(bucketSize + extra).fill(values[i]));\n    }\n    return result;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}