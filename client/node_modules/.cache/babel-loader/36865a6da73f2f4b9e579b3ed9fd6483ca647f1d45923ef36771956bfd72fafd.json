{"ast":null,"code":"import { useEffect, useRef, useState } from 'react';\nexport var useMessageSetKey = function (_a) {\n  var messages = _a.messages;\n  /**\n   * Logic to update the key of the virtuoso component when the list jumps to a new location.\n   */\n  var _b = useState(+new Date()),\n    messageSetKey = _b[0],\n    setMessageSetKey = _b[1];\n  var firstMessageId = useRef();\n  useEffect(function () {\n    var _a;\n    var continuousSet = messages === null || messages === void 0 ? void 0 : messages.find(function (message) {\n      return message.id === firstMessageId.current;\n    });\n    if (!continuousSet) {\n      setMessageSetKey(+new Date());\n    }\n    firstMessageId.current = (_a = messages === null || messages === void 0 ? void 0 : messages[0]) === null || _a === void 0 ? void 0 : _a.id;\n  }, [messages]);\n  return {\n    messageSetKey: messageSetKey\n  };\n};","map":{"version":3,"names":["useEffect","useRef","useState","useMessageSetKey","_a","messages","_b","Date","messageSetKey","setMessageSetKey","firstMessageId","continuousSet","find","message","id","current"],"sources":["C:/Users/Gesti/Desktop/chat_application/client/node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/useMessageSetKey.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nexport var useMessageSetKey = function (_a) {\n    var messages = _a.messages;\n    /**\n     * Logic to update the key of the virtuoso component when the list jumps to a new location.\n     */\n    var _b = useState(+new Date()), messageSetKey = _b[0], setMessageSetKey = _b[1];\n    var firstMessageId = useRef();\n    useEffect(function () {\n        var _a;\n        var continuousSet = messages === null || messages === void 0 ? void 0 : messages.find(function (message) { return message.id === firstMessageId.current; });\n        if (!continuousSet) {\n            setMessageSetKey(+new Date());\n        }\n        firstMessageId.current = (_a = messages === null || messages === void 0 ? void 0 : messages[0]) === null || _a === void 0 ? void 0 : _a.id;\n    }, [messages]);\n    return {\n        messageSetKey: messageSetKey,\n    };\n};\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAO,IAAIC,gBAAgB,GAAG,SAAAA,CAAUC,EAAE,EAAE;EACxC,IAAIC,QAAQ,GAAGD,EAAE,CAACC,QAAQ;EAC1B;AACJ;AACA;EACI,IAAIC,EAAE,GAAGJ,QAAQ,CAAC,CAAC,IAAIK,IAAI,CAAC,CAAC,CAAC;IAAEC,aAAa,GAAGF,EAAE,CAAC,CAAC,CAAC;IAAEG,gBAAgB,GAAGH,EAAE,CAAC,CAAC,CAAC;EAC/E,IAAII,cAAc,GAAGT,MAAM,CAAC,CAAC;EAC7BD,SAAS,CAAC,YAAY;IAClB,IAAII,EAAE;IACN,IAAIO,aAAa,GAAGN,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACO,IAAI,CAAC,UAAUC,OAAO,EAAE;MAAE,OAAOA,OAAO,CAACC,EAAE,KAAKJ,cAAc,CAACK,OAAO;IAAE,CAAC,CAAC;IAC3J,IAAI,CAACJ,aAAa,EAAE;MAChBF,gBAAgB,CAAC,CAAC,IAAIF,IAAI,CAAC,CAAC,CAAC;IACjC;IACAG,cAAc,CAACK,OAAO,GAAG,CAACX,EAAE,GAAGC,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAAC,CAAC,CAAC,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACU,EAAE;EAC9I,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EACd,OAAO;IACHG,aAAa,EAAEA;EACnB,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}