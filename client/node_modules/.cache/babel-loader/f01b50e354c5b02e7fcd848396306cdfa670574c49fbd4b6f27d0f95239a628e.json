{"ast":null,"code":"import { __assign, __awaiter, __generator, __rest } from \"tslib\";\nimport React, { useCallback, useEffect, useLayoutEffect, useMemo, useReducer, useRef, useState } from 'react';\nimport debounce from 'lodash.debounce';\nimport defaultsDeep from 'lodash.defaultsdeep';\nimport throttle from 'lodash.throttle';\nimport { nanoid } from 'nanoid';\nimport clsx from 'clsx';\nimport { channelReducer, initialState } from './channelState';\nimport { useCreateChannelStateContext } from './hooks/useCreateChannelStateContext';\nimport { useCreateTypingContext } from './hooks/useCreateTypingContext';\nimport { useEditMessageHandler } from './hooks/useEditMessageHandler';\nimport { useIsMounted } from './hooks/useIsMounted';\nimport { useMentionsHandlers } from './hooks/useMentionsHandlers';\nimport { Attachment as DefaultAttachment } from '../Attachment/Attachment';\nimport { LoadingErrorIndicator as DefaultLoadingErrorIndicator } from '../Loading';\nimport { LoadingChannel as DefaultLoadingIndicator } from './LoadingChannel';\nimport { MessageSimple } from '../Message/MessageSimple';\nimport { DropzoneProvider } from '../MessageInput/DropzoneProvider';\nimport { ChannelActionProvider } from '../../context/ChannelActionContext';\nimport { ChannelStateProvider } from '../../context/ChannelStateContext';\nimport { ComponentProvider } from '../../context/ComponentContext';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { TypingProvider } from '../../context/TypingContext';\nimport { DEFAULT_INITIAL_CHANNEL_PAGE_SIZE, DEFAULT_JUMP_TO_PAGE_SIZE, DEFAULT_NEXT_CHANNEL_PAGE_SIZE, DEFAULT_THREAD_PAGE_SIZE } from '../../constants/limits';\nimport { hasMoreMessagesProbably, UnreadMessagesSeparator } from '../MessageList';\nimport { useChannelContainerClasses } from './hooks/useChannelContainerClasses';\nimport { findInMsgSetByDate, findInMsgSetById, makeAddNotifications } from './utils';\nimport { getChannel } from '../../utils';\nimport { getImageAttachmentConfiguration, getVideoAttachmentConfiguration } from '../Attachment/attachment-sizing';\nimport { defaultReactionOptions } from '../Reactions';\nimport { EventComponent } from '../EventComponent';\nimport { DateSeparator } from '../DateSeparator';\nvar isUserResponseArray = function (output) {\n  var _a;\n  return ((_a = output[0]) === null || _a === void 0 ? void 0 : _a.id) != null;\n};\nvar UnMemoizedChannel = function (props) {\n  var propsChannel = props.channel,\n    _a = props.EmptyPlaceholder,\n    EmptyPlaceholder = _a === void 0 ? null : _a,\n    LoadingErrorIndicator = props.LoadingErrorIndicator,\n    _b = props.LoadingIndicator,\n    LoadingIndicator = _b === void 0 ? DefaultLoadingIndicator : _b;\n  var _c = useChatContext('Channel'),\n    contextChannel = _c.channel,\n    channelsQueryState = _c.channelsQueryState,\n    customClasses = _c.customClasses,\n    theme = _c.theme;\n  var _d = useChannelContainerClasses({\n      customClasses: customClasses\n    }),\n    channelClass = _d.channelClass,\n    chatClass = _d.chatClass;\n  var channel = propsChannel || contextChannel;\n  var className = clsx(chatClass, theme, channelClass);\n  if (channelsQueryState.queryInProgress === 'reload' && LoadingIndicator) {\n    return React.createElement(\"div\", {\n      className: className\n    }, React.createElement(LoadingIndicator, null));\n  }\n  if (channelsQueryState.error && LoadingErrorIndicator) {\n    return React.createElement(\"div\", {\n      className: className\n    }, React.createElement(LoadingErrorIndicator, {\n      error: channelsQueryState.error\n    }));\n  }\n  if (!(channel === null || channel === void 0 ? void 0 : channel.cid)) {\n    return React.createElement(\"div\", {\n      className: className\n    }, EmptyPlaceholder);\n  }\n  return React.createElement(ChannelInner, __assign({}, props, {\n    channel: channel,\n    key: channel.cid\n  }));\n};\nvar ChannelInner = function (props) {\n  var _a;\n  var acceptedFiles = props.acceptedFiles,\n    activeUnreadHandler = props.activeUnreadHandler,\n    channel = props.channel,\n    propChannelQueryOptions = props.channelQueryOptions,\n    children = props.children,\n    doDeleteMessageRequest = props.doDeleteMessageRequest,\n    doMarkReadRequest = props.doMarkReadRequest,\n    doSendMessageRequest = props.doSendMessageRequest,\n    doUpdateMessageRequest = props.doUpdateMessageRequest,\n    _b = props.dragAndDropWindow,\n    dragAndDropWindow = _b === void 0 ? false : _b,\n    enrichURLForPreviewConfig = props.enrichURLForPreviewConfig,\n    _c = props.initializeOnMount,\n    initializeOnMount = _c === void 0 ? true : _c,\n    _d = props.LoadingErrorIndicator,\n    LoadingErrorIndicator = _d === void 0 ? DefaultLoadingErrorIndicator : _d,\n    _e = props.LoadingIndicator,\n    LoadingIndicator = _e === void 0 ? DefaultLoadingIndicator : _e,\n    _f = props.markReadOnMount,\n    markReadOnMount = _f === void 0 ? true : _f,\n    maxNumberOfFiles = props.maxNumberOfFiles,\n    _g = props.multipleUploads,\n    multipleUploads = _g === void 0 ? true : _g,\n    onMentionsClick = props.onMentionsClick,\n    onMentionsHover = props.onMentionsHover,\n    _h = props.optionalMessageInputProps,\n    optionalMessageInputProps = _h === void 0 ? {} : _h,\n    skipMessageDataMemoization = props.skipMessageDataMemoization;\n  var channelQueryOptions = useMemo(function () {\n    return defaultsDeep(propChannelQueryOptions, {\n      messages: {\n        limit: DEFAULT_INITIAL_CHANNEL_PAGE_SIZE\n      }\n    });\n  }, [propChannelQueryOptions]);\n  var _j = useChatContext('Channel'),\n    client = _j.client,\n    customClasses = _j.customClasses,\n    latestMessageDatesByChannels = _j.latestMessageDatesByChannels,\n    mutes = _j.mutes,\n    theme = _j.theme;\n  var t = useTranslationContext('Channel').t;\n  var _k = useChannelContainerClasses({\n      customClasses: customClasses\n    }),\n    channelClass = _k.channelClass,\n    chatClass = _k.chatClass,\n    chatContainerClass = _k.chatContainerClass,\n    windowsEmojiClass = _k.windowsEmojiClass;\n  var _l = useState(channel.getConfig()),\n    channelConfig = _l[0],\n    setChannelConfig = _l[1];\n  var _m = useState([]),\n    notifications = _m[0],\n    setNotifications = _m[1];\n  var _o = useState(),\n    quotedMessage = _o[0],\n    setQuotedMessage = _o[1];\n  var _p = useState(),\n    channelUnreadUiState = _p[0],\n    _setChannelUnreadUiState = _p[1];\n  var notificationTimeouts = [];\n  var _q = useReducer(channelReducer, __assign(__assign({}, initialState), {\n      loading: !channel.initialized\n    })),\n    state = _q[0],\n    dispatch = _q[1];\n  var isMounted = useIsMounted();\n  var originalTitle = useRef('');\n  var lastRead = useRef();\n  var online = useRef(true);\n  var channelCapabilitiesArray = (_a = channel.data) === null || _a === void 0 ? void 0 : _a.own_capabilities;\n  var throttledCopyStateFromChannel = throttle(function () {\n    return dispatch({\n      channel: channel,\n      type: 'copyStateFromChannelOnEvent'\n    });\n  }, 500, {\n    leading: true,\n    trailing: true\n  });\n  var setChannelUnreadUiState = useMemo(function () {\n    return throttle(_setChannelUnreadUiState, 200, {\n      leading: true,\n      trailing: false\n    });\n  }, []);\n  var markRead = useMemo(function () {\n    return throttle(function (options) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var _a, updateChannelUiUnreadState, markReadResponse, e_1;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              _a = (options !== null && options !== void 0 ? options : {}).updateChannelUiUnreadState, updateChannelUiUnreadState = _a === void 0 ? true : _a;\n              if (channel.disconnected || !(channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.read_events)) {\n                return [2 /*return*/];\n              }\n              lastRead.current = new Date();\n              _b.label = 1;\n            case 1:\n              _b.trys.push([1, 5,, 6]);\n              if (!doMarkReadRequest) return [3 /*break*/, 2];\n              doMarkReadRequest(channel, updateChannelUiUnreadState ? setChannelUnreadUiState : undefined);\n              return [3 /*break*/, 4];\n            case 2:\n              return [4 /*yield*/, channel.markRead()];\n            case 3:\n              markReadResponse = _b.sent();\n              if (updateChannelUiUnreadState && markReadResponse) {\n                _setChannelUnreadUiState({\n                  last_read: lastRead.current,\n                  last_read_message_id: markReadResponse.event.last_read_message_id,\n                  unread_messages: 0\n                });\n              }\n              _b.label = 4;\n            case 4:\n              if (activeUnreadHandler) {\n                activeUnreadHandler(0, originalTitle.current);\n              } else if (originalTitle.current) {\n                document.title = originalTitle.current;\n              }\n              return [3 /*break*/, 6];\n            case 5:\n              e_1 = _b.sent();\n              console.error(t('Failed to mark channel as read'));\n              return [3 /*break*/, 6];\n            case 6:\n              return [2 /*return*/];\n          }\n        });\n      });\n    }, 500, {\n      leading: true,\n      trailing: false\n    });\n  }, [activeUnreadHandler, channel, channelConfig, doMarkReadRequest, setChannelUnreadUiState, t]);\n  var handleEvent = function (event) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var mainChannelUpdated, unread, messageDate, cid, oldestID;\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n      return __generator(this, function (_k) {\n        switch (_k.label) {\n          case 0:\n            if (event.message) {\n              dispatch({\n                channel: channel,\n                message: event.message,\n                type: 'updateThreadOnEvent'\n              });\n            }\n            if (event.type === 'user.watching.start' || event.type === 'user.watching.stop') return [2 /*return*/];\n            if (event.type === 'typing.start' || event.type === 'typing.stop') {\n              return [2 /*return*/, dispatch({\n                channel: channel,\n                type: 'setTyping'\n              })];\n            }\n            if (event.type === 'connection.changed' && typeof event.online === 'boolean') {\n              online.current = event.online;\n            }\n            if (event.type === 'message.new') {\n              mainChannelUpdated = !((_a = event.message) === null || _a === void 0 ? void 0 : _a.parent_id) || ((_b = event.message) === null || _b === void 0 ? void 0 : _b.show_in_channel);\n              if (mainChannelUpdated) {\n                if (document.hidden && (channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.read_events) && !channel.muteStatus().muted) {\n                  unread = channel.countUnread(lastRead.current);\n                  if (activeUnreadHandler) {\n                    activeUnreadHandler(unread, originalTitle.current);\n                  } else {\n                    document.title = \"(\".concat(unread, \") \").concat(originalTitle.current);\n                  }\n                }\n              }\n              if (((_d = (_c = event.message) === null || _c === void 0 ? void 0 : _c.user) === null || _d === void 0 ? void 0 : _d.id) === client.userID && ((_e = event === null || event === void 0 ? void 0 : event.message) === null || _e === void 0 ? void 0 : _e.created_at) && ((_f = event === null || event === void 0 ? void 0 : event.message) === null || _f === void 0 ? void 0 : _f.cid)) {\n                messageDate = new Date(event.message.created_at);\n                cid = event.message.cid;\n                if (!latestMessageDatesByChannels[cid] || latestMessageDatesByChannels[cid].getTime() < messageDate.getTime()) {\n                  latestMessageDatesByChannels[cid] = messageDate;\n                }\n              }\n            }\n            if (!(event.type === 'user.deleted')) return [3 /*break*/, 2];\n            oldestID = (_j = (_h = (_g = channel.state) === null || _g === void 0 ? void 0 : _g.messages) === null || _h === void 0 ? void 0 : _h[0]) === null || _j === void 0 ? void 0 : _j.id;\n            /**\n             * As the channel state is not normalized we re-fetch the channel data. Thus, we avoid having to search for user references in the channel state.\n             */\n            // FIXME: we should use channelQueryOptions if they are available\n            return [4 /*yield*/, channel.query({\n              messages: {\n                id_lt: oldestID,\n                limit: DEFAULT_NEXT_CHANNEL_PAGE_SIZE\n              },\n              watchers: {\n                limit: DEFAULT_NEXT_CHANNEL_PAGE_SIZE\n              }\n            })];\n          case 1:\n            /**\n             * As the channel state is not normalized we re-fetch the channel data. Thus, we avoid having to search for user references in the channel state.\n             */\n            // FIXME: we should use channelQueryOptions if they are available\n            _k.sent();\n            _k.label = 2;\n          case 2:\n            if (event.type === 'notification.mark_unread') _setChannelUnreadUiState(function (prev) {\n              var _a;\n              if (!(event.last_read_at && event.user)) return prev;\n              return {\n                first_unread_message_id: event.first_unread_message_id,\n                last_read: new Date(event.last_read_at),\n                last_read_message_id: event.last_read_message_id,\n                unread_messages: (_a = event.unread_messages) !== null && _a !== void 0 ? _a : 0\n              };\n            });\n            if (event.type === 'channel.truncated' && event.cid === channel.cid) {\n              _setChannelUnreadUiState(undefined);\n            }\n            throttledCopyStateFromChannel();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  // useLayoutEffect here to prevent spinner. Use Suspense when it is available in stable release\n  useLayoutEffect(function () {\n    var errored = false;\n    var done = false;\n    var channelInitializedExternally = true;\n    (function () {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var members, _i, _a, member, userId, _b, user, user_id, config, e_2, _c, user, ownReadState;\n        var _d, _e;\n        return __generator(this, function (_f) {\n          switch (_f.label) {\n            case 0:\n              if (!(!channel.initialized && initializeOnMount)) return [3 /*break*/, 4];\n              _f.label = 1;\n            case 1:\n              _f.trys.push([1, 3,, 4]);\n              members = [];\n              if (!channel.id && ((_d = channel.data) === null || _d === void 0 ? void 0 : _d.members)) {\n                for (_i = 0, _a = channel.data.members; _i < _a.length; _i++) {\n                  member = _a[_i];\n                  userId = void 0;\n                  if (typeof member === 'string') {\n                    userId = member;\n                  } else if (typeof member === 'object') {\n                    _b = member, user = _b.user, user_id = _b.user_id;\n                    userId = user_id || (user === null || user === void 0 ? void 0 : user.id);\n                  }\n                  if (userId) {\n                    members.push(userId);\n                  }\n                }\n              }\n              return [4 /*yield*/, getChannel({\n                channel: channel,\n                client: client,\n                members: members,\n                options: channelQueryOptions\n              })];\n            case 2:\n              _f.sent();\n              config = channel.getConfig();\n              setChannelConfig(config);\n              channelInitializedExternally = false;\n              return [3 /*break*/, 4];\n            case 3:\n              e_2 = _f.sent();\n              dispatch({\n                error: e_2,\n                type: 'setError'\n              });\n              errored = true;\n              return [3 /*break*/, 4];\n            case 4:\n              done = true;\n              originalTitle.current = document.title;\n              if (!errored) {\n                dispatch({\n                  channel: channel,\n                  hasMore: channelInitializedExternally || hasMoreMessagesProbably(channel.state.messages.length, channelQueryOptions.messages.limit),\n                  type: 'initStateFromChannel'\n                });\n                if (((_e = client.user) === null || _e === void 0 ? void 0 : _e.id) && channel.state.read[client.user.id]) {\n                  _c = channel.state.read[client.user.id], user = _c.user, ownReadState = __rest(_c, [\"user\"]);\n                  _setChannelUnreadUiState(ownReadState);\n                }\n                /**\n                 * TODO: maybe pass last_read to the countUnread method to get proper value\n                 * combined with channel.countUnread adjustment (_countMessageAsUnread)\n                 * to allow counting own messages too\n                 *\n                 * const lastRead = channel.state.read[client.userID as string].last_read;\n                 */\n                if (channel.countUnread() > 0 && markReadOnMount) markRead({\n                  updateChannelUiUnreadState: false\n                });\n                // The more complex sync logic is done in Chat\n                client.on('connection.changed', handleEvent);\n                client.on('connection.recovered', handleEvent);\n                client.on('user.updated', handleEvent);\n                client.on('user.deleted', handleEvent);\n                channel.on(handleEvent);\n              }\n              return [2 /*return*/];\n          }\n        });\n      });\n    })();\n    return function () {\n      if (errored || !done) return;\n      channel === null || channel === void 0 ? void 0 : channel.off(handleEvent);\n      client.off('connection.changed', handleEvent);\n      client.off('connection.recovered', handleEvent);\n      client.off('user.updated', handleEvent);\n      client.off('user.deleted', handleEvent);\n      notificationTimeouts.forEach(clearTimeout);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [channel.cid, channelQueryOptions, doMarkReadRequest, channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.read_events, initializeOnMount]);\n  useEffect(function () {\n    var _a;\n    if (!state.thread) return;\n    var message = (_a = state.messages) === null || _a === void 0 ? void 0 : _a.find(function (m) {\n      var _a;\n      return m.id === ((_a = state.thread) === null || _a === void 0 ? void 0 : _a.id);\n    });\n    if (message) dispatch({\n      message: message,\n      type: 'setThread'\n    });\n  }, [state.messages, state.thread]);\n  /** MESSAGE */\n  // Adds a temporary notification to message list, will be removed after 5 seconds\n  var addNotification = makeAddNotifications(setNotifications, notificationTimeouts);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  var loadMoreFinished = useCallback(debounce(function (hasMore, messages) {\n    if (!isMounted.current) return;\n    dispatch({\n      hasMore: hasMore,\n      messages: messages,\n      type: 'loadMoreFinished'\n    });\n  }, 2000, {\n    leading: true,\n    trailing: true\n  }), []);\n  var loadMore = function (limit) {\n    if (limit === void 0) {\n      limit = DEFAULT_NEXT_CHANNEL_PAGE_SIZE;\n    }\n    return __awaiter(void 0, void 0, void 0, function () {\n      var oldestMessage, oldestID, perPage, queryResponse, e_3, hasMoreMessages;\n      var _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!online.current || !window.navigator.onLine || !state.hasMore) return [2 /*return*/, 0];\n            oldestMessage = (_a = state === null || state === void 0 ? void 0 : state.messages) === null || _a === void 0 ? void 0 : _a[0];\n            if (state.loadingMore || state.loadingMoreNewer || (oldestMessage === null || oldestMessage === void 0 ? void 0 : oldestMessage.status) !== 'received') {\n              return [2 /*return*/, 0];\n            }\n            dispatch({\n              loadingMore: true,\n              type: 'setLoadingMore'\n            });\n            oldestID = oldestMessage === null || oldestMessage === void 0 ? void 0 : oldestMessage.id;\n            perPage = limit;\n            _b.label = 1;\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, channel.query({\n              messages: {\n                id_lt: oldestID,\n                limit: perPage\n              },\n              watchers: {\n                limit: perPage\n              }\n            })];\n          case 2:\n            queryResponse = _b.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            e_3 = _b.sent();\n            console.warn('message pagination request failed with error', e_3);\n            dispatch({\n              loadingMore: false,\n              type: 'setLoadingMore'\n            });\n            return [2 /*return*/, 0];\n          case 4:\n            hasMoreMessages = queryResponse.messages.length === perPage;\n            loadMoreFinished(hasMoreMessages, channel.state.messages);\n            return [2 /*return*/, queryResponse.messages.length];\n        }\n      });\n    });\n  };\n  var loadMoreNewer = function (limit) {\n    if (limit === void 0) {\n      limit = DEFAULT_NEXT_CHANNEL_PAGE_SIZE;\n    }\n    return __awaiter(void 0, void 0, void 0, function () {\n      var newestMessage, newestId, perPage, queryResponse, e_4, hasMoreNewerMessages;\n      var _a, _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (!online.current || !window.navigator.onLine || !state.hasMoreNewer) return [2 /*return*/, 0];\n            newestMessage = (_a = state === null || state === void 0 ? void 0 : state.messages) === null || _a === void 0 ? void 0 : _a[((_b = state === null || state === void 0 ? void 0 : state.messages) === null || _b === void 0 ? void 0 : _b.length) - 1];\n            if (state.loadingMore || state.loadingMoreNewer) return [2 /*return*/, 0];\n            dispatch({\n              loadingMoreNewer: true,\n              type: 'setLoadingMoreNewer'\n            });\n            newestId = newestMessage === null || newestMessage === void 0 ? void 0 : newestMessage.id;\n            perPage = limit;\n            _c.label = 1;\n          case 1:\n            _c.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, channel.query({\n              messages: {\n                id_gt: newestId,\n                limit: perPage\n              },\n              watchers: {\n                limit: perPage\n              }\n            })];\n          case 2:\n            queryResponse = _c.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            e_4 = _c.sent();\n            console.warn('message pagination request failed with error', e_4);\n            dispatch({\n              loadingMoreNewer: false,\n              type: 'setLoadingMoreNewer'\n            });\n            return [2 /*return*/, 0];\n          case 4:\n            hasMoreNewerMessages = channel.state.messages !== channel.state.latestMessages;\n            dispatch({\n              hasMoreNewer: hasMoreNewerMessages,\n              messages: channel.state.messages,\n              type: 'loadMoreNewerFinished'\n            });\n            return [2 /*return*/, queryResponse.messages.length];\n        }\n      });\n    });\n  };\n  var clearHighlightedMessageTimeoutId = useRef(null);\n  var jumpToMessage = function (messageId, messageLimit) {\n    if (messageLimit === void 0) {\n      messageLimit = DEFAULT_JUMP_TO_PAGE_SIZE;\n    }\n    return __awaiter(void 0, void 0, void 0, function () {\n      var indexOfMessage, hasMoreMessages;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            dispatch({\n              loadingMore: true,\n              type: 'setLoadingMore'\n            });\n            return [4 /*yield*/, channel.state.loadMessageIntoState(messageId, undefined, messageLimit)];\n          case 1:\n            _a.sent();\n            indexOfMessage = channel.state.messages.findIndex(function (message) {\n              return message.id === messageId;\n            });\n            hasMoreMessages = indexOfMessage >= Math.floor(messageLimit / 2);\n            loadMoreFinished(hasMoreMessages, channel.state.messages);\n            dispatch({\n              hasMoreNewer: channel.state.messages !== channel.state.latestMessages,\n              highlightedMessageId: messageId,\n              type: 'jumpToMessageFinished'\n            });\n            if (clearHighlightedMessageTimeoutId.current) {\n              clearTimeout(clearHighlightedMessageTimeoutId.current);\n            }\n            clearHighlightedMessageTimeoutId.current = setTimeout(function () {\n              clearHighlightedMessageTimeoutId.current = null;\n              dispatch({\n                type: 'clearHighlightedMessage'\n              });\n            }, 500);\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  var jumpToLatestMessage = function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var hasMoreOlder;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, channel.state.loadMessageIntoState('latest')];\n          case 1:\n            _a.sent();\n            hasMoreOlder = channel.state.messages.length >= 25;\n            loadMoreFinished(hasMoreOlder, channel.state.messages);\n            dispatch({\n              type: 'jumpToLatestMessage'\n            });\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  var jumpToFirstUnreadMessage = useCallback(function (queryMessageLimit) {\n    if (queryMessageLimit === void 0) {\n      queryMessageLimit = DEFAULT_JUMP_TO_PAGE_SIZE;\n    }\n    return __awaiter(void 0, void 0, void 0, function () {\n      var lastReadMessageId, firstUnreadMessageId, isInCurrentMessageSet, hasMoreMessages, result, result, lastReadTimestamp, _a, lastReadMessageIndex, lastReadMessage, messages, e_5, firstMessageWithCreationDate, firstMessageTimestamp, result, targetId_1, indexOfTarget, e_6;\n      var _b, _c, _d, _e;\n      return __generator(this, function (_f) {\n        switch (_f.label) {\n          case 0:\n            if (!(channelUnreadUiState === null || channelUnreadUiState === void 0 ? void 0 : channelUnreadUiState.unread_messages)) return [2 /*return*/];\n            lastReadMessageId = channelUnreadUiState === null || channelUnreadUiState === void 0 ? void 0 : channelUnreadUiState.last_read_message_id;\n            firstUnreadMessageId = channelUnreadUiState === null || channelUnreadUiState === void 0 ? void 0 : channelUnreadUiState.first_unread_message_id;\n            isInCurrentMessageSet = false;\n            hasMoreMessages = true;\n            if (!firstUnreadMessageId) return [3 /*break*/, 1];\n            result = findInMsgSetById(firstUnreadMessageId, channel.state.messages);\n            isInCurrentMessageSet = result.index !== -1;\n            return [3 /*break*/, 8];\n          case 1:\n            if (!lastReadMessageId) return [3 /*break*/, 2];\n            result = findInMsgSetById(lastReadMessageId, channel.state.messages);\n            isInCurrentMessageSet = !!result.target;\n            firstUnreadMessageId = result.index > -1 ? (_b = channel.state.messages[result.index + 1]) === null || _b === void 0 ? void 0 : _b.id : undefined;\n            return [3 /*break*/, 8];\n          case 2:\n            lastReadTimestamp = channelUnreadUiState.last_read.getTime();\n            _a = findInMsgSetByDate(channelUnreadUiState.last_read, channel.state.messages, true), lastReadMessageIndex = _a.index, lastReadMessage = _a.target;\n            if (!lastReadMessage) return [3 /*break*/, 3];\n            firstUnreadMessageId = (_c = channel.state.messages[lastReadMessageIndex + 1]) === null || _c === void 0 ? void 0 : _c.id;\n            isInCurrentMessageSet = !!firstUnreadMessageId;\n            lastReadMessageId = lastReadMessage.id;\n            return [3 /*break*/, 8];\n          case 3:\n            dispatch({\n              loadingMore: true,\n              type: 'setLoadingMore'\n            });\n            messages = void 0;\n            _f.label = 4;\n          case 4:\n            _f.trys.push([4, 6,, 7]);\n            return [4 /*yield*/, channel.query({\n              messages: {\n                created_at_around: channelUnreadUiState.last_read.toISOString(),\n                limit: queryMessageLimit\n              }\n            }, 'new')];\n          case 5:\n            messages = _f.sent().messages;\n            return [3 /*break*/, 7];\n          case 6:\n            e_5 = _f.sent();\n            addNotification(t('Failed to jump to the first unread message'), 'error');\n            loadMoreFinished(hasMoreMessages, channel.state.messages);\n            return [2 /*return*/];\n          case 7:\n            firstMessageWithCreationDate = messages.find(function (msg) {\n              return msg.created_at;\n            });\n            if (!firstMessageWithCreationDate) {\n              addNotification(t('Failed to jump to the first unread message'), 'error');\n              loadMoreFinished(hasMoreMessages, channel.state.messages);\n              return [2 /*return*/];\n            }\n            firstMessageTimestamp = new Date(firstMessageWithCreationDate.created_at).getTime();\n            if (lastReadTimestamp < firstMessageTimestamp) {\n              // whole channel is unread\n              firstUnreadMessageId = firstMessageWithCreationDate.id;\n              hasMoreMessages = false;\n            } else {\n              result = findInMsgSetByDate(channelUnreadUiState.last_read, messages);\n              lastReadMessageId = (_d = result.target) === null || _d === void 0 ? void 0 : _d.id;\n              hasMoreMessages = result.index >= Math.floor(queryMessageLimit / 2);\n            }\n            loadMoreFinished(hasMoreMessages, channel.state.messages);\n            _f.label = 8;\n          case 8:\n            if (!firstUnreadMessageId && !lastReadMessageId) {\n              addNotification(t('Failed to jump to the first unread message'), 'error');\n              return [2 /*return*/];\n            }\n            if (!!isInCurrentMessageSet) return [3 /*break*/, 12];\n            dispatch({\n              loadingMore: true,\n              type: 'setLoadingMore'\n            });\n            _f.label = 9;\n          case 9:\n            _f.trys.push([9, 11,, 12]);\n            targetId_1 = firstUnreadMessageId !== null && firstUnreadMessageId !== void 0 ? firstUnreadMessageId : lastReadMessageId;\n            return [4 /*yield*/, channel.state.loadMessageIntoState(targetId_1, undefined, queryMessageLimit)];\n          case 10:\n            _f.sent();\n            indexOfTarget = channel.state.messages.findIndex(function (message) {\n              return message.id === targetId_1;\n            });\n            hasMoreMessages = indexOfTarget >= Math.floor(queryMessageLimit / 2);\n            loadMoreFinished(hasMoreMessages, channel.state.messages);\n            firstUnreadMessageId = firstUnreadMessageId !== null && firstUnreadMessageId !== void 0 ? firstUnreadMessageId : (_e = channel.state.messages[indexOfTarget + 1]) === null || _e === void 0 ? void 0 : _e.id;\n            return [3 /*break*/, 12];\n          case 11:\n            e_6 = _f.sent();\n            addNotification(t('Failed to jump to the first unread message'), 'error');\n            loadMoreFinished(hasMoreMessages, channel.state.messages);\n            return [2 /*return*/];\n          case 12:\n            if (!firstUnreadMessageId) {\n              addNotification(t('Failed to jump to the first unread message'), 'error');\n              return [2 /*return*/];\n            }\n            if (!channelUnreadUiState.first_unread_message_id) _setChannelUnreadUiState(__assign(__assign({}, channelUnreadUiState), {\n              first_unread_message_id: firstUnreadMessageId,\n              last_read_message_id: lastReadMessageId\n            }));\n            dispatch({\n              hasMoreNewer: channel.state.messages !== channel.state.latestMessages,\n              highlightedMessageId: firstUnreadMessageId,\n              type: 'jumpToMessageFinished'\n            });\n            if (clearHighlightedMessageTimeoutId.current) {\n              clearTimeout(clearHighlightedMessageTimeoutId.current);\n            }\n            clearHighlightedMessageTimeoutId.current = setTimeout(function () {\n              clearHighlightedMessageTimeoutId.current = null;\n              dispatch({\n                type: 'clearHighlightedMessage'\n              });\n            }, 500);\n            return [2 /*return*/];\n        }\n      });\n    });\n  }, [addNotification, channel, loadMoreFinished, t, channelUnreadUiState]);\n  var deleteMessage = useCallback(function (message) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var deletedMessage, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(message === null || message === void 0 ? void 0 : message.id)) {\n              throw new Error('Cannot delete a message - missing message ID.');\n            }\n            if (!doDeleteMessageRequest) return [3 /*break*/, 2];\n            return [4 /*yield*/, doDeleteMessageRequest(message)];\n          case 1:\n            deletedMessage = _a.sent();\n            return [3 /*break*/, 4];\n          case 2:\n            return [4 /*yield*/, client.deleteMessage(message.id)];\n          case 3:\n            result = _a.sent();\n            deletedMessage = result.message;\n            _a.label = 4;\n          case 4:\n            return [2 /*return*/, deletedMessage];\n        }\n      });\n    });\n  }, [client, doDeleteMessageRequest]);\n  var updateMessage = function (updatedMessage) {\n    // add the message to the local channel state\n    channel.state.addMessageSorted(updatedMessage, true);\n    dispatch({\n      channel: channel,\n      parentId: state.thread && updatedMessage.parent_id,\n      type: 'copyMessagesFromChannel'\n    });\n  };\n  var doSendMessage = function (message, customMessageData, options) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var attachments, id, _a, mentioned_users, parent_id, text, mentions, messageData, messageResponse, existingMessage, i, msg, responseTimestamp, existingMessageTimestamp, responseIsTheNewest, error_1, stringError, parsedError;\n      var _b, _c;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            attachments = message.attachments, id = message.id, _a = message.mentioned_users, mentioned_users = _a === void 0 ? [] : _a, parent_id = message.parent_id, text = message.text;\n            mentions = isUserResponseArray(mentioned_users) ? mentioned_users.map(function (_a) {\n              var id = _a.id;\n              return id;\n            }) : mentioned_users;\n            messageData = __assign({\n              attachments: attachments,\n              id: id,\n              mentioned_users: mentions,\n              parent_id: parent_id,\n              quoted_message_id: parent_id === (quotedMessage === null || quotedMessage === void 0 ? void 0 : quotedMessage.parent_id) ? quotedMessage === null || quotedMessage === void 0 ? void 0 : quotedMessage.id : undefined,\n              text: text\n            }, customMessageData);\n            _d.label = 1;\n          case 1:\n            _d.trys.push([1, 6,, 7]);\n            messageResponse = void 0;\n            if (!doSendMessageRequest) return [3 /*break*/, 3];\n            return [4 /*yield*/, doSendMessageRequest(channel, messageData, options)];\n          case 2:\n            messageResponse = _d.sent();\n            return [3 /*break*/, 5];\n          case 3:\n            return [4 /*yield*/, channel.sendMessage(messageData, options)];\n          case 4:\n            messageResponse = _d.sent();\n            _d.label = 5;\n          case 5:\n            existingMessage = void 0;\n            for (i = channel.state.messages.length - 1; i >= 0; i--) {\n              msg = channel.state.messages[i];\n              if (msg.id && msg.id === messageData.id) {\n                existingMessage = msg;\n                break;\n              }\n            }\n            responseTimestamp = new Date(((_b = messageResponse === null || messageResponse === void 0 ? void 0 : messageResponse.message) === null || _b === void 0 ? void 0 : _b.updated_at) || 0).getTime();\n            existingMessageTimestamp = ((_c = existingMessage === null || existingMessage === void 0 ? void 0 : existingMessage.updated_at) === null || _c === void 0 ? void 0 : _c.getTime()) || 0;\n            responseIsTheNewest = responseTimestamp > existingMessageTimestamp;\n            // Replace the message payload after send is completed\n            // We need to check for the newest message payload, because on slow network, the response can arrive later than WS events message.new, message.updated.\n            // Always override existing message in status \"sending\"\n            if ((messageResponse === null || messageResponse === void 0 ? void 0 : messageResponse.message) && (responseIsTheNewest || (existingMessage === null || existingMessage === void 0 ? void 0 : existingMessage.status) === 'sending')) {\n              updateMessage(__assign(__assign({}, messageResponse.message), {\n                status: 'received'\n              }));\n            }\n            if (quotedMessage && parent_id === (quotedMessage === null || quotedMessage === void 0 ? void 0 : quotedMessage.parent_id)) setQuotedMessage(undefined);\n            return [3 /*break*/, 7];\n          case 6:\n            error_1 = _d.sent();\n            stringError = JSON.stringify(error_1);\n            parsedError = stringError ? JSON.parse(stringError) : {};\n            // Handle the case where the message already exists\n            // (typically, when retrying to send a message).\n            // If the message already exists, we can assume it was sent successfully,\n            // so we update the message status to \"received\".\n            // Right now, the only way to check this error is by checking\n            // the combination of the error code and the error description,\n            // since there is no special error code for duplicate messages.\n            if (parsedError.code === 4 && error_1 instanceof Error && error_1.message.includes('already exists')) {\n              updateMessage(__assign(__assign({}, message), {\n                status: 'received'\n              }));\n            } else {\n              updateMessage(__assign(__assign({}, message), {\n                error: parsedError,\n                errorStatusCode: parsedError.status || undefined,\n                status: 'failed'\n              }));\n            }\n            return [3 /*break*/, 7];\n          case 7:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  var sendMessage = function (_a, customMessageData, options) {\n    var _b = _a.attachments,\n      attachments = _b === void 0 ? [] : _b,\n      _c = _a.mentioned_users,\n      mentioned_users = _c === void 0 ? [] : _c,\n      parent = _a.parent,\n      _d = _a.text,\n      text = _d === void 0 ? '' : _d;\n    return __awaiter(void 0, void 0, void 0, function () {\n      var messagePreview;\n      var _e;\n      return __generator(this, function (_f) {\n        switch (_f.label) {\n          case 0:\n            channel.state.filterErrorMessages();\n            messagePreview = __assign({\n              __html: text,\n              attachments: attachments,\n              created_at: new Date(),\n              html: text,\n              id: (_e = customMessageData === null || customMessageData === void 0 ? void 0 : customMessageData.id) !== null && _e !== void 0 ? _e : \"\".concat(client.userID, \"-\").concat(nanoid()),\n              mentioned_users: mentioned_users,\n              reactions: [],\n              status: 'sending',\n              text: text,\n              type: 'regular',\n              user: client.user\n            }, (parent === null || parent === void 0 ? void 0 : parent.id) ? {\n              parent_id: parent.id\n            } : null);\n            updateMessage(messagePreview);\n            return [4 /*yield*/, doSendMessage(messagePreview, customMessageData, options)];\n          case 1:\n            _f.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  var retrySendMessage = function (message) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            updateMessage(__assign(__assign({}, message), {\n              errorStatusCode: undefined,\n              status: 'sending'\n            }));\n            if (message.attachments) {\n              // remove scraped attachments added during the message composition in MessageInput to prevent sync issues\n              message.attachments = message.attachments.filter(function (attachment) {\n                return !attachment.og_scrape_url;\n              });\n            }\n            return [4 /*yield*/, doSendMessage(message)];\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  var removeMessage = function (message) {\n    channel.state.removeMessage(message);\n    dispatch({\n      channel: channel,\n      parentId: state.thread && message.parent_id,\n      type: 'copyMessagesFromChannel'\n    });\n  };\n  /** THREAD */\n  var openThread = function (message, event) {\n    event === null || event === void 0 ? void 0 : event.preventDefault();\n    setQuotedMessage(function (current) {\n      if ((current === null || current === void 0 ? void 0 : current.parent_id) !== (message === null || message === void 0 ? void 0 : message.parent_id)) {\n        return undefined;\n      } else {\n        return current;\n      }\n    });\n    dispatch({\n      channel: channel,\n      message: message,\n      type: 'openThread'\n    });\n  };\n  var closeThread = function (event) {\n    event === null || event === void 0 ? void 0 : event.preventDefault();\n    dispatch({\n      type: 'closeThread'\n    });\n  };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  var loadMoreThreadFinished = useCallback(debounce(function (threadHasMore, threadMessages) {\n    dispatch({\n      threadHasMore: threadHasMore,\n      threadMessages: threadMessages,\n      type: 'loadMoreThreadFinished'\n    });\n  }, 2000, {\n    leading: true,\n    trailing: true\n  }), []);\n  var loadMoreThread = function (limit) {\n    if (limit === void 0) {\n      limit = DEFAULT_THREAD_PAGE_SIZE;\n    }\n    return __awaiter(void 0, void 0, void 0, function () {\n      var parentId, oldMessages, oldestMessageId, queryResponse, threadHasMoreMessages, newThreadMessages, e_7;\n      var _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            // FIXME: should prevent loading more, if state.thread.reply_count === channel.state.threads[parentID].length\n            if (state.threadLoadingMore || !state.thread) return [2 /*return*/];\n            dispatch({\n              type: 'startLoadingThread'\n            });\n            parentId = state.thread.id;\n            if (!parentId) {\n              return [2 /*return*/, dispatch({\n                type: 'closeThread'\n              })];\n            }\n            oldMessages = channel.state.threads[parentId] || [];\n            oldestMessageId = (_a = oldMessages[0]) === null || _a === void 0 ? void 0 : _a.id;\n            _b.label = 1;\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, channel.getReplies(parentId, {\n              id_lt: oldestMessageId,\n              limit: limit\n            })];\n          case 2:\n            queryResponse = _b.sent();\n            threadHasMoreMessages = hasMoreMessagesProbably(queryResponse.messages.length, limit);\n            newThreadMessages = channel.state.threads[parentId] || [];\n            // next set loadingMore to false so we can start asking for more data\n            loadMoreThreadFinished(threadHasMoreMessages, newThreadMessages);\n            return [3 /*break*/, 4];\n          case 3:\n            e_7 = _b.sent();\n            loadMoreThreadFinished(false, oldMessages);\n            return [3 /*break*/, 4];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  var onMentionsHoverOrClick = useMentionsHandlers(onMentionsHover, onMentionsClick);\n  var editMessage = useEditMessageHandler(doUpdateMessageRequest);\n  var typing = state.typing,\n    restState = __rest(state, [\"typing\"]);\n  var channelStateContextValue = useCreateChannelStateContext(__assign(__assign({}, restState), {\n    acceptedFiles: acceptedFiles,\n    channel: channel,\n    channelCapabilitiesArray: channelCapabilitiesArray,\n    channelConfig: channelConfig,\n    channelUnreadUiState: channelUnreadUiState,\n    debounceURLEnrichmentMs: enrichURLForPreviewConfig === null || enrichURLForPreviewConfig === void 0 ? void 0 : enrichURLForPreviewConfig.debounceURLEnrichmentMs,\n    dragAndDropWindow: dragAndDropWindow,\n    enrichURLForPreview: props.enrichURLForPreview,\n    findURLFn: enrichURLForPreviewConfig === null || enrichURLForPreviewConfig === void 0 ? void 0 : enrichURLForPreviewConfig.findURLFn,\n    giphyVersion: props.giphyVersion || 'fixed_height',\n    imageAttachmentSizeHandler: props.imageAttachmentSizeHandler || getImageAttachmentConfiguration,\n    maxNumberOfFiles: maxNumberOfFiles,\n    multipleUploads: multipleUploads,\n    mutes: mutes,\n    notifications: notifications,\n    onLinkPreviewDismissed: enrichURLForPreviewConfig === null || enrichURLForPreviewConfig === void 0 ? void 0 : enrichURLForPreviewConfig.onLinkPreviewDismissed,\n    quotedMessage: quotedMessage,\n    shouldGenerateVideoThumbnail: props.shouldGenerateVideoThumbnail || true,\n    videoAttachmentSizeHandler: props.videoAttachmentSizeHandler || getVideoAttachmentConfiguration,\n    watcher_count: state.watcherCount\n  }));\n  var channelActionContextValue = useMemo(function () {\n    return {\n      addNotification: addNotification,\n      closeThread: closeThread,\n      deleteMessage: deleteMessage,\n      dispatch: dispatch,\n      editMessage: editMessage,\n      jumpToFirstUnreadMessage: jumpToFirstUnreadMessage,\n      jumpToLatestMessage: jumpToLatestMessage,\n      jumpToMessage: jumpToMessage,\n      loadMore: loadMore,\n      loadMoreNewer: loadMoreNewer,\n      loadMoreThread: loadMoreThread,\n      markRead: markRead,\n      onMentionsClick: onMentionsHoverOrClick,\n      onMentionsHover: onMentionsHoverOrClick,\n      openThread: openThread,\n      removeMessage: removeMessage,\n      retrySendMessage: retrySendMessage,\n      sendMessage: sendMessage,\n      setChannelUnreadUiState: setChannelUnreadUiState,\n      setQuotedMessage: setQuotedMessage,\n      skipMessageDataMemoization: skipMessageDataMemoization,\n      updateMessage: updateMessage\n    };\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [channel.cid, deleteMessage, enrichURLForPreviewConfig === null || enrichURLForPreviewConfig === void 0 ? void 0 : enrichURLForPreviewConfig.findURLFn, enrichURLForPreviewConfig === null || enrichURLForPreviewConfig === void 0 ? void 0 : enrichURLForPreviewConfig.onLinkPreviewDismissed, loadMore, loadMoreNewer, markRead, quotedMessage, jumpToFirstUnreadMessage, jumpToMessage, jumpToLatestMessage, setChannelUnreadUiState]);\n  var componentContextValue = useMemo(function () {\n    var _a;\n    return {\n      Attachment: props.Attachment || DefaultAttachment,\n      AttachmentPreviewList: props.AttachmentPreviewList,\n      AutocompleteSuggestionHeader: props.AutocompleteSuggestionHeader,\n      AutocompleteSuggestionItem: props.AutocompleteSuggestionItem,\n      AutocompleteSuggestionList: props.AutocompleteSuggestionList,\n      Avatar: props.Avatar,\n      BaseImage: props.BaseImage,\n      CooldownTimer: props.CooldownTimer,\n      CustomMessageActionsList: props.CustomMessageActionsList,\n      DateSeparator: props.DateSeparator || DateSeparator,\n      EditMessageInput: props.EditMessageInput,\n      EmojiPicker: props.EmojiPicker,\n      emojiSearchIndex: props.emojiSearchIndex,\n      EmptyStateIndicator: props.EmptyStateIndicator,\n      FileUploadIcon: props.FileUploadIcon,\n      GiphyPreviewMessage: props.GiphyPreviewMessage,\n      HeaderComponent: props.HeaderComponent,\n      Input: props.Input,\n      LinkPreviewList: props.LinkPreviewList,\n      LoadingIndicator: props.LoadingIndicator,\n      Message: props.Message || MessageSimple,\n      MessageBouncePrompt: props.MessageBouncePrompt,\n      MessageDeleted: props.MessageDeleted,\n      MessageListNotifications: props.MessageListNotifications,\n      MessageNotification: props.MessageNotification,\n      MessageOptions: props.MessageOptions,\n      MessageRepliesCountButton: props.MessageRepliesCountButton,\n      MessageStatus: props.MessageStatus,\n      MessageSystem: props.MessageSystem || EventComponent,\n      MessageTimestamp: props.MessageTimestamp,\n      ModalGallery: props.ModalGallery,\n      PinIndicator: props.PinIndicator,\n      QuotedMessage: props.QuotedMessage,\n      QuotedMessagePreview: props.QuotedMessagePreview,\n      reactionOptions: (_a = props.reactionOptions) !== null && _a !== void 0 ? _a : defaultReactionOptions,\n      ReactionSelector: props.ReactionSelector,\n      ReactionsList: props.ReactionsList,\n      SendButton: props.SendButton,\n      ThreadHead: props.ThreadHead,\n      ThreadHeader: props.ThreadHeader,\n      ThreadStart: props.ThreadStart,\n      Timestamp: props.Timestamp,\n      TriggerProvider: props.TriggerProvider,\n      TypingIndicator: props.TypingIndicator,\n      UnreadMessagesNotification: props.UnreadMessagesNotification,\n      UnreadMessagesSeparator: props.UnreadMessagesSeparator || UnreadMessagesSeparator,\n      VirtualMessage: props.VirtualMessage\n    };\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [props.reactionOptions]);\n  var typingContextValue = useCreateTypingContext({\n    typing: typing\n  });\n  var className = clsx(chatClass, theme, channelClass);\n  if (state.error) {\n    return React.createElement(\"div\", {\n      className: className\n    }, React.createElement(LoadingErrorIndicator, {\n      error: state.error\n    }));\n  }\n  if (state.loading) {\n    return React.createElement(\"div\", {\n      className: className\n    }, React.createElement(LoadingIndicator, null));\n  }\n  if (!channel.watch) {\n    return React.createElement(\"div\", {\n      className: className\n    }, React.createElement(\"div\", null, t('Channel Missing')));\n  }\n  return React.createElement(\"div\", {\n    className: clsx(className, windowsEmojiClass)\n  }, React.createElement(ChannelStateProvider, {\n    value: channelStateContextValue\n  }, React.createElement(ChannelActionProvider, {\n    value: channelActionContextValue\n  }, React.createElement(ComponentProvider, {\n    value: componentContextValue\n  }, React.createElement(TypingProvider, {\n    value: typingContextValue\n  }, React.createElement(\"div\", {\n    className: \"\".concat(chatContainerClass)\n  }, dragAndDropWindow && React.createElement(DropzoneProvider, __assign({}, optionalMessageInputProps), children), !dragAndDropWindow && React.createElement(React.Fragment, null, children)))))));\n};\n/**\n * A wrapper component that provides channel data and renders children.\n * The Channel component provides the following contexts:\n * - [ChannelStateContext](https://getstream.io/chat/docs/sdk/react/contexts/channel_state_context/)\n * - [ChannelActionContext](https://getstream.io/chat/docs/sdk/react/contexts/channel_action_context/)\n * - [ComponentContext](https://getstream.io/chat/docs/sdk/react/contexts/component_context/)\n * - [TypingContext](https://getstream.io/chat/docs/sdk/react/contexts/typing_context/)\n */\nexport var Channel = React.memo(UnMemoizedChannel);","map":{"version":3,"names":["__assign","__awaiter","__generator","__rest","React","useCallback","useEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","debounce","defaultsDeep","throttle","nanoid","clsx","channelReducer","initialState","useCreateChannelStateContext","useCreateTypingContext","useEditMessageHandler","useIsMounted","useMentionsHandlers","Attachment","DefaultAttachment","LoadingErrorIndicator","DefaultLoadingErrorIndicator","LoadingChannel","DefaultLoadingIndicator","MessageSimple","DropzoneProvider","ChannelActionProvider","ChannelStateProvider","ComponentProvider","useChatContext","useTranslationContext","TypingProvider","DEFAULT_INITIAL_CHANNEL_PAGE_SIZE","DEFAULT_JUMP_TO_PAGE_SIZE","DEFAULT_NEXT_CHANNEL_PAGE_SIZE","DEFAULT_THREAD_PAGE_SIZE","hasMoreMessagesProbably","UnreadMessagesSeparator","useChannelContainerClasses","findInMsgSetByDate","findInMsgSetById","makeAddNotifications","getChannel","getImageAttachmentConfiguration","getVideoAttachmentConfiguration","defaultReactionOptions","EventComponent","DateSeparator","isUserResponseArray","output","_a","id","UnMemoizedChannel","props","propsChannel","channel","EmptyPlaceholder","_b","LoadingIndicator","_c","contextChannel","channelsQueryState","customClasses","theme","_d","channelClass","chatClass","className","queryInProgress","createElement","error","cid","ChannelInner","key","acceptedFiles","activeUnreadHandler","propChannelQueryOptions","channelQueryOptions","children","doDeleteMessageRequest","doMarkReadRequest","doSendMessageRequest","doUpdateMessageRequest","dragAndDropWindow","enrichURLForPreviewConfig","initializeOnMount","_e","_f","markReadOnMount","maxNumberOfFiles","_g","multipleUploads","onMentionsClick","onMentionsHover","_h","optionalMessageInputProps","skipMessageDataMemoization","messages","limit","_j","client","latestMessageDatesByChannels","mutes","t","_k","chatContainerClass","windowsEmojiClass","_l","getConfig","channelConfig","setChannelConfig","_m","notifications","setNotifications","_o","quotedMessage","setQuotedMessage","_p","channelUnreadUiState","_setChannelUnreadUiState","notificationTimeouts","_q","loading","initialized","state","dispatch","isMounted","originalTitle","lastRead","online","channelCapabilitiesArray","data","own_capabilities","throttledCopyStateFromChannel","type","leading","trailing","setChannelUnreadUiState","markRead","options","updateChannelUiUnreadState","markReadResponse","e_1","label","disconnected","read_events","current","Date","trys","push","undefined","sent","last_read","last_read_message_id","event","unread_messages","document","title","console","handleEvent","mainChannelUpdated","unread","messageDate","oldestID","message","parent_id","show_in_channel","hidden","muteStatus","muted","countUnread","concat","user","userID","created_at","getTime","query","id_lt","watchers","prev","last_read_at","first_unread_message_id","errored","done","channelInitializedExternally","members","_i","member","userId","user_id","config","e_2","ownReadState","length","hasMore","read","on","off","forEach","clearTimeout","thread","find","m","addNotification","loadMoreFinished","loadMore","oldestMessage","perPage","queryResponse","e_3","hasMoreMessages","window","navigator","onLine","loadingMore","loadingMoreNewer","status","warn","loadMoreNewer","newestMessage","newestId","e_4","hasMoreNewerMessages","hasMoreNewer","id_gt","latestMessages","clearHighlightedMessageTimeoutId","jumpToMessage","messageId","messageLimit","indexOfMessage","loadMessageIntoState","findIndex","Math","floor","highlightedMessageId","setTimeout","jumpToLatestMessage","hasMoreOlder","jumpToFirstUnreadMessage","queryMessageLimit","lastReadMessageId","firstUnreadMessageId","isInCurrentMessageSet","result","lastReadTimestamp","lastReadMessageIndex","lastReadMessage","e_5","firstMessageWithCreationDate","firstMessageTimestamp","targetId_1","indexOfTarget","e_6","index","target","created_at_around","toISOString","msg","deleteMessage","deletedMessage","Error","updateMessage","updatedMessage","addMessageSorted","parentId","doSendMessage","customMessageData","attachments","mentioned_users","text","mentions","messageData","messageResponse","existingMessage","i","responseTimestamp","existingMessageTimestamp","responseIsTheNewest","error_1","stringError","parsedError","map","quoted_message_id","sendMessage","updated_at","JSON","stringify","parse","code","includes","errorStatusCode","parent","messagePreview","filterErrorMessages","__html","html","reactions","retrySendMessage","filter","attachment","og_scrape_url","removeMessage","openThread","preventDefault","closeThread","loadMoreThreadFinished","threadHasMore","threadMessages","loadMoreThread","oldMessages","oldestMessageId","threadHasMoreMessages","newThreadMessages","e_7","threadLoadingMore","threads","getReplies","onMentionsHoverOrClick","editMessage","typing","restState","channelStateContextValue","debounceURLEnrichmentMs","enrichURLForPreview","findURLFn","giphyVersion","imageAttachmentSizeHandler","onLinkPreviewDismissed","shouldGenerateVideoThumbnail","videoAttachmentSizeHandler","watcher_count","watcherCount","channelActionContextValue","componentContextValue","AttachmentPreviewList","AutocompleteSuggestionHeader","AutocompleteSuggestionItem","AutocompleteSuggestionList","Avatar","BaseImage","CooldownTimer","CustomMessageActionsList","EditMessageInput","EmojiPicker","emojiSearchIndex","EmptyStateIndicator","FileUploadIcon","GiphyPreviewMessage","HeaderComponent","Input","LinkPreviewList","Message","MessageBouncePrompt","MessageDeleted","MessageListNotifications","MessageNotification","MessageOptions","MessageRepliesCountButton","MessageStatus","MessageSystem","MessageTimestamp","ModalGallery","PinIndicator","QuotedMessage","QuotedMessagePreview","reactionOptions","ReactionSelector","ReactionsList","SendButton","ThreadHead","ThreadHeader","ThreadStart","Timestamp","TriggerProvider","TypingIndicator","UnreadMessagesNotification","VirtualMessage","typingContextValue","watch","value","Fragment","Channel","memo"],"sources":["C:/Users/Gesti/Desktop/chat_application/client/node_modules/stream-chat-react/dist/components/Channel/Channel.js"],"sourcesContent":["import { __assign, __awaiter, __generator, __rest } from \"tslib\";\nimport React, { useCallback, useEffect, useLayoutEffect, useMemo, useReducer, useRef, useState, } from 'react';\nimport debounce from 'lodash.debounce';\nimport defaultsDeep from 'lodash.defaultsdeep';\nimport throttle from 'lodash.throttle';\nimport { nanoid } from 'nanoid';\nimport clsx from 'clsx';\nimport { channelReducer, initialState } from './channelState';\nimport { useCreateChannelStateContext } from './hooks/useCreateChannelStateContext';\nimport { useCreateTypingContext } from './hooks/useCreateTypingContext';\nimport { useEditMessageHandler } from './hooks/useEditMessageHandler';\nimport { useIsMounted } from './hooks/useIsMounted';\nimport { useMentionsHandlers } from './hooks/useMentionsHandlers';\nimport { Attachment as DefaultAttachment } from '../Attachment/Attachment';\nimport { LoadingErrorIndicator as DefaultLoadingErrorIndicator, } from '../Loading';\nimport { LoadingChannel as DefaultLoadingIndicator } from './LoadingChannel';\nimport { MessageSimple } from '../Message/MessageSimple';\nimport { DropzoneProvider } from '../MessageInput/DropzoneProvider';\nimport { ChannelActionProvider, } from '../../context/ChannelActionContext';\nimport { ChannelStateProvider, } from '../../context/ChannelStateContext';\nimport { ComponentProvider } from '../../context/ComponentContext';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { TypingProvider } from '../../context/TypingContext';\nimport { DEFAULT_INITIAL_CHANNEL_PAGE_SIZE, DEFAULT_JUMP_TO_PAGE_SIZE, DEFAULT_NEXT_CHANNEL_PAGE_SIZE, DEFAULT_THREAD_PAGE_SIZE, } from '../../constants/limits';\nimport { hasMoreMessagesProbably, UnreadMessagesSeparator } from '../MessageList';\nimport { useChannelContainerClasses } from './hooks/useChannelContainerClasses';\nimport { findInMsgSetByDate, findInMsgSetById, makeAddNotifications } from './utils';\nimport { getChannel } from '../../utils';\nimport { getImageAttachmentConfiguration, getVideoAttachmentConfiguration, } from '../Attachment/attachment-sizing';\nimport { defaultReactionOptions } from '../Reactions';\nimport { EventComponent } from '../EventComponent';\nimport { DateSeparator } from '../DateSeparator';\nvar isUserResponseArray = function (output) { var _a; return ((_a = output[0]) === null || _a === void 0 ? void 0 : _a.id) != null; };\nvar UnMemoizedChannel = function (props) {\n    var propsChannel = props.channel, _a = props.EmptyPlaceholder, EmptyPlaceholder = _a === void 0 ? null : _a, LoadingErrorIndicator = props.LoadingErrorIndicator, _b = props.LoadingIndicator, LoadingIndicator = _b === void 0 ? DefaultLoadingIndicator : _b;\n    var _c = useChatContext('Channel'), contextChannel = _c.channel, channelsQueryState = _c.channelsQueryState, customClasses = _c.customClasses, theme = _c.theme;\n    var _d = useChannelContainerClasses({\n        customClasses: customClasses,\n    }), channelClass = _d.channelClass, chatClass = _d.chatClass;\n    var channel = propsChannel || contextChannel;\n    var className = clsx(chatClass, theme, channelClass);\n    if (channelsQueryState.queryInProgress === 'reload' && LoadingIndicator) {\n        return (React.createElement(\"div\", { className: className },\n            React.createElement(LoadingIndicator, null)));\n    }\n    if (channelsQueryState.error && LoadingErrorIndicator) {\n        return (React.createElement(\"div\", { className: className },\n            React.createElement(LoadingErrorIndicator, { error: channelsQueryState.error })));\n    }\n    if (!(channel === null || channel === void 0 ? void 0 : channel.cid)) {\n        return React.createElement(\"div\", { className: className }, EmptyPlaceholder);\n    }\n    return React.createElement(ChannelInner, __assign({}, props, { channel: channel, key: channel.cid }));\n};\nvar ChannelInner = function (props) {\n    var _a;\n    var acceptedFiles = props.acceptedFiles, activeUnreadHandler = props.activeUnreadHandler, channel = props.channel, propChannelQueryOptions = props.channelQueryOptions, children = props.children, doDeleteMessageRequest = props.doDeleteMessageRequest, doMarkReadRequest = props.doMarkReadRequest, doSendMessageRequest = props.doSendMessageRequest, doUpdateMessageRequest = props.doUpdateMessageRequest, _b = props.dragAndDropWindow, dragAndDropWindow = _b === void 0 ? false : _b, enrichURLForPreviewConfig = props.enrichURLForPreviewConfig, _c = props.initializeOnMount, initializeOnMount = _c === void 0 ? true : _c, _d = props.LoadingErrorIndicator, LoadingErrorIndicator = _d === void 0 ? DefaultLoadingErrorIndicator : _d, _e = props.LoadingIndicator, LoadingIndicator = _e === void 0 ? DefaultLoadingIndicator : _e, _f = props.markReadOnMount, markReadOnMount = _f === void 0 ? true : _f, maxNumberOfFiles = props.maxNumberOfFiles, _g = props.multipleUploads, multipleUploads = _g === void 0 ? true : _g, onMentionsClick = props.onMentionsClick, onMentionsHover = props.onMentionsHover, _h = props.optionalMessageInputProps, optionalMessageInputProps = _h === void 0 ? {} : _h, skipMessageDataMemoization = props.skipMessageDataMemoization;\n    var channelQueryOptions = useMemo(function () {\n        return defaultsDeep(propChannelQueryOptions, {\n            messages: { limit: DEFAULT_INITIAL_CHANNEL_PAGE_SIZE },\n        });\n    }, [propChannelQueryOptions]);\n    var _j = useChatContext('Channel'), client = _j.client, customClasses = _j.customClasses, latestMessageDatesByChannels = _j.latestMessageDatesByChannels, mutes = _j.mutes, theme = _j.theme;\n    var t = useTranslationContext('Channel').t;\n    var _k = useChannelContainerClasses({ customClasses: customClasses }), channelClass = _k.channelClass, chatClass = _k.chatClass, chatContainerClass = _k.chatContainerClass, windowsEmojiClass = _k.windowsEmojiClass;\n    var _l = useState(channel.getConfig()), channelConfig = _l[0], setChannelConfig = _l[1];\n    var _m = useState([]), notifications = _m[0], setNotifications = _m[1];\n    var _o = useState(), quotedMessage = _o[0], setQuotedMessage = _o[1];\n    var _p = useState(), channelUnreadUiState = _p[0], _setChannelUnreadUiState = _p[1];\n    var notificationTimeouts = [];\n    var _q = useReducer(channelReducer, __assign(__assign({}, initialState), { loading: !channel.initialized })), state = _q[0], dispatch = _q[1];\n    var isMounted = useIsMounted();\n    var originalTitle = useRef('');\n    var lastRead = useRef();\n    var online = useRef(true);\n    var channelCapabilitiesArray = (_a = channel.data) === null || _a === void 0 ? void 0 : _a.own_capabilities;\n    var throttledCopyStateFromChannel = throttle(function () { return dispatch({ channel: channel, type: 'copyStateFromChannelOnEvent' }); }, 500, {\n        leading: true,\n        trailing: true,\n    });\n    var setChannelUnreadUiState = useMemo(function () {\n        return throttle(_setChannelUnreadUiState, 200, {\n            leading: true,\n            trailing: false,\n        });\n    }, []);\n    var markRead = useMemo(function () {\n        return throttle(function (options) { return __awaiter(void 0, void 0, void 0, function () {\n            var _a, updateChannelUiUnreadState, markReadResponse, e_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = (options !== null && options !== void 0 ? options : {}).updateChannelUiUnreadState, updateChannelUiUnreadState = _a === void 0 ? true : _a;\n                        if (channel.disconnected || !(channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.read_events)) {\n                            return [2 /*return*/];\n                        }\n                        lastRead.current = new Date();\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 5, , 6]);\n                        if (!doMarkReadRequest) return [3 /*break*/, 2];\n                        doMarkReadRequest(channel, updateChannelUiUnreadState ? setChannelUnreadUiState : undefined);\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, channel.markRead()];\n                    case 3:\n                        markReadResponse = _b.sent();\n                        if (updateChannelUiUnreadState && markReadResponse) {\n                            _setChannelUnreadUiState({\n                                last_read: lastRead.current,\n                                last_read_message_id: markReadResponse.event.last_read_message_id,\n                                unread_messages: 0,\n                            });\n                        }\n                        _b.label = 4;\n                    case 4:\n                        if (activeUnreadHandler) {\n                            activeUnreadHandler(0, originalTitle.current);\n                        }\n                        else if (originalTitle.current) {\n                            document.title = originalTitle.current;\n                        }\n                        return [3 /*break*/, 6];\n                    case 5:\n                        e_1 = _b.sent();\n                        console.error(t('Failed to mark channel as read'));\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        }); }, 500, { leading: true, trailing: false });\n    }, [activeUnreadHandler, channel, channelConfig, doMarkReadRequest, setChannelUnreadUiState, t]);\n    var handleEvent = function (event) { return __awaiter(void 0, void 0, void 0, function () {\n        var mainChannelUpdated, unread, messageDate, cid, oldestID;\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        return __generator(this, function (_k) {\n            switch (_k.label) {\n                case 0:\n                    if (event.message) {\n                        dispatch({\n                            channel: channel,\n                            message: event.message,\n                            type: 'updateThreadOnEvent',\n                        });\n                    }\n                    if (event.type === 'user.watching.start' || event.type === 'user.watching.stop')\n                        return [2 /*return*/];\n                    if (event.type === 'typing.start' || event.type === 'typing.stop') {\n                        return [2 /*return*/, dispatch({ channel: channel, type: 'setTyping' })];\n                    }\n                    if (event.type === 'connection.changed' && typeof event.online === 'boolean') {\n                        online.current = event.online;\n                    }\n                    if (event.type === 'message.new') {\n                        mainChannelUpdated = !((_a = event.message) === null || _a === void 0 ? void 0 : _a.parent_id) || ((_b = event.message) === null || _b === void 0 ? void 0 : _b.show_in_channel);\n                        if (mainChannelUpdated) {\n                            if (document.hidden && (channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.read_events) && !channel.muteStatus().muted) {\n                                unread = channel.countUnread(lastRead.current);\n                                if (activeUnreadHandler) {\n                                    activeUnreadHandler(unread, originalTitle.current);\n                                }\n                                else {\n                                    document.title = \"(\".concat(unread, \") \").concat(originalTitle.current);\n                                }\n                            }\n                        }\n                        if (((_d = (_c = event.message) === null || _c === void 0 ? void 0 : _c.user) === null || _d === void 0 ? void 0 : _d.id) === client.userID &&\n                            ((_e = event === null || event === void 0 ? void 0 : event.message) === null || _e === void 0 ? void 0 : _e.created_at) &&\n                            ((_f = event === null || event === void 0 ? void 0 : event.message) === null || _f === void 0 ? void 0 : _f.cid)) {\n                            messageDate = new Date(event.message.created_at);\n                            cid = event.message.cid;\n                            if (!latestMessageDatesByChannels[cid] ||\n                                latestMessageDatesByChannels[cid].getTime() < messageDate.getTime()) {\n                                latestMessageDatesByChannels[cid] = messageDate;\n                            }\n                        }\n                    }\n                    if (!(event.type === 'user.deleted')) return [3 /*break*/, 2];\n                    oldestID = (_j = (_h = (_g = channel.state) === null || _g === void 0 ? void 0 : _g.messages) === null || _h === void 0 ? void 0 : _h[0]) === null || _j === void 0 ? void 0 : _j.id;\n                    /**\n                     * As the channel state is not normalized we re-fetch the channel data. Thus, we avoid having to search for user references in the channel state.\n                     */\n                    // FIXME: we should use channelQueryOptions if they are available\n                    return [4 /*yield*/, channel.query({\n                            messages: { id_lt: oldestID, limit: DEFAULT_NEXT_CHANNEL_PAGE_SIZE },\n                            watchers: { limit: DEFAULT_NEXT_CHANNEL_PAGE_SIZE },\n                        })];\n                case 1:\n                    /**\n                     * As the channel state is not normalized we re-fetch the channel data. Thus, we avoid having to search for user references in the channel state.\n                     */\n                    // FIXME: we should use channelQueryOptions if they are available\n                    _k.sent();\n                    _k.label = 2;\n                case 2:\n                    if (event.type === 'notification.mark_unread')\n                        _setChannelUnreadUiState(function (prev) {\n                            var _a;\n                            if (!(event.last_read_at && event.user))\n                                return prev;\n                            return {\n                                first_unread_message_id: event.first_unread_message_id,\n                                last_read: new Date(event.last_read_at),\n                                last_read_message_id: event.last_read_message_id,\n                                unread_messages: (_a = event.unread_messages) !== null && _a !== void 0 ? _a : 0,\n                            };\n                        });\n                    if (event.type === 'channel.truncated' && event.cid === channel.cid) {\n                        _setChannelUnreadUiState(undefined);\n                    }\n                    throttledCopyStateFromChannel();\n                    return [2 /*return*/];\n            }\n        });\n    }); };\n    // useLayoutEffect here to prevent spinner. Use Suspense when it is available in stable release\n    useLayoutEffect(function () {\n        var errored = false;\n        var done = false;\n        var channelInitializedExternally = true;\n        (function () { return __awaiter(void 0, void 0, void 0, function () {\n            var members, _i, _a, member, userId, _b, user, user_id, config, e_2, _c, user, ownReadState;\n            var _d, _e;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        if (!(!channel.initialized && initializeOnMount)) return [3 /*break*/, 4];\n                        _f.label = 1;\n                    case 1:\n                        _f.trys.push([1, 3, , 4]);\n                        members = [];\n                        if (!channel.id && ((_d = channel.data) === null || _d === void 0 ? void 0 : _d.members)) {\n                            for (_i = 0, _a = channel.data.members; _i < _a.length; _i++) {\n                                member = _a[_i];\n                                userId = void 0;\n                                if (typeof member === 'string') {\n                                    userId = member;\n                                }\n                                else if (typeof member === 'object') {\n                                    _b = member, user = _b.user, user_id = _b.user_id;\n                                    userId = user_id || (user === null || user === void 0 ? void 0 : user.id);\n                                }\n                                if (userId) {\n                                    members.push(userId);\n                                }\n                            }\n                        }\n                        return [4 /*yield*/, getChannel({ channel: channel, client: client, members: members, options: channelQueryOptions })];\n                    case 2:\n                        _f.sent();\n                        config = channel.getConfig();\n                        setChannelConfig(config);\n                        channelInitializedExternally = false;\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_2 = _f.sent();\n                        dispatch({ error: e_2, type: 'setError' });\n                        errored = true;\n                        return [3 /*break*/, 4];\n                    case 4:\n                        done = true;\n                        originalTitle.current = document.title;\n                        if (!errored) {\n                            dispatch({\n                                channel: channel,\n                                hasMore: channelInitializedExternally ||\n                                    hasMoreMessagesProbably(channel.state.messages.length, channelQueryOptions.messages.limit),\n                                type: 'initStateFromChannel',\n                            });\n                            if (((_e = client.user) === null || _e === void 0 ? void 0 : _e.id) && channel.state.read[client.user.id]) {\n                                _c = channel.state.read[client.user.id], user = _c.user, ownReadState = __rest(_c, [\"user\"]);\n                                _setChannelUnreadUiState(ownReadState);\n                            }\n                            /**\n                             * TODO: maybe pass last_read to the countUnread method to get proper value\n                             * combined with channel.countUnread adjustment (_countMessageAsUnread)\n                             * to allow counting own messages too\n                             *\n                             * const lastRead = channel.state.read[client.userID as string].last_read;\n                             */\n                            if (channel.countUnread() > 0 && markReadOnMount)\n                                markRead({ updateChannelUiUnreadState: false });\n                            // The more complex sync logic is done in Chat\n                            client.on('connection.changed', handleEvent);\n                            client.on('connection.recovered', handleEvent);\n                            client.on('user.updated', handleEvent);\n                            client.on('user.deleted', handleEvent);\n                            channel.on(handleEvent);\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        }); })();\n        return function () {\n            if (errored || !done)\n                return;\n            channel === null || channel === void 0 ? void 0 : channel.off(handleEvent);\n            client.off('connection.changed', handleEvent);\n            client.off('connection.recovered', handleEvent);\n            client.off('user.updated', handleEvent);\n            client.off('user.deleted', handleEvent);\n            notificationTimeouts.forEach(clearTimeout);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        channel.cid,\n        channelQueryOptions,\n        doMarkReadRequest,\n        channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.read_events,\n        initializeOnMount,\n    ]);\n    useEffect(function () {\n        var _a;\n        if (!state.thread)\n            return;\n        var message = (_a = state.messages) === null || _a === void 0 ? void 0 : _a.find(function (m) { var _a; return m.id === ((_a = state.thread) === null || _a === void 0 ? void 0 : _a.id); });\n        if (message)\n            dispatch({ message: message, type: 'setThread' });\n    }, [state.messages, state.thread]);\n    /** MESSAGE */\n    // Adds a temporary notification to message list, will be removed after 5 seconds\n    var addNotification = makeAddNotifications(setNotifications, notificationTimeouts);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    var loadMoreFinished = useCallback(debounce(function (hasMore, messages) {\n        if (!isMounted.current)\n            return;\n        dispatch({ hasMore: hasMore, messages: messages, type: 'loadMoreFinished' });\n    }, 2000, { leading: true, trailing: true }), []);\n    var loadMore = function (limit) {\n        if (limit === void 0) { limit = DEFAULT_NEXT_CHANNEL_PAGE_SIZE; }\n        return __awaiter(void 0, void 0, void 0, function () {\n            var oldestMessage, oldestID, perPage, queryResponse, e_3, hasMoreMessages;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!online.current || !window.navigator.onLine || !state.hasMore)\n                            return [2 /*return*/, 0];\n                        oldestMessage = (_a = state === null || state === void 0 ? void 0 : state.messages) === null || _a === void 0 ? void 0 : _a[0];\n                        if (state.loadingMore || state.loadingMoreNewer || (oldestMessage === null || oldestMessage === void 0 ? void 0 : oldestMessage.status) !== 'received') {\n                            return [2 /*return*/, 0];\n                        }\n                        dispatch({ loadingMore: true, type: 'setLoadingMore' });\n                        oldestID = oldestMessage === null || oldestMessage === void 0 ? void 0 : oldestMessage.id;\n                        perPage = limit;\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, channel.query({\n                                messages: { id_lt: oldestID, limit: perPage },\n                                watchers: { limit: perPage },\n                            })];\n                    case 2:\n                        queryResponse = _b.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_3 = _b.sent();\n                        console.warn('message pagination request failed with error', e_3);\n                        dispatch({ loadingMore: false, type: 'setLoadingMore' });\n                        return [2 /*return*/, 0];\n                    case 4:\n                        hasMoreMessages = queryResponse.messages.length === perPage;\n                        loadMoreFinished(hasMoreMessages, channel.state.messages);\n                        return [2 /*return*/, queryResponse.messages.length];\n                }\n            });\n        });\n    };\n    var loadMoreNewer = function (limit) {\n        if (limit === void 0) { limit = DEFAULT_NEXT_CHANNEL_PAGE_SIZE; }\n        return __awaiter(void 0, void 0, void 0, function () {\n            var newestMessage, newestId, perPage, queryResponse, e_4, hasMoreNewerMessages;\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (!online.current || !window.navigator.onLine || !state.hasMoreNewer)\n                            return [2 /*return*/, 0];\n                        newestMessage = (_a = state === null || state === void 0 ? void 0 : state.messages) === null || _a === void 0 ? void 0 : _a[((_b = state === null || state === void 0 ? void 0 : state.messages) === null || _b === void 0 ? void 0 : _b.length) - 1];\n                        if (state.loadingMore || state.loadingMoreNewer)\n                            return [2 /*return*/, 0];\n                        dispatch({ loadingMoreNewer: true, type: 'setLoadingMoreNewer' });\n                        newestId = newestMessage === null || newestMessage === void 0 ? void 0 : newestMessage.id;\n                        perPage = limit;\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, channel.query({\n                                messages: { id_gt: newestId, limit: perPage },\n                                watchers: { limit: perPage },\n                            })];\n                    case 2:\n                        queryResponse = _c.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_4 = _c.sent();\n                        console.warn('message pagination request failed with error', e_4);\n                        dispatch({ loadingMoreNewer: false, type: 'setLoadingMoreNewer' });\n                        return [2 /*return*/, 0];\n                    case 4:\n                        hasMoreNewerMessages = channel.state.messages !== channel.state.latestMessages;\n                        dispatch({\n                            hasMoreNewer: hasMoreNewerMessages,\n                            messages: channel.state.messages,\n                            type: 'loadMoreNewerFinished',\n                        });\n                        return [2 /*return*/, queryResponse.messages.length];\n                }\n            });\n        });\n    };\n    var clearHighlightedMessageTimeoutId = useRef(null);\n    var jumpToMessage = function (messageId, messageLimit) {\n        if (messageLimit === void 0) { messageLimit = DEFAULT_JUMP_TO_PAGE_SIZE; }\n        return __awaiter(void 0, void 0, void 0, function () {\n            var indexOfMessage, hasMoreMessages;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        dispatch({ loadingMore: true, type: 'setLoadingMore' });\n                        return [4 /*yield*/, channel.state.loadMessageIntoState(messageId, undefined, messageLimit)];\n                    case 1:\n                        _a.sent();\n                        indexOfMessage = channel.state.messages.findIndex(function (message) { return message.id === messageId; });\n                        hasMoreMessages = indexOfMessage >= Math.floor(messageLimit / 2);\n                        loadMoreFinished(hasMoreMessages, channel.state.messages);\n                        dispatch({\n                            hasMoreNewer: channel.state.messages !== channel.state.latestMessages,\n                            highlightedMessageId: messageId,\n                            type: 'jumpToMessageFinished',\n                        });\n                        if (clearHighlightedMessageTimeoutId.current) {\n                            clearTimeout(clearHighlightedMessageTimeoutId.current);\n                        }\n                        clearHighlightedMessageTimeoutId.current = setTimeout(function () {\n                            clearHighlightedMessageTimeoutId.current = null;\n                            dispatch({ type: 'clearHighlightedMessage' });\n                        }, 500);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    var jumpToLatestMessage = function () { return __awaiter(void 0, void 0, void 0, function () {\n        var hasMoreOlder;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, channel.state.loadMessageIntoState('latest')];\n                case 1:\n                    _a.sent();\n                    hasMoreOlder = channel.state.messages.length >= 25;\n                    loadMoreFinished(hasMoreOlder, channel.state.messages);\n                    dispatch({\n                        type: 'jumpToLatestMessage',\n                    });\n                    return [2 /*return*/];\n            }\n        });\n    }); };\n    var jumpToFirstUnreadMessage = useCallback(function (queryMessageLimit) {\n        if (queryMessageLimit === void 0) { queryMessageLimit = DEFAULT_JUMP_TO_PAGE_SIZE; }\n        return __awaiter(void 0, void 0, void 0, function () {\n            var lastReadMessageId, firstUnreadMessageId, isInCurrentMessageSet, hasMoreMessages, result, result, lastReadTimestamp, _a, lastReadMessageIndex, lastReadMessage, messages, e_5, firstMessageWithCreationDate, firstMessageTimestamp, result, targetId_1, indexOfTarget, e_6;\n            var _b, _c, _d, _e;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        if (!(channelUnreadUiState === null || channelUnreadUiState === void 0 ? void 0 : channelUnreadUiState.unread_messages))\n                            return [2 /*return*/];\n                        lastReadMessageId = channelUnreadUiState === null || channelUnreadUiState === void 0 ? void 0 : channelUnreadUiState.last_read_message_id;\n                        firstUnreadMessageId = channelUnreadUiState === null || channelUnreadUiState === void 0 ? void 0 : channelUnreadUiState.first_unread_message_id;\n                        isInCurrentMessageSet = false;\n                        hasMoreMessages = true;\n                        if (!firstUnreadMessageId) return [3 /*break*/, 1];\n                        result = findInMsgSetById(firstUnreadMessageId, channel.state.messages);\n                        isInCurrentMessageSet = result.index !== -1;\n                        return [3 /*break*/, 8];\n                    case 1:\n                        if (!lastReadMessageId) return [3 /*break*/, 2];\n                        result = findInMsgSetById(lastReadMessageId, channel.state.messages);\n                        isInCurrentMessageSet = !!result.target;\n                        firstUnreadMessageId =\n                            result.index > -1 ? (_b = channel.state.messages[result.index + 1]) === null || _b === void 0 ? void 0 : _b.id : undefined;\n                        return [3 /*break*/, 8];\n                    case 2:\n                        lastReadTimestamp = channelUnreadUiState.last_read.getTime();\n                        _a = findInMsgSetByDate(channelUnreadUiState.last_read, channel.state.messages, true), lastReadMessageIndex = _a.index, lastReadMessage = _a.target;\n                        if (!lastReadMessage) return [3 /*break*/, 3];\n                        firstUnreadMessageId = (_c = channel.state.messages[lastReadMessageIndex + 1]) === null || _c === void 0 ? void 0 : _c.id;\n                        isInCurrentMessageSet = !!firstUnreadMessageId;\n                        lastReadMessageId = lastReadMessage.id;\n                        return [3 /*break*/, 8];\n                    case 3:\n                        dispatch({ loadingMore: true, type: 'setLoadingMore' });\n                        messages = void 0;\n                        _f.label = 4;\n                    case 4:\n                        _f.trys.push([4, 6, , 7]);\n                        return [4 /*yield*/, channel.query({\n                                messages: {\n                                    created_at_around: channelUnreadUiState.last_read.toISOString(),\n                                    limit: queryMessageLimit,\n                                },\n                            }, 'new')];\n                    case 5:\n                        messages = (_f.sent()).messages;\n                        return [3 /*break*/, 7];\n                    case 6:\n                        e_5 = _f.sent();\n                        addNotification(t('Failed to jump to the first unread message'), 'error');\n                        loadMoreFinished(hasMoreMessages, channel.state.messages);\n                        return [2 /*return*/];\n                    case 7:\n                        firstMessageWithCreationDate = messages.find(function (msg) { return msg.created_at; });\n                        if (!firstMessageWithCreationDate) {\n                            addNotification(t('Failed to jump to the first unread message'), 'error');\n                            loadMoreFinished(hasMoreMessages, channel.state.messages);\n                            return [2 /*return*/];\n                        }\n                        firstMessageTimestamp = new Date(firstMessageWithCreationDate.created_at).getTime();\n                        if (lastReadTimestamp < firstMessageTimestamp) {\n                            // whole channel is unread\n                            firstUnreadMessageId = firstMessageWithCreationDate.id;\n                            hasMoreMessages = false;\n                        }\n                        else {\n                            result = findInMsgSetByDate(channelUnreadUiState.last_read, messages);\n                            lastReadMessageId = (_d = result.target) === null || _d === void 0 ? void 0 : _d.id;\n                            hasMoreMessages = result.index >= Math.floor(queryMessageLimit / 2);\n                        }\n                        loadMoreFinished(hasMoreMessages, channel.state.messages);\n                        _f.label = 8;\n                    case 8:\n                        if (!firstUnreadMessageId && !lastReadMessageId) {\n                            addNotification(t('Failed to jump to the first unread message'), 'error');\n                            return [2 /*return*/];\n                        }\n                        if (!!isInCurrentMessageSet) return [3 /*break*/, 12];\n                        dispatch({ loadingMore: true, type: 'setLoadingMore' });\n                        _f.label = 9;\n                    case 9:\n                        _f.trys.push([9, 11, , 12]);\n                        targetId_1 = (firstUnreadMessageId !== null && firstUnreadMessageId !== void 0 ? firstUnreadMessageId : lastReadMessageId);\n                        return [4 /*yield*/, channel.state.loadMessageIntoState(targetId_1, undefined, queryMessageLimit)];\n                    case 10:\n                        _f.sent();\n                        indexOfTarget = channel.state.messages.findIndex(function (message) { return message.id === targetId_1; });\n                        hasMoreMessages = indexOfTarget >= Math.floor(queryMessageLimit / 2);\n                        loadMoreFinished(hasMoreMessages, channel.state.messages);\n                        firstUnreadMessageId =\n                            firstUnreadMessageId !== null && firstUnreadMessageId !== void 0 ? firstUnreadMessageId : (_e = channel.state.messages[indexOfTarget + 1]) === null || _e === void 0 ? void 0 : _e.id;\n                        return [3 /*break*/, 12];\n                    case 11:\n                        e_6 = _f.sent();\n                        addNotification(t('Failed to jump to the first unread message'), 'error');\n                        loadMoreFinished(hasMoreMessages, channel.state.messages);\n                        return [2 /*return*/];\n                    case 12:\n                        if (!firstUnreadMessageId) {\n                            addNotification(t('Failed to jump to the first unread message'), 'error');\n                            return [2 /*return*/];\n                        }\n                        if (!channelUnreadUiState.first_unread_message_id)\n                            _setChannelUnreadUiState(__assign(__assign({}, channelUnreadUiState), { first_unread_message_id: firstUnreadMessageId, last_read_message_id: lastReadMessageId }));\n                        dispatch({\n                            hasMoreNewer: channel.state.messages !== channel.state.latestMessages,\n                            highlightedMessageId: firstUnreadMessageId,\n                            type: 'jumpToMessageFinished',\n                        });\n                        if (clearHighlightedMessageTimeoutId.current) {\n                            clearTimeout(clearHighlightedMessageTimeoutId.current);\n                        }\n                        clearHighlightedMessageTimeoutId.current = setTimeout(function () {\n                            clearHighlightedMessageTimeoutId.current = null;\n                            dispatch({ type: 'clearHighlightedMessage' });\n                        }, 500);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    }, [addNotification, channel, loadMoreFinished, t, channelUnreadUiState]);\n    var deleteMessage = useCallback(function (message) { return __awaiter(void 0, void 0, void 0, function () {\n        var deletedMessage, result;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!(message === null || message === void 0 ? void 0 : message.id)) {\n                        throw new Error('Cannot delete a message - missing message ID.');\n                    }\n                    if (!doDeleteMessageRequest) return [3 /*break*/, 2];\n                    return [4 /*yield*/, doDeleteMessageRequest(message)];\n                case 1:\n                    deletedMessage = _a.sent();\n                    return [3 /*break*/, 4];\n                case 2: return [4 /*yield*/, client.deleteMessage(message.id)];\n                case 3:\n                    result = _a.sent();\n                    deletedMessage = result.message;\n                    _a.label = 4;\n                case 4: return [2 /*return*/, deletedMessage];\n            }\n        });\n    }); }, [client, doDeleteMessageRequest]);\n    var updateMessage = function (updatedMessage) {\n        // add the message to the local channel state\n        channel.state.addMessageSorted(updatedMessage, true);\n        dispatch({\n            channel: channel,\n            parentId: state.thread && updatedMessage.parent_id,\n            type: 'copyMessagesFromChannel',\n        });\n    };\n    var doSendMessage = function (message, customMessageData, options) { return __awaiter(void 0, void 0, void 0, function () {\n        var attachments, id, _a, mentioned_users, parent_id, text, mentions, messageData, messageResponse, existingMessage, i, msg, responseTimestamp, existingMessageTimestamp, responseIsTheNewest, error_1, stringError, parsedError;\n        var _b, _c;\n        return __generator(this, function (_d) {\n            switch (_d.label) {\n                case 0:\n                    attachments = message.attachments, id = message.id, _a = message.mentioned_users, mentioned_users = _a === void 0 ? [] : _a, parent_id = message.parent_id, text = message.text;\n                    mentions = isUserResponseArray(mentioned_users)\n                        ? mentioned_users.map(function (_a) {\n                            var id = _a.id;\n                            return id;\n                        })\n                        : mentioned_users;\n                    messageData = __assign({ attachments: attachments, id: id, mentioned_users: mentions, parent_id: parent_id, quoted_message_id: parent_id === (quotedMessage === null || quotedMessage === void 0 ? void 0 : quotedMessage.parent_id) ? quotedMessage === null || quotedMessage === void 0 ? void 0 : quotedMessage.id : undefined, text: text }, customMessageData);\n                    _d.label = 1;\n                case 1:\n                    _d.trys.push([1, 6, , 7]);\n                    messageResponse = void 0;\n                    if (!doSendMessageRequest) return [3 /*break*/, 3];\n                    return [4 /*yield*/, doSendMessageRequest(channel, messageData, options)];\n                case 2:\n                    messageResponse = _d.sent();\n                    return [3 /*break*/, 5];\n                case 3: return [4 /*yield*/, channel.sendMessage(messageData, options)];\n                case 4:\n                    messageResponse = _d.sent();\n                    _d.label = 5;\n                case 5:\n                    existingMessage = void 0;\n                    for (i = channel.state.messages.length - 1; i >= 0; i--) {\n                        msg = channel.state.messages[i];\n                        if (msg.id && msg.id === messageData.id) {\n                            existingMessage = msg;\n                            break;\n                        }\n                    }\n                    responseTimestamp = new Date(((_b = messageResponse === null || messageResponse === void 0 ? void 0 : messageResponse.message) === null || _b === void 0 ? void 0 : _b.updated_at) || 0).getTime();\n                    existingMessageTimestamp = ((_c = existingMessage === null || existingMessage === void 0 ? void 0 : existingMessage.updated_at) === null || _c === void 0 ? void 0 : _c.getTime()) || 0;\n                    responseIsTheNewest = responseTimestamp > existingMessageTimestamp;\n                    // Replace the message payload after send is completed\n                    // We need to check for the newest message payload, because on slow network, the response can arrive later than WS events message.new, message.updated.\n                    // Always override existing message in status \"sending\"\n                    if ((messageResponse === null || messageResponse === void 0 ? void 0 : messageResponse.message) &&\n                        (responseIsTheNewest || (existingMessage === null || existingMessage === void 0 ? void 0 : existingMessage.status) === 'sending')) {\n                        updateMessage(__assign(__assign({}, messageResponse.message), { status: 'received' }));\n                    }\n                    if (quotedMessage && parent_id === (quotedMessage === null || quotedMessage === void 0 ? void 0 : quotedMessage.parent_id))\n                        setQuotedMessage(undefined);\n                    return [3 /*break*/, 7];\n                case 6:\n                    error_1 = _d.sent();\n                    stringError = JSON.stringify(error_1);\n                    parsedError = (stringError\n                        ? JSON.parse(stringError)\n                        : {});\n                    // Handle the case where the message already exists\n                    // (typically, when retrying to send a message).\n                    // If the message already exists, we can assume it was sent successfully,\n                    // so we update the message status to \"received\".\n                    // Right now, the only way to check this error is by checking\n                    // the combination of the error code and the error description,\n                    // since there is no special error code for duplicate messages.\n                    if (parsedError.code === 4 &&\n                        error_1 instanceof Error &&\n                        error_1.message.includes('already exists')) {\n                        updateMessage(__assign(__assign({}, message), { status: 'received' }));\n                    }\n                    else {\n                        updateMessage(__assign(__assign({}, message), { error: parsedError, errorStatusCode: parsedError.status || undefined, status: 'failed' }));\n                    }\n                    return [3 /*break*/, 7];\n                case 7: return [2 /*return*/];\n            }\n        });\n    }); };\n    var sendMessage = function (_a, customMessageData, options) {\n        var _b = _a.attachments, attachments = _b === void 0 ? [] : _b, _c = _a.mentioned_users, mentioned_users = _c === void 0 ? [] : _c, parent = _a.parent, _d = _a.text, text = _d === void 0 ? '' : _d;\n        return __awaiter(void 0, void 0, void 0, function () {\n            var messagePreview;\n            var _e;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        channel.state.filterErrorMessages();\n                        messagePreview = __assign({ __html: text, attachments: attachments, created_at: new Date(), html: text, id: (_e = customMessageData === null || customMessageData === void 0 ? void 0 : customMessageData.id) !== null && _e !== void 0 ? _e : \"\".concat(client.userID, \"-\").concat(nanoid()), mentioned_users: mentioned_users, reactions: [], status: 'sending', text: text, type: 'regular', user: client.user }, ((parent === null || parent === void 0 ? void 0 : parent.id) ? { parent_id: parent.id } : null));\n                        updateMessage(messagePreview);\n                        return [4 /*yield*/, doSendMessage(messagePreview, customMessageData, options)];\n                    case 1:\n                        _f.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    var retrySendMessage = function (message) { return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    updateMessage(__assign(__assign({}, message), { errorStatusCode: undefined, status: 'sending' }));\n                    if (message.attachments) {\n                        // remove scraped attachments added during the message composition in MessageInput to prevent sync issues\n                        message.attachments = message.attachments.filter(function (attachment) { return !attachment.og_scrape_url; });\n                    }\n                    return [4 /*yield*/, doSendMessage(message)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    }); };\n    var removeMessage = function (message) {\n        channel.state.removeMessage(message);\n        dispatch({\n            channel: channel,\n            parentId: state.thread && message.parent_id,\n            type: 'copyMessagesFromChannel',\n        });\n    };\n    /** THREAD */\n    var openThread = function (message, event) {\n        event === null || event === void 0 ? void 0 : event.preventDefault();\n        setQuotedMessage(function (current) {\n            if ((current === null || current === void 0 ? void 0 : current.parent_id) !== (message === null || message === void 0 ? void 0 : message.parent_id)) {\n                return undefined;\n            }\n            else {\n                return current;\n            }\n        });\n        dispatch({ channel: channel, message: message, type: 'openThread' });\n    };\n    var closeThread = function (event) {\n        event === null || event === void 0 ? void 0 : event.preventDefault();\n        dispatch({ type: 'closeThread' });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    var loadMoreThreadFinished = useCallback(debounce(function (threadHasMore, threadMessages) {\n        dispatch({\n            threadHasMore: threadHasMore,\n            threadMessages: threadMessages,\n            type: 'loadMoreThreadFinished',\n        });\n    }, 2000, { leading: true, trailing: true }), []);\n    var loadMoreThread = function (limit) {\n        if (limit === void 0) { limit = DEFAULT_THREAD_PAGE_SIZE; }\n        return __awaiter(void 0, void 0, void 0, function () {\n            var parentId, oldMessages, oldestMessageId, queryResponse, threadHasMoreMessages, newThreadMessages, e_7;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        // FIXME: should prevent loading more, if state.thread.reply_count === channel.state.threads[parentID].length\n                        if (state.threadLoadingMore || !state.thread)\n                            return [2 /*return*/];\n                        dispatch({ type: 'startLoadingThread' });\n                        parentId = state.thread.id;\n                        if (!parentId) {\n                            return [2 /*return*/, dispatch({ type: 'closeThread' })];\n                        }\n                        oldMessages = channel.state.threads[parentId] || [];\n                        oldestMessageId = (_a = oldMessages[0]) === null || _a === void 0 ? void 0 : _a.id;\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, channel.getReplies(parentId, {\n                                id_lt: oldestMessageId,\n                                limit: limit,\n                            })];\n                    case 2:\n                        queryResponse = _b.sent();\n                        threadHasMoreMessages = hasMoreMessagesProbably(queryResponse.messages.length, limit);\n                        newThreadMessages = channel.state.threads[parentId] || [];\n                        // next set loadingMore to false so we can start asking for more data\n                        loadMoreThreadFinished(threadHasMoreMessages, newThreadMessages);\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_7 = _b.sent();\n                        loadMoreThreadFinished(false, oldMessages);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    var onMentionsHoverOrClick = useMentionsHandlers(onMentionsHover, onMentionsClick);\n    var editMessage = useEditMessageHandler(doUpdateMessageRequest);\n    var typing = state.typing, restState = __rest(state, [\"typing\"]);\n    var channelStateContextValue = useCreateChannelStateContext(__assign(__assign({}, restState), { acceptedFiles: acceptedFiles, channel: channel, channelCapabilitiesArray: channelCapabilitiesArray, channelConfig: channelConfig, channelUnreadUiState: channelUnreadUiState, debounceURLEnrichmentMs: enrichURLForPreviewConfig === null || enrichURLForPreviewConfig === void 0 ? void 0 : enrichURLForPreviewConfig.debounceURLEnrichmentMs, dragAndDropWindow: dragAndDropWindow, enrichURLForPreview: props.enrichURLForPreview, findURLFn: enrichURLForPreviewConfig === null || enrichURLForPreviewConfig === void 0 ? void 0 : enrichURLForPreviewConfig.findURLFn, giphyVersion: props.giphyVersion || 'fixed_height', imageAttachmentSizeHandler: props.imageAttachmentSizeHandler || getImageAttachmentConfiguration, maxNumberOfFiles: maxNumberOfFiles, multipleUploads: multipleUploads, mutes: mutes, notifications: notifications, onLinkPreviewDismissed: enrichURLForPreviewConfig === null || enrichURLForPreviewConfig === void 0 ? void 0 : enrichURLForPreviewConfig.onLinkPreviewDismissed, quotedMessage: quotedMessage, shouldGenerateVideoThumbnail: props.shouldGenerateVideoThumbnail || true, videoAttachmentSizeHandler: props.videoAttachmentSizeHandler || getVideoAttachmentConfiguration, watcher_count: state.watcherCount }));\n    var channelActionContextValue = useMemo(function () { return ({\n        addNotification: addNotification,\n        closeThread: closeThread,\n        deleteMessage: deleteMessage,\n        dispatch: dispatch,\n        editMessage: editMessage,\n        jumpToFirstUnreadMessage: jumpToFirstUnreadMessage,\n        jumpToLatestMessage: jumpToLatestMessage,\n        jumpToMessage: jumpToMessage,\n        loadMore: loadMore,\n        loadMoreNewer: loadMoreNewer,\n        loadMoreThread: loadMoreThread,\n        markRead: markRead,\n        onMentionsClick: onMentionsHoverOrClick,\n        onMentionsHover: onMentionsHoverOrClick,\n        openThread: openThread,\n        removeMessage: removeMessage,\n        retrySendMessage: retrySendMessage,\n        sendMessage: sendMessage,\n        setChannelUnreadUiState: setChannelUnreadUiState,\n        setQuotedMessage: setQuotedMessage,\n        skipMessageDataMemoization: skipMessageDataMemoization,\n        updateMessage: updateMessage,\n    }); }, \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        channel.cid,\n        deleteMessage,\n        enrichURLForPreviewConfig === null || enrichURLForPreviewConfig === void 0 ? void 0 : enrichURLForPreviewConfig.findURLFn,\n        enrichURLForPreviewConfig === null || enrichURLForPreviewConfig === void 0 ? void 0 : enrichURLForPreviewConfig.onLinkPreviewDismissed,\n        loadMore,\n        loadMoreNewer,\n        markRead,\n        quotedMessage,\n        jumpToFirstUnreadMessage,\n        jumpToMessage,\n        jumpToLatestMessage,\n        setChannelUnreadUiState,\n    ]);\n    var componentContextValue = useMemo(function () {\n        var _a;\n        return ({\n            Attachment: props.Attachment || DefaultAttachment,\n            AttachmentPreviewList: props.AttachmentPreviewList,\n            AutocompleteSuggestionHeader: props.AutocompleteSuggestionHeader,\n            AutocompleteSuggestionItem: props.AutocompleteSuggestionItem,\n            AutocompleteSuggestionList: props.AutocompleteSuggestionList,\n            Avatar: props.Avatar,\n            BaseImage: props.BaseImage,\n            CooldownTimer: props.CooldownTimer,\n            CustomMessageActionsList: props.CustomMessageActionsList,\n            DateSeparator: props.DateSeparator || DateSeparator,\n            EditMessageInput: props.EditMessageInput,\n            EmojiPicker: props.EmojiPicker,\n            emojiSearchIndex: props.emojiSearchIndex,\n            EmptyStateIndicator: props.EmptyStateIndicator,\n            FileUploadIcon: props.FileUploadIcon,\n            GiphyPreviewMessage: props.GiphyPreviewMessage,\n            HeaderComponent: props.HeaderComponent,\n            Input: props.Input,\n            LinkPreviewList: props.LinkPreviewList,\n            LoadingIndicator: props.LoadingIndicator,\n            Message: props.Message || MessageSimple,\n            MessageBouncePrompt: props.MessageBouncePrompt,\n            MessageDeleted: props.MessageDeleted,\n            MessageListNotifications: props.MessageListNotifications,\n            MessageNotification: props.MessageNotification,\n            MessageOptions: props.MessageOptions,\n            MessageRepliesCountButton: props.MessageRepliesCountButton,\n            MessageStatus: props.MessageStatus,\n            MessageSystem: props.MessageSystem || EventComponent,\n            MessageTimestamp: props.MessageTimestamp,\n            ModalGallery: props.ModalGallery,\n            PinIndicator: props.PinIndicator,\n            QuotedMessage: props.QuotedMessage,\n            QuotedMessagePreview: props.QuotedMessagePreview,\n            reactionOptions: (_a = props.reactionOptions) !== null && _a !== void 0 ? _a : defaultReactionOptions,\n            ReactionSelector: props.ReactionSelector,\n            ReactionsList: props.ReactionsList,\n            SendButton: props.SendButton,\n            ThreadHead: props.ThreadHead,\n            ThreadHeader: props.ThreadHeader,\n            ThreadStart: props.ThreadStart,\n            Timestamp: props.Timestamp,\n            TriggerProvider: props.TriggerProvider,\n            TypingIndicator: props.TypingIndicator,\n            UnreadMessagesNotification: props.UnreadMessagesNotification,\n            UnreadMessagesSeparator: props.UnreadMessagesSeparator || UnreadMessagesSeparator,\n            VirtualMessage: props.VirtualMessage,\n        });\n    }, \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [props.reactionOptions]);\n    var typingContextValue = useCreateTypingContext({\n        typing: typing,\n    });\n    var className = clsx(chatClass, theme, channelClass);\n    if (state.error) {\n        return (React.createElement(\"div\", { className: className },\n            React.createElement(LoadingErrorIndicator, { error: state.error })));\n    }\n    if (state.loading) {\n        return (React.createElement(\"div\", { className: className },\n            React.createElement(LoadingIndicator, null)));\n    }\n    if (!channel.watch) {\n        return (React.createElement(\"div\", { className: className },\n            React.createElement(\"div\", null, t('Channel Missing'))));\n    }\n    return (React.createElement(\"div\", { className: clsx(className, windowsEmojiClass) },\n        React.createElement(ChannelStateProvider, { value: channelStateContextValue },\n            React.createElement(ChannelActionProvider, { value: channelActionContextValue },\n                React.createElement(ComponentProvider, { value: componentContextValue },\n                    React.createElement(TypingProvider, { value: typingContextValue },\n                        React.createElement(\"div\", { className: \"\".concat(chatContainerClass) },\n                            dragAndDropWindow && (React.createElement(DropzoneProvider, __assign({}, optionalMessageInputProps), children)),\n                            !dragAndDropWindow && React.createElement(React.Fragment, null, children))))))));\n};\n/**\n * A wrapper component that provides channel data and renders children.\n * The Channel component provides the following contexts:\n * - [ChannelStateContext](https://getstream.io/chat/docs/sdk/react/contexts/channel_state_context/)\n * - [ChannelActionContext](https://getstream.io/chat/docs/sdk/react/contexts/channel_action_context/)\n * - [ComponentContext](https://getstream.io/chat/docs/sdk/react/contexts/component_context/)\n * - [TypingContext](https://getstream.io/chat/docs/sdk/react/contexts/typing_context/)\n */\nexport var Channel = React.memo(UnMemoizedChannel);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}