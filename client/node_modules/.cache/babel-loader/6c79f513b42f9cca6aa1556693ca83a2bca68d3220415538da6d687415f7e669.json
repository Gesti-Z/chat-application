{"ast":null,"code":"import { __assign } from \"tslib\";\nimport throttle from 'lodash.throttle';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ChannelPreviewMessenger } from './ChannelPreviewMessenger';\nimport { useIsChannelMuted } from './hooks/useIsChannelMuted';\nimport { useChannelPreviewInfo } from './hooks/useChannelPreviewInfo';\nimport { getLatestMessagePreview } from './utils';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useMessageDeliveryStatus } from './hooks/useMessageDeliveryStatus';\nexport var ChannelPreview = function (props) {\n  var channel = props.channel,\n    _a = props.Preview,\n    Preview = _a === void 0 ? ChannelPreviewMessenger : _a,\n    channelUpdateCount = props.channelUpdateCount;\n  var _b = useChatContext('ChannelPreview'),\n    activeChannel = _b.channel,\n    client = _b.client,\n    setActiveChannel = _b.setActiveChannel;\n  var _c = useTranslationContext('ChannelPreview'),\n    t = _c.t,\n    userLanguage = _c.userLanguage;\n  var _d = useChannelPreviewInfo({\n      channel: channel\n    }),\n    displayImage = _d.displayImage,\n    displayTitle = _d.displayTitle;\n  var _e = useState(channel.state.messages[channel.state.messages.length - 1]),\n    lastMessage = _e[0],\n    setLastMessage = _e[1];\n  var _f = useState(0),\n    unread = _f[0],\n    setUnread = _f[1];\n  var messageDeliveryStatus = useMessageDeliveryStatus({\n    channel: channel,\n    lastMessage: lastMessage\n  }).messageDeliveryStatus;\n  var isActive = (activeChannel === null || activeChannel === void 0 ? void 0 : activeChannel.cid) === channel.cid;\n  var muted = useIsChannelMuted(channel).muted;\n  useEffect(function () {\n    var handleEvent = function (event) {\n      if (!event.cid) return setUnread(0);\n      if (channel.cid === event.cid) setUnread(0);\n    };\n    client.on('notification.mark_read', handleEvent);\n    return function () {\n      return client.off('notification.mark_read', handleEvent);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(function () {\n    var handleEvent = function (event) {\n      var _a, _b;\n      if (channel.cid !== event.cid) return;\n      if (((_a = event.user) === null || _a === void 0 ? void 0 : _a.id) !== ((_b = client.user) === null || _b === void 0 ? void 0 : _b.id)) return;\n      setUnread(channel.countUnread());\n    };\n    channel.on('notification.mark_unread', handleEvent);\n    return function () {\n      channel.off('notification.mark_unread', handleEvent);\n    };\n  }, [channel, client]);\n  var refreshUnreadCount = useMemo(function () {\n    return throttle(function () {\n      if (muted) {\n        setUnread(0);\n      } else {\n        setUnread(channel.countUnread());\n      }\n    }, 400);\n  }, [channel, muted]);\n  useEffect(function () {\n    refreshUnreadCount();\n    var handleEvent = function (event) {\n      if (event.message) setLastMessage(event.message);\n      refreshUnreadCount();\n    };\n    channel.on('message.new', handleEvent);\n    channel.on('message.updated', handleEvent);\n    channel.on('message.deleted', handleEvent);\n    return function () {\n      channel.off('message.new', handleEvent);\n      channel.off('message.updated', handleEvent);\n      channel.off('message.deleted', handleEvent);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [refreshUnreadCount, channelUpdateCount]);\n  if (!Preview) return null;\n  var latestMessage = getLatestMessagePreview(channel, t, userLanguage);\n  return React.createElement(Preview, __assign({}, props, {\n    active: isActive,\n    displayImage: displayImage,\n    displayTitle: displayTitle,\n    lastMessage: lastMessage,\n    latestMessage: latestMessage,\n    messageDeliveryStatus: messageDeliveryStatus,\n    setActiveChannel: setActiveChannel,\n    unread: unread\n  }));\n};","map":{"version":3,"names":["__assign","throttle","React","useEffect","useMemo","useState","ChannelPreviewMessenger","useIsChannelMuted","useChannelPreviewInfo","getLatestMessagePreview","useChatContext","useTranslationContext","useMessageDeliveryStatus","ChannelPreview","props","channel","_a","Preview","channelUpdateCount","_b","activeChannel","client","setActiveChannel","_c","t","userLanguage","_d","displayImage","displayTitle","_e","state","messages","length","lastMessage","setLastMessage","_f","unread","setUnread","messageDeliveryStatus","isActive","cid","muted","handleEvent","event","on","off","user","id","countUnread","refreshUnreadCount","message","latestMessage","createElement","active"],"sources":["C:/Users/Gesti/Desktop/chat_application/client/node_modules/stream-chat-react/dist/components/ChannelPreview/ChannelPreview.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport throttle from 'lodash.throttle';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ChannelPreviewMessenger } from './ChannelPreviewMessenger';\nimport { useIsChannelMuted } from './hooks/useIsChannelMuted';\nimport { useChannelPreviewInfo } from './hooks/useChannelPreviewInfo';\nimport { getLatestMessagePreview } from './utils';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useMessageDeliveryStatus } from './hooks/useMessageDeliveryStatus';\nexport var ChannelPreview = function (props) {\n    var channel = props.channel, _a = props.Preview, Preview = _a === void 0 ? ChannelPreviewMessenger : _a, channelUpdateCount = props.channelUpdateCount;\n    var _b = useChatContext('ChannelPreview'), activeChannel = _b.channel, client = _b.client, setActiveChannel = _b.setActiveChannel;\n    var _c = useTranslationContext('ChannelPreview'), t = _c.t, userLanguage = _c.userLanguage;\n    var _d = useChannelPreviewInfo({ channel: channel }), displayImage = _d.displayImage, displayTitle = _d.displayTitle;\n    var _e = useState(channel.state.messages[channel.state.messages.length - 1]), lastMessage = _e[0], setLastMessage = _e[1];\n    var _f = useState(0), unread = _f[0], setUnread = _f[1];\n    var messageDeliveryStatus = useMessageDeliveryStatus({\n        channel: channel,\n        lastMessage: lastMessage,\n    }).messageDeliveryStatus;\n    var isActive = (activeChannel === null || activeChannel === void 0 ? void 0 : activeChannel.cid) === channel.cid;\n    var muted = useIsChannelMuted(channel).muted;\n    useEffect(function () {\n        var handleEvent = function (event) {\n            if (!event.cid)\n                return setUnread(0);\n            if (channel.cid === event.cid)\n                setUnread(0);\n        };\n        client.on('notification.mark_read', handleEvent);\n        return function () { return client.off('notification.mark_read', handleEvent); };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    useEffect(function () {\n        var handleEvent = function (event) {\n            var _a, _b;\n            if (channel.cid !== event.cid)\n                return;\n            if (((_a = event.user) === null || _a === void 0 ? void 0 : _a.id) !== ((_b = client.user) === null || _b === void 0 ? void 0 : _b.id))\n                return;\n            setUnread(channel.countUnread());\n        };\n        channel.on('notification.mark_unread', handleEvent);\n        return function () {\n            channel.off('notification.mark_unread', handleEvent);\n        };\n    }, [channel, client]);\n    var refreshUnreadCount = useMemo(function () {\n        return throttle(function () {\n            if (muted) {\n                setUnread(0);\n            }\n            else {\n                setUnread(channel.countUnread());\n            }\n        }, 400);\n    }, [channel, muted]);\n    useEffect(function () {\n        refreshUnreadCount();\n        var handleEvent = function (event) {\n            if (event.message)\n                setLastMessage(event.message);\n            refreshUnreadCount();\n        };\n        channel.on('message.new', handleEvent);\n        channel.on('message.updated', handleEvent);\n        channel.on('message.deleted', handleEvent);\n        return function () {\n            channel.off('message.new', handleEvent);\n            channel.off('message.updated', handleEvent);\n            channel.off('message.deleted', handleEvent);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [refreshUnreadCount, channelUpdateCount]);\n    if (!Preview)\n        return null;\n    var latestMessage = getLatestMessagePreview(channel, t, userLanguage);\n    return (React.createElement(Preview, __assign({}, props, { active: isActive, displayImage: displayImage, displayTitle: displayTitle, lastMessage: lastMessage, latestMessage: latestMessage, messageDeliveryStatus: messageDeliveryStatus, setActiveChannel: setActiveChannel, unread: unread })));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}