{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { usePopper } from 'react-popper';\nexport function useMessageActionsBoxPopper(_a) {\n  var open = _a.open,\n    placement = _a.placement,\n    referenceElement = _a.referenceElement;\n  var popperElementRef = useRef(null);\n  var _b = usePopper(referenceElement, popperElementRef.current, {\n      modifiers: [{\n        name: 'eventListeners',\n        options: {\n          // It's not safe to update popper position on resize and scroll, since popper's\n          // reference element might not be visible at the time.\n          resize: false,\n          scroll: false\n        }\n      }],\n      placement: placement\n    }),\n    attributes = _b.attributes,\n    styles = _b.styles,\n    update = _b.update;\n  useEffect(function () {\n    if (open) {\n      // Since the popper's reference element might not be (and usually is not) visible\n      // all the time, it's safer to force popper update before showing it.\n      update === null || update === void 0 ? void 0 : update();\n    }\n  }, [open, update]);\n  return {\n    attributes: attributes,\n    popperElementRef: popperElementRef,\n    styles: styles\n  };\n}","map":{"version":3,"names":["useEffect","useRef","usePopper","useMessageActionsBoxPopper","_a","open","placement","referenceElement","popperElementRef","_b","current","modifiers","name","options","resize","scroll","attributes","styles","update"],"sources":["C:/Users/Gesti/Desktop/chat_application/client/node_modules/stream-chat-react/dist/components/MessageActions/hooks/useMessageActionsBoxPopper.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { usePopper } from 'react-popper';\nexport function useMessageActionsBoxPopper(_a) {\n    var open = _a.open, placement = _a.placement, referenceElement = _a.referenceElement;\n    var popperElementRef = useRef(null);\n    var _b = usePopper(referenceElement, popperElementRef.current, {\n        modifiers: [\n            {\n                name: 'eventListeners',\n                options: {\n                    // It's not safe to update popper position on resize and scroll, since popper's\n                    // reference element might not be visible at the time.\n                    resize: false,\n                    scroll: false,\n                },\n            },\n        ],\n        placement: placement,\n    }), attributes = _b.attributes, styles = _b.styles, update = _b.update;\n    useEffect(function () {\n        if (open) {\n            // Since the popper's reference element might not be (and usually is not) visible\n            // all the time, it's safer to force popper update before showing it.\n            update === null || update === void 0 ? void 0 : update();\n        }\n    }, [open, update]);\n    return {\n        attributes: attributes,\n        popperElementRef: popperElementRef,\n        styles: styles,\n    };\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAO,SAASC,0BAA0BA,CAACC,EAAE,EAAE;EAC3C,IAAIC,IAAI,GAAGD,EAAE,CAACC,IAAI;IAAEC,SAAS,GAAGF,EAAE,CAACE,SAAS;IAAEC,gBAAgB,GAAGH,EAAE,CAACG,gBAAgB;EACpF,IAAIC,gBAAgB,GAAGP,MAAM,CAAC,IAAI,CAAC;EACnC,IAAIQ,EAAE,GAAGP,SAAS,CAACK,gBAAgB,EAAEC,gBAAgB,CAACE,OAAO,EAAE;MAC3DC,SAAS,EAAE,CACP;QACIC,IAAI,EAAE,gBAAgB;QACtBC,OAAO,EAAE;UACL;UACA;UACAC,MAAM,EAAE,KAAK;UACbC,MAAM,EAAE;QACZ;MACJ,CAAC,CACJ;MACDT,SAAS,EAAEA;IACf,CAAC,CAAC;IAAEU,UAAU,GAAGP,EAAE,CAACO,UAAU;IAAEC,MAAM,GAAGR,EAAE,CAACQ,MAAM;IAAEC,MAAM,GAAGT,EAAE,CAACS,MAAM;EACtElB,SAAS,CAAC,YAAY;IAClB,IAAIK,IAAI,EAAE;MACN;MACA;MACAa,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAAC,CAAC;IAC5D;EACJ,CAAC,EAAE,CAACb,IAAI,EAAEa,MAAM,CAAC,CAAC;EAClB,OAAO;IACHF,UAAU,EAAEA,UAAU;IACtBR,gBAAgB,EAAEA,gBAAgB;IAClCS,MAAM,EAAEA;EACZ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}