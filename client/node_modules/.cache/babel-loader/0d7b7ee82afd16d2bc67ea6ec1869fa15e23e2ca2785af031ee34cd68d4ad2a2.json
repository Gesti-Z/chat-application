{"ast":null,"code":"import { escapeRegExp } from '../regex';\nimport { findAndReplace } from 'hast-util-find-and-replace';\nimport { u } from 'unist-builder';\nimport { visit } from 'unist-util-visit';\nexport var mentionsMarkdownPlugin = function (mentioned_users) {\n  return function () {\n    var mentioned_usernames = mentioned_users.map(function (user) {\n      return user.name || user.id;\n    }).filter(Boolean).map(escapeRegExp);\n    var mentionedUsersRegex = new RegExp(mentioned_usernames.map(function (username) {\n      return \"@\".concat(username);\n    }).join('|'), 'g');\n    var replace = function (match) {\n      var usernameOrId = match.replace('@', '');\n      var user = mentioned_users.find(function (_a) {\n        var id = _a.id,\n          name = _a.name;\n        return name === usernameOrId || id === usernameOrId;\n      });\n      return u('element', {\n        mentionedUser: user,\n        properties: {},\n        tagName: 'mention'\n      }, [u('text', match)]);\n    };\n    var transform = function (tree) {\n      if (!mentioned_usernames.length) return;\n      // handles special cases of mentions where user.name is an e-mail\n      // Remark GFM translates all e-mail-like text nodes to links creating\n      // two separate child nodes \"@\" and \"your.name@as.email\" instead of\n      // keeping it as one text node with value \"@your.name@as.email\"\n      // this piece finds these two separated nodes and merges them together\n      // before \"replace\" function takes over\n      visit(tree, function (node, index, parent) {\n        var _a;\n        if (typeof index === 'undefined') return;\n        if (!parent) return;\n        var nextChild = parent.children.at(index + 1);\n        var nextChildHref = (_a = nextChild === null || nextChild === void 0 ? void 0 : nextChild.properties) === null || _a === void 0 ? void 0 : _a.href;\n        if (node.type === 'text' &&\n        // text value has to have @ sign at the end of the string\n        // and no other characters except whitespace can precede it\n        // valid cases:   \"text @\", \"@\", \" @\"\n        // invalid cases: \"text@\", \"@text\",\n        /.?\\s?@$|^@$/.test(node.value) && (nextChildHref === null || nextChildHref === void 0 ? void 0 : nextChildHref.startsWith('mailto:'))) {\n          var newTextValue = node.value.replace(/@$/, '');\n          var username = nextChildHref.replace('mailto:', '');\n          parent.children[index] = u('text', newTextValue);\n          parent.children[index + 1] = u('text', \"@\".concat(username));\n        }\n      });\n      findAndReplace(tree, [mentionedUsersRegex, replace]);\n    };\n    return transform;\n  };\n};","map":{"version":3,"names":["escapeRegExp","findAndReplace","u","visit","mentionsMarkdownPlugin","mentioned_users","mentioned_usernames","map","user","name","id","filter","Boolean","mentionedUsersRegex","RegExp","username","concat","join","replace","match","usernameOrId","find","_a","mentionedUser","properties","tagName","transform","tree","length","node","index","parent","nextChild","children","at","nextChildHref","href","type","test","value","startsWith","newTextValue"],"sources":["C:/Users/Gesti/Desktop/chat_application/client/node_modules/stream-chat-react/dist/components/Message/renderText/rehypePlugins/mentionsMarkdownPlugin.js"],"sourcesContent":["import { escapeRegExp } from '../regex';\nimport { findAndReplace } from 'hast-util-find-and-replace';\nimport { u } from 'unist-builder';\nimport { visit } from 'unist-util-visit';\nexport var mentionsMarkdownPlugin = function (mentioned_users) { return function () {\n    var mentioned_usernames = mentioned_users\n        .map(function (user) { return user.name || user.id; })\n        .filter(Boolean)\n        .map(escapeRegExp);\n    var mentionedUsersRegex = new RegExp(mentioned_usernames.map(function (username) { return \"@\".concat(username); }).join('|'), 'g');\n    var replace = function (match) {\n        var usernameOrId = match.replace('@', '');\n        var user = mentioned_users.find(function (_a) {\n            var id = _a.id, name = _a.name;\n            return name === usernameOrId || id === usernameOrId;\n        });\n        return u('element', { mentionedUser: user, properties: {}, tagName: 'mention' }, [\n            u('text', match),\n        ]);\n    };\n    var transform = function (tree) {\n        if (!mentioned_usernames.length)\n            return;\n        // handles special cases of mentions where user.name is an e-mail\n        // Remark GFM translates all e-mail-like text nodes to links creating\n        // two separate child nodes \"@\" and \"your.name@as.email\" instead of\n        // keeping it as one text node with value \"@your.name@as.email\"\n        // this piece finds these two separated nodes and merges them together\n        // before \"replace\" function takes over\n        visit(tree, function (node, index, parent) {\n            var _a;\n            if (typeof index === 'undefined')\n                return;\n            if (!parent)\n                return;\n            var nextChild = parent.children.at(index + 1);\n            var nextChildHref = (_a = nextChild === null || nextChild === void 0 ? void 0 : nextChild.properties) === null || _a === void 0 ? void 0 : _a.href;\n            if (node.type === 'text' &&\n                // text value has to have @ sign at the end of the string\n                // and no other characters except whitespace can precede it\n                // valid cases:   \"text @\", \"@\", \" @\"\n                // invalid cases: \"text@\", \"@text\",\n                /.?\\s?@$|^@$/.test(node.value) &&\n                (nextChildHref === null || nextChildHref === void 0 ? void 0 : nextChildHref.startsWith('mailto:'))) {\n                var newTextValue = node.value.replace(/@$/, '');\n                var username = nextChildHref.replace('mailto:', '');\n                parent.children[index] = u('text', newTextValue);\n                parent.children[index + 1] = u('text', \"@\".concat(username));\n            }\n        });\n        findAndReplace(tree, [mentionedUsersRegex, replace]);\n    };\n    return transform;\n}; };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}