{"ast":null,"code":"import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useChannelActionContext, useTranslationContext } from '../../../context';\nexport var elementIsPlaying = function (audioElement) {\n  return audioElement && !(audioElement.paused || audioElement.ended);\n};\nvar DEFAULT_PLAYBACK_RATES = [1.0, 1.5, 2.0];\nexport var useAudioController = function (_a) {\n  var _b = _a === void 0 ? {} : _a,\n    durationSeconds = _b.durationSeconds,\n    _c = _b.playbackRates,\n    playbackRates = _c === void 0 ? DEFAULT_PLAYBACK_RATES : _c;\n  var addNotification = useChannelActionContext('useAudioController').addNotification;\n  var t = useTranslationContext('useAudioController').t;\n  var _d = useState(false),\n    isPlaying = _d[0],\n    setIsPlaying = _d[1];\n  var _e = useState(0),\n    secondsElapsed = _e[0],\n    setSecondsElapsed = _e[1];\n  var _f = useState(0),\n    playbackRateIndex = _f[0],\n    setPlaybackRateIndex = _f[1];\n  var audioRef = useRef(null);\n  var togglePlay = useCallback(function () {\n    if (!audioRef.current) return;\n    if (!elementIsPlaying(audioRef.current)) {\n      audioRef.current.play();\n      setIsPlaying(true);\n    } else {\n      audioRef.current.pause();\n      setIsPlaying(false);\n    }\n  }, []);\n  var increasePlaybackRate = function () {\n    setPlaybackRateIndex(function (prev) {\n      if (!audioRef.current) return prev;\n      var nextIndex = prev === playbackRates.length - 1 ? 0 : prev + 1;\n      audioRef.current.playbackRate = playbackRates[nextIndex];\n      return nextIndex;\n    });\n  };\n  var seek = useCallback(function (_a) {\n    var clientX = _a.clientX,\n      currentTarget = _a.currentTarget;\n    if (!audioRef.current) return;\n    var _b = currentTarget.getBoundingClientRect(),\n      width = _b.width,\n      x = _b.x;\n    var ratio = (clientX - x) / width;\n    var currentTime = ratio * audioRef.current.duration;\n    setSecondsElapsed(currentTime);\n    audioRef.current.currentTime = currentTime;\n  }, []);\n  useEffect(function () {\n    if (!audioRef.current) return;\n    var audioElement = audioRef.current;\n    var handleEnded = function () {\n      var _a, _b;\n      setSecondsElapsed((_b = (_a = audioElement === null || audioElement === void 0 ? void 0 : audioElement.duration) !== null && _a !== void 0 ? _a : durationSeconds) !== null && _b !== void 0 ? _b : 0);\n      setIsPlaying(false);\n    };\n    audioElement.addEventListener('ended', handleEnded);\n    var handleError = function () {\n      addNotification(t('Error reproducing the recording'), 'error');\n    };\n    audioElement.addEventListener('error', handleError);\n    var handleTimeupdate = function () {\n      setSecondsElapsed(audioElement === null || audioElement === void 0 ? void 0 : audioElement.currentTime);\n    };\n    audioElement.addEventListener('timeupdate', handleTimeupdate);\n    return function () {\n      audioElement.pause();\n      audioElement.removeEventListener('ended', handleEnded);\n      audioElement.removeEventListener('error', handleError);\n      audioElement.removeEventListener('timeupdate', handleTimeupdate);\n    };\n  }, [addNotification, durationSeconds, t]);\n  return {\n    audioRef: audioRef,\n    increasePlaybackRate: increasePlaybackRate,\n    isPlaying: isPlaying,\n    playbackRate: playbackRates[playbackRateIndex],\n    progress: audioRef.current && secondsElapsed ? secondsElapsed / audioRef.current.duration * 100 : 0,\n    secondsElapsed: secondsElapsed,\n    seek: seek,\n    togglePlay: togglePlay\n  };\n};","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","useChannelActionContext","useTranslationContext","elementIsPlaying","audioElement","paused","ended","DEFAULT_PLAYBACK_RATES","useAudioController","_a","_b","durationSeconds","_c","playbackRates","addNotification","t","_d","isPlaying","setIsPlaying","_e","secondsElapsed","setSecondsElapsed","_f","playbackRateIndex","setPlaybackRateIndex","audioRef","togglePlay","current","play","pause","increasePlaybackRate","prev","nextIndex","length","playbackRate","seek","clientX","currentTarget","getBoundingClientRect","width","x","ratio","currentTime","duration","handleEnded","addEventListener","handleError","handleTimeupdate","removeEventListener","progress"],"sources":["C:/Users/Gesti/Desktop/chat_application/client/node_modules/stream-chat-react/dist/components/Attachment/hooks/useAudioController.js"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useChannelActionContext, useTranslationContext } from '../../../context';\nexport var elementIsPlaying = function (audioElement) {\n    return audioElement && !(audioElement.paused || audioElement.ended);\n};\nvar DEFAULT_PLAYBACK_RATES = [1.0, 1.5, 2.0];\nexport var useAudioController = function (_a) {\n    var _b = _a === void 0 ? {} : _a, durationSeconds = _b.durationSeconds, _c = _b.playbackRates, playbackRates = _c === void 0 ? DEFAULT_PLAYBACK_RATES : _c;\n    var addNotification = useChannelActionContext('useAudioController').addNotification;\n    var t = useTranslationContext('useAudioController').t;\n    var _d = useState(false), isPlaying = _d[0], setIsPlaying = _d[1];\n    var _e = useState(0), secondsElapsed = _e[0], setSecondsElapsed = _e[1];\n    var _f = useState(0), playbackRateIndex = _f[0], setPlaybackRateIndex = _f[1];\n    var audioRef = useRef(null);\n    var togglePlay = useCallback(function () {\n        if (!audioRef.current)\n            return;\n        if (!elementIsPlaying(audioRef.current)) {\n            audioRef.current.play();\n            setIsPlaying(true);\n        }\n        else {\n            audioRef.current.pause();\n            setIsPlaying(false);\n        }\n    }, []);\n    var increasePlaybackRate = function () {\n        setPlaybackRateIndex(function (prev) {\n            if (!audioRef.current)\n                return prev;\n            var nextIndex = prev === playbackRates.length - 1 ? 0 : prev + 1;\n            audioRef.current.playbackRate = playbackRates[nextIndex];\n            return nextIndex;\n        });\n    };\n    var seek = useCallback(function (_a) {\n        var clientX = _a.clientX, currentTarget = _a.currentTarget;\n        if (!audioRef.current)\n            return;\n        var _b = currentTarget.getBoundingClientRect(), width = _b.width, x = _b.x;\n        var ratio = (clientX - x) / width;\n        var currentTime = ratio * audioRef.current.duration;\n        setSecondsElapsed(currentTime);\n        audioRef.current.currentTime = currentTime;\n    }, []);\n    useEffect(function () {\n        if (!audioRef.current)\n            return;\n        var audioElement = audioRef.current;\n        var handleEnded = function () {\n            var _a, _b;\n            setSecondsElapsed((_b = (_a = audioElement === null || audioElement === void 0 ? void 0 : audioElement.duration) !== null && _a !== void 0 ? _a : durationSeconds) !== null && _b !== void 0 ? _b : 0);\n            setIsPlaying(false);\n        };\n        audioElement.addEventListener('ended', handleEnded);\n        var handleError = function () {\n            addNotification(t('Error reproducing the recording'), 'error');\n        };\n        audioElement.addEventListener('error', handleError);\n        var handleTimeupdate = function () {\n            setSecondsElapsed(audioElement === null || audioElement === void 0 ? void 0 : audioElement.currentTime);\n        };\n        audioElement.addEventListener('timeupdate', handleTimeupdate);\n        return function () {\n            audioElement.pause();\n            audioElement.removeEventListener('ended', handleEnded);\n            audioElement.removeEventListener('error', handleError);\n            audioElement.removeEventListener('timeupdate', handleTimeupdate);\n        };\n    }, [addNotification, durationSeconds, t]);\n    return {\n        audioRef: audioRef,\n        increasePlaybackRate: increasePlaybackRate,\n        isPlaying: isPlaying,\n        playbackRate: playbackRates[playbackRateIndex],\n        progress: audioRef.current && secondsElapsed ? (secondsElapsed / audioRef.current.duration) * 100 : 0,\n        secondsElapsed: secondsElapsed,\n        seek: seek,\n        togglePlay: togglePlay,\n    };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}