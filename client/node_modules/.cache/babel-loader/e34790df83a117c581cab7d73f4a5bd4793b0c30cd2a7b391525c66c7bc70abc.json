{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nimport { useChatContext } from '../../../context';\nexport var MessageDeliveryStatus;\n(function (MessageDeliveryStatus) {\n  MessageDeliveryStatus[\"DELIVERED\"] = \"delivered\";\n  MessageDeliveryStatus[\"READ\"] = \"read\";\n})(MessageDeliveryStatus || (MessageDeliveryStatus = {}));\nexport var useMessageDeliveryStatus = function (_a) {\n  var channel = _a.channel,\n    lastMessage = _a.lastMessage;\n  var client = useChatContext().client;\n  var _b = useState(),\n    messageDeliveryStatus = _b[0],\n    setMessageDeliveryStatus = _b[1];\n  var isOwnMessage = useCallback(function (message) {\n    var _a;\n    return client.user && ((_a = message === null || message === void 0 ? void 0 : message.user) === null || _a === void 0 ? void 0 : _a.id) === client.user.id;\n  }, [client]);\n  useEffect(function () {\n    var lastMessageIsOwn = isOwnMessage(lastMessage);\n    if (!(lastMessage === null || lastMessage === void 0 ? void 0 : lastMessage.created_at) || !lastMessageIsOwn) return;\n    var lastMessageCreatedAtDate = typeof lastMessage.created_at === 'string' ? new Date(lastMessage.created_at) : lastMessage.created_at;\n    var channelReadByOthersAfterLastMessageUpdate = Object.values(channel.state.read).some(function (_a) {\n      var channelLastMarkedReadDate = _a.last_read,\n        user = _a.user;\n      var ignoreOwnReadStatus = client.user && user.id !== client.user.id;\n      return ignoreOwnReadStatus && lastMessageCreatedAtDate < channelLastMarkedReadDate;\n    });\n    setMessageDeliveryStatus(channelReadByOthersAfterLastMessageUpdate ? MessageDeliveryStatus.READ : MessageDeliveryStatus.DELIVERED);\n  }, [channel.state.read, client, isOwnMessage, lastMessage]);\n  useEffect(function () {\n    var handleMessageNew = function (event) {\n      // the last message is not mine, so do not show the delivery status\n      if (!isOwnMessage(event.message)) {\n        return setMessageDeliveryStatus(undefined);\n      }\n      return setMessageDeliveryStatus(MessageDeliveryStatus.DELIVERED);\n    };\n    channel.on('message.new', handleMessageNew);\n    return function () {\n      channel.off('message.new', handleMessageNew);\n    };\n  }, [channel, client, isOwnMessage]);\n  useEffect(function () {\n    if (!isOwnMessage(lastMessage)) return;\n    var handleMarkRead = function (event) {\n      var _a, _b;\n      if (((_a = event.user) === null || _a === void 0 ? void 0 : _a.id) !== ((_b = client.user) === null || _b === void 0 ? void 0 : _b.id)) setMessageDeliveryStatus(MessageDeliveryStatus.READ);\n    };\n    channel.on('message.read', handleMarkRead);\n    return function () {\n      channel.off('message.read', handleMarkRead);\n    };\n  }, [channel, client, lastMessage, isOwnMessage]);\n  return {\n    messageDeliveryStatus: messageDeliveryStatus\n  };\n};","map":{"version":3,"names":["useCallback","useEffect","useState","useChatContext","MessageDeliveryStatus","useMessageDeliveryStatus","_a","channel","lastMessage","client","_b","messageDeliveryStatus","setMessageDeliveryStatus","isOwnMessage","message","user","id","lastMessageIsOwn","created_at","lastMessageCreatedAtDate","Date","channelReadByOthersAfterLastMessageUpdate","Object","values","state","read","some","channelLastMarkedReadDate","last_read","ignoreOwnReadStatus","READ","DELIVERED","handleMessageNew","event","undefined","on","off","handleMarkRead"],"sources":["C:/Users/Gesti/Desktop/chat_application/client/node_modules/stream-chat-react/dist/components/ChannelPreview/hooks/useMessageDeliveryStatus.js"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { useChatContext } from '../../../context';\nexport var MessageDeliveryStatus;\n(function (MessageDeliveryStatus) {\n    MessageDeliveryStatus[\"DELIVERED\"] = \"delivered\";\n    MessageDeliveryStatus[\"READ\"] = \"read\";\n})(MessageDeliveryStatus || (MessageDeliveryStatus = {}));\nexport var useMessageDeliveryStatus = function (_a) {\n    var channel = _a.channel, lastMessage = _a.lastMessage;\n    var client = useChatContext().client;\n    var _b = useState(), messageDeliveryStatus = _b[0], setMessageDeliveryStatus = _b[1];\n    var isOwnMessage = useCallback(function (message) { var _a; return client.user && ((_a = message === null || message === void 0 ? void 0 : message.user) === null || _a === void 0 ? void 0 : _a.id) === client.user.id; }, [client]);\n    useEffect(function () {\n        var lastMessageIsOwn = isOwnMessage(lastMessage);\n        if (!(lastMessage === null || lastMessage === void 0 ? void 0 : lastMessage.created_at) || !lastMessageIsOwn)\n            return;\n        var lastMessageCreatedAtDate = typeof lastMessage.created_at === 'string'\n            ? new Date(lastMessage.created_at)\n            : lastMessage.created_at;\n        var channelReadByOthersAfterLastMessageUpdate = Object.values(channel.state.read).some(function (_a) {\n            var channelLastMarkedReadDate = _a.last_read, user = _a.user;\n            var ignoreOwnReadStatus = client.user && user.id !== client.user.id;\n            return ignoreOwnReadStatus && lastMessageCreatedAtDate < channelLastMarkedReadDate;\n        });\n        setMessageDeliveryStatus(channelReadByOthersAfterLastMessageUpdate\n            ? MessageDeliveryStatus.READ\n            : MessageDeliveryStatus.DELIVERED);\n    }, [channel.state.read, client, isOwnMessage, lastMessage]);\n    useEffect(function () {\n        var handleMessageNew = function (event) {\n            // the last message is not mine, so do not show the delivery status\n            if (!isOwnMessage(event.message)) {\n                return setMessageDeliveryStatus(undefined);\n            }\n            return setMessageDeliveryStatus(MessageDeliveryStatus.DELIVERED);\n        };\n        channel.on('message.new', handleMessageNew);\n        return function () {\n            channel.off('message.new', handleMessageNew);\n        };\n    }, [channel, client, isOwnMessage]);\n    useEffect(function () {\n        if (!isOwnMessage(lastMessage))\n            return;\n        var handleMarkRead = function (event) {\n            var _a, _b;\n            if (((_a = event.user) === null || _a === void 0 ? void 0 : _a.id) !== ((_b = client.user) === null || _b === void 0 ? void 0 : _b.id))\n                setMessageDeliveryStatus(MessageDeliveryStatus.READ);\n        };\n        channel.on('message.read', handleMarkRead);\n        return function () {\n            channel.off('message.read', handleMarkRead);\n        };\n    }, [channel, client, lastMessage, isOwnMessage]);\n    return {\n        messageDeliveryStatus: messageDeliveryStatus,\n    };\n};\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAO,IAAIC,qBAAqB;AAChC,CAAC,UAAUA,qBAAqB,EAAE;EAC9BA,qBAAqB,CAAC,WAAW,CAAC,GAAG,WAAW;EAChDA,qBAAqB,CAAC,MAAM,CAAC,GAAG,MAAM;AAC1C,CAAC,EAAEA,qBAAqB,KAAKA,qBAAqB,GAAG,CAAC,CAAC,CAAC,CAAC;AACzD,OAAO,IAAIC,wBAAwB,GAAG,SAAAA,CAAUC,EAAE,EAAE;EAChD,IAAIC,OAAO,GAAGD,EAAE,CAACC,OAAO;IAAEC,WAAW,GAAGF,EAAE,CAACE,WAAW;EACtD,IAAIC,MAAM,GAAGN,cAAc,CAAC,CAAC,CAACM,MAAM;EACpC,IAAIC,EAAE,GAAGR,QAAQ,CAAC,CAAC;IAAES,qBAAqB,GAAGD,EAAE,CAAC,CAAC,CAAC;IAAEE,wBAAwB,GAAGF,EAAE,CAAC,CAAC,CAAC;EACpF,IAAIG,YAAY,GAAGb,WAAW,CAAC,UAAUc,OAAO,EAAE;IAAE,IAAIR,EAAE;IAAE,OAAOG,MAAM,CAACM,IAAI,IAAI,CAAC,CAACT,EAAE,GAAGQ,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACC,IAAI,MAAM,IAAI,IAAIT,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACU,EAAE,MAAMP,MAAM,CAACM,IAAI,CAACC,EAAE;EAAE,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EACrOR,SAAS,CAAC,YAAY;IAClB,IAAIgB,gBAAgB,GAAGJ,YAAY,CAACL,WAAW,CAAC;IAChD,IAAI,EAAEA,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,WAAW,CAACU,UAAU,CAAC,IAAI,CAACD,gBAAgB,EACxG;IACJ,IAAIE,wBAAwB,GAAG,OAAOX,WAAW,CAACU,UAAU,KAAK,QAAQ,GACnE,IAAIE,IAAI,CAACZ,WAAW,CAACU,UAAU,CAAC,GAChCV,WAAW,CAACU,UAAU;IAC5B,IAAIG,yCAAyC,GAAGC,MAAM,CAACC,MAAM,CAAChB,OAAO,CAACiB,KAAK,CAACC,IAAI,CAAC,CAACC,IAAI,CAAC,UAAUpB,EAAE,EAAE;MACjG,IAAIqB,yBAAyB,GAAGrB,EAAE,CAACsB,SAAS;QAAEb,IAAI,GAAGT,EAAE,CAACS,IAAI;MAC5D,IAAIc,mBAAmB,GAAGpB,MAAM,CAACM,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAACM,IAAI,CAACC,EAAE;MACnE,OAAOa,mBAAmB,IAAIV,wBAAwB,GAAGQ,yBAAyB;IACtF,CAAC,CAAC;IACFf,wBAAwB,CAACS,yCAAyC,GAC5DjB,qBAAqB,CAAC0B,IAAI,GAC1B1B,qBAAqB,CAAC2B,SAAS,CAAC;EAC1C,CAAC,EAAE,CAACxB,OAAO,CAACiB,KAAK,CAACC,IAAI,EAAEhB,MAAM,EAAEI,YAAY,EAAEL,WAAW,CAAC,CAAC;EAC3DP,SAAS,CAAC,YAAY;IAClB,IAAI+B,gBAAgB,GAAG,SAAAA,CAAUC,KAAK,EAAE;MACpC;MACA,IAAI,CAACpB,YAAY,CAACoB,KAAK,CAACnB,OAAO,CAAC,EAAE;QAC9B,OAAOF,wBAAwB,CAACsB,SAAS,CAAC;MAC9C;MACA,OAAOtB,wBAAwB,CAACR,qBAAqB,CAAC2B,SAAS,CAAC;IACpE,CAAC;IACDxB,OAAO,CAAC4B,EAAE,CAAC,aAAa,EAAEH,gBAAgB,CAAC;IAC3C,OAAO,YAAY;MACfzB,OAAO,CAAC6B,GAAG,CAAC,aAAa,EAAEJ,gBAAgB,CAAC;IAChD,CAAC;EACL,CAAC,EAAE,CAACzB,OAAO,EAAEE,MAAM,EAAEI,YAAY,CAAC,CAAC;EACnCZ,SAAS,CAAC,YAAY;IAClB,IAAI,CAACY,YAAY,CAACL,WAAW,CAAC,EAC1B;IACJ,IAAI6B,cAAc,GAAG,SAAAA,CAAUJ,KAAK,EAAE;MAClC,IAAI3B,EAAE,EAAEI,EAAE;MACV,IAAI,CAAC,CAACJ,EAAE,GAAG2B,KAAK,CAAClB,IAAI,MAAM,IAAI,IAAIT,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACU,EAAE,OAAO,CAACN,EAAE,GAAGD,MAAM,CAACM,IAAI,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACM,EAAE,CAAC,EAClIJ,wBAAwB,CAACR,qBAAqB,CAAC0B,IAAI,CAAC;IAC5D,CAAC;IACDvB,OAAO,CAAC4B,EAAE,CAAC,cAAc,EAAEE,cAAc,CAAC;IAC1C,OAAO,YAAY;MACf9B,OAAO,CAAC6B,GAAG,CAAC,cAAc,EAAEC,cAAc,CAAC;IAC/C,CAAC;EACL,CAAC,EAAE,CAAC9B,OAAO,EAAEE,MAAM,EAAED,WAAW,EAAEK,YAAY,CAAC,CAAC;EAChD,OAAO;IACHF,qBAAqB,EAAEA;EAC3B,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}