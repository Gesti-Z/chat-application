{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { useChannelStateContext, useTranslationContext } from '../../../context';\nexport var MAX_MESSAGE_REACTIONS_TO_FETCH = 1200;\nexport function useReactionsFetcher(message, notifications) {\n  var _this = this;\n  if (notifications === void 0) {\n    notifications = {};\n  }\n  var channel = useChannelStateContext('useReactionFetcher').channel;\n  var t = useTranslationContext('useReactionFetcher').t;\n  var getErrorNotification = notifications.getErrorNotification,\n    notify = notifications.notify;\n  return function () {\n    return __awaiter(_this, void 0, void 0, function () {\n      var e_1, errorMessage;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n            return [4 /*yield*/, fetchMessageReactions(channel, message.id)];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n          case 2:\n            e_1 = _a.sent();\n            errorMessage = getErrorNotification === null || getErrorNotification === void 0 ? void 0 : getErrorNotification(message);\n            notify === null || notify === void 0 ? void 0 : notify(errorMessage || t('Error fetching reactions'), 'error');\n            throw e_1;\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n}\nfunction fetchMessageReactions(channel, messageId) {\n  return __awaiter(this, void 0, void 0, function () {\n    var reactions, limit, offset, reactionsLimit, lastPageSize, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          reactions = [];\n          limit = 300;\n          offset = 0;\n          reactionsLimit = MAX_MESSAGE_REACTIONS_TO_FETCH;\n          lastPageSize = limit;\n          _a.label = 1;\n        case 1:\n          if (!(lastPageSize === limit && reactions.length < reactionsLimit)) return [3 /*break*/, 3];\n          return [4 /*yield*/, channel.getReactions(messageId, {\n            limit: limit,\n            offset: offset\n          })];\n        case 2:\n          response = _a.sent();\n          lastPageSize = response.reactions.length;\n          if (lastPageSize > 0) {\n            reactions.push.apply(reactions, response.reactions);\n          }\n          offset += lastPageSize;\n          return [3 /*break*/, 1];\n        case 3:\n          return [2 /*return*/, reactions];\n      }\n    });\n  });\n}","map":{"version":3,"names":["__awaiter","__generator","useChannelStateContext","useTranslationContext","MAX_MESSAGE_REACTIONS_TO_FETCH","useReactionsFetcher","message","notifications","_this","channel","t","getErrorNotification","notify","e_1","errorMessage","_a","label","trys","push","fetchMessageReactions","id","sent","messageId","reactions","limit","offset","reactionsLimit","lastPageSize","response","length","getReactions","apply"],"sources":["C:/Users/Gesti/Desktop/chat_application/client/node_modules/stream-chat-react/dist/components/Message/hooks/useReactionsFetcher.js"],"sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { useChannelStateContext, useTranslationContext } from '../../../context';\nexport var MAX_MESSAGE_REACTIONS_TO_FETCH = 1200;\nexport function useReactionsFetcher(message, notifications) {\n    var _this = this;\n    if (notifications === void 0) { notifications = {}; }\n    var channel = useChannelStateContext('useReactionFetcher').channel;\n    var t = useTranslationContext('useReactionFetcher').t;\n    var getErrorNotification = notifications.getErrorNotification, notify = notifications.notify;\n    return function () { return __awaiter(_this, void 0, void 0, function () {\n        var e_1, errorMessage;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, fetchMessageReactions(channel, message.id)];\n                case 1: return [2 /*return*/, _a.sent()];\n                case 2:\n                    e_1 = _a.sent();\n                    errorMessage = getErrorNotification === null || getErrorNotification === void 0 ? void 0 : getErrorNotification(message);\n                    notify === null || notify === void 0 ? void 0 : notify(errorMessage || t('Error fetching reactions'), 'error');\n                    throw e_1;\n                case 3: return [2 /*return*/];\n            }\n        });\n    }); };\n}\nfunction fetchMessageReactions(channel, messageId) {\n    return __awaiter(this, void 0, void 0, function () {\n        var reactions, limit, offset, reactionsLimit, lastPageSize, response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    reactions = [];\n                    limit = 300;\n                    offset = 0;\n                    reactionsLimit = MAX_MESSAGE_REACTIONS_TO_FETCH;\n                    lastPageSize = limit;\n                    _a.label = 1;\n                case 1:\n                    if (!(lastPageSize === limit && reactions.length < reactionsLimit)) return [3 /*break*/, 3];\n                    return [4 /*yield*/, channel.getReactions(messageId, {\n                            limit: limit,\n                            offset: offset,\n                        })];\n                case 2:\n                    response = _a.sent();\n                    lastPageSize = response.reactions.length;\n                    if (lastPageSize > 0) {\n                        reactions.push.apply(reactions, response.reactions);\n                    }\n                    offset += lastPageSize;\n                    return [3 /*break*/, 1];\n                case 3: return [2 /*return*/, reactions];\n            }\n        });\n    });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}