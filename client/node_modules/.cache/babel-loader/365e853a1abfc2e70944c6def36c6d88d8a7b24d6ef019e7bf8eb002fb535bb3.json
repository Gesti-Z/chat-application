{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport React, { useCallback, useMemo, useRef } from 'react';\nimport { useActionHandler, useDeleteHandler, useEditHandler, useFlagHandler, useMarkUnreadHandler, useMentionsHandler, useMuteHandler, useOpenThreadHandler, usePinHandler, useReactionClick, useReactionHandler, useReactionsFetcher, useRetryHandler, useUserHandler, useUserRole } from './hooks';\nimport { areMessagePropsEqual, getMessageActions, MESSAGE_ACTIONS } from './utils';\nimport { MessageProvider, useChannelActionContext, useChannelStateContext, useChatContext, useComponentContext } from '../../context';\nvar MessageWithContext = function (props) {\n  var canPin = props.canPin,\n    groupedByUser = props.groupedByUser,\n    propMessage = props.Message,\n    message = props.message,\n    _a = props.messageActions,\n    messageActions = _a === void 0 ? Object.keys(MESSAGE_ACTIONS) : _a,\n    propOnUserClick = props.onUserClick,\n    propOnUserHover = props.onUserHover,\n    userRoles = props.userRoles;\n  var client = useChatContext('Message').client;\n  var read = useChannelStateContext('Message').read;\n  var contextMessage = useComponentContext('Message').Message;\n  var actionsEnabled = message.type === 'regular' && message.status === 'received';\n  var MessageUIComponent = propMessage || contextMessage;\n  var _b = useEditHandler(),\n    clearEdit = _b.clearEdit,\n    editing = _b.editing,\n    setEdit = _b.setEdit;\n  var _c = useUserHandler(message, {\n      onUserClickHandler: propOnUserClick,\n      onUserHoverHandler: propOnUserHover\n    }),\n    onUserClick = _c.onUserClick,\n    onUserHover = _c.onUserHover;\n  var canDelete = userRoles.canDelete,\n    canEdit = userRoles.canEdit,\n    canFlag = userRoles.canFlag,\n    canMarkUnread = userRoles.canMarkUnread,\n    canMute = userRoles.canMute,\n    canQuote = userRoles.canQuote,\n    canReact = userRoles.canReact,\n    canReply = userRoles.canReply,\n    isMyMessage = userRoles.isMyMessage;\n  var messageIsUnread = useMemo(function () {\n    var _a;\n    return !!(!isMyMessage && ((_a = client.user) === null || _a === void 0 ? void 0 : _a.id) && read && (!read[client.user.id] || (message === null || message === void 0 ? void 0 : message.created_at) && new Date(message.created_at).getTime() > read[client.user.id].last_read.getTime()));\n  }, [client, isMyMessage, message.created_at, read]);\n  var messageActionsHandler = useCallback(function () {\n    return getMessageActions(messageActions, {\n      canDelete: canDelete,\n      canEdit: canEdit,\n      canFlag: canFlag,\n      canMarkUnread: canMarkUnread,\n      canMute: canMute,\n      canPin: canPin,\n      canQuote: canQuote,\n      canReact: canReact,\n      canReply: canReply\n    });\n  }, [messageActions, canDelete, canEdit, canFlag, canMarkUnread, canMute, canPin, canQuote, canReact, canReply]);\n  var canPinPropToNotPass = props.canPin,\n    // eslint-disable-line @typescript-eslint/no-unused-vars\n    messageActionsPropToNotPass = props.messageActions,\n    // eslint-disable-line @typescript-eslint/no-unused-vars\n    onlySenderCanEditPropToNotPass = props.onlySenderCanEdit,\n    // eslint-disable-line @typescript-eslint/no-unused-vars\n    onUserClickPropToNotPass = props.onUserClick,\n    // eslint-disable-line @typescript-eslint/no-unused-vars\n    onUserHoverPropToNotPass = props.onUserHover,\n    // eslint-disable-line @typescript-eslint/no-unused-vars\n    userRolesPropToNotPass = props.userRoles,\n    // eslint-disable-line @typescript-eslint/no-unused-vars\n    rest = __rest(props, [\"canPin\", \"messageActions\", \"onlySenderCanEdit\", \"onUserClick\", \"onUserHover\", \"userRoles\"]);\n  var messageContextValue = __assign(__assign({}, rest), {\n    actionsEnabled: actionsEnabled,\n    clearEditingState: clearEdit,\n    editing: editing,\n    getMessageActions: messageActionsHandler,\n    handleEdit: setEdit,\n    isMyMessage: function () {\n      return isMyMessage;\n    },\n    messageIsUnread: messageIsUnread,\n    onUserClick: onUserClick,\n    onUserHover: onUserHover,\n    setEditingState: setEdit\n  });\n  return React.createElement(MessageProvider, {\n    value: messageContextValue\n  }, React.createElement(MessageUIComponent, {\n    groupedByUser: groupedByUser\n  }));\n};\nvar MemoizedMessage = React.memo(MessageWithContext, areMessagePropsEqual);\n/**\n * The Message component is a context provider which implements all the logic required for rendering\n * an individual message. The actual UI of the message is delegated via the Message prop on Channel.\n */\nexport var Message = function (props) {\n  var closeReactionSelectorOnClick = props.closeReactionSelectorOnClick,\n    disableQuotedMessages = props.disableQuotedMessages,\n    getDeleteMessageErrorNotification = props.getDeleteMessageErrorNotification,\n    getFetchReactionsErrorNotification = props.getFetchReactionsErrorNotification,\n    getFlagMessageErrorNotification = props.getFlagMessageErrorNotification,\n    getFlagMessageSuccessNotification = props.getFlagMessageSuccessNotification,\n    getMarkMessageUnreadErrorNotification = props.getMarkMessageUnreadErrorNotification,\n    getMarkMessageUnreadSuccessNotification = props.getMarkMessageUnreadSuccessNotification,\n    getMuteUserErrorNotification = props.getMuteUserErrorNotification,\n    getMuteUserSuccessNotification = props.getMuteUserSuccessNotification,\n    getPinMessageErrorNotification = props.getPinMessageErrorNotification,\n    message = props.message,\n    _a = props.onlySenderCanEdit,\n    onlySenderCanEdit = _a === void 0 ? false : _a,\n    propOnMentionsClick = props.onMentionsClick,\n    propOnMentionsHover = props.onMentionsHover,\n    propOpenThread = props.openThread,\n    pinPermissions = props.pinPermissions,\n    propRetrySendMessage = props.retrySendMessage,\n    sortReactionDetails = props.sortReactionDetails,\n    sortReactions = props.sortReactions;\n  var addNotification = useChannelActionContext('Message').addNotification;\n  var _b = useChannelStateContext('Message'),\n    highlightedMessageId = _b.highlightedMessageId,\n    mutes = _b.mutes;\n  var reactionSelectorRef = useRef(null);\n  var handleAction = useActionHandler(message);\n  var handleOpenThread = useOpenThreadHandler(message, propOpenThread);\n  var handleReaction = useReactionHandler(message);\n  var handleRetry = useRetryHandler(propRetrySendMessage);\n  var userRoles = useUserRole(message, onlySenderCanEdit, disableQuotedMessages);\n  var handleFetchReactions = useReactionsFetcher(message, {\n    getErrorNotification: getFetchReactionsErrorNotification,\n    notify: addNotification\n  });\n  var handleDelete = useDeleteHandler(message, {\n    getErrorNotification: getDeleteMessageErrorNotification,\n    notify: addNotification\n  });\n  var handleFlag = useFlagHandler(message, {\n    getErrorNotification: getFlagMessageErrorNotification,\n    getSuccessNotification: getFlagMessageSuccessNotification,\n    notify: addNotification\n  });\n  var handleMarkUnread = useMarkUnreadHandler(message, {\n    getErrorNotification: getMarkMessageUnreadErrorNotification,\n    getSuccessNotification: getMarkMessageUnreadSuccessNotification,\n    notify: addNotification\n  });\n  var handleMute = useMuteHandler(message, {\n    getErrorNotification: getMuteUserErrorNotification,\n    getSuccessNotification: getMuteUserSuccessNotification,\n    notify: addNotification\n  });\n  var _c = useMentionsHandler(message, {\n      onMentionsClick: propOnMentionsClick,\n      onMentionsHover: propOnMentionsHover\n    }),\n    onMentionsClick = _c.onMentionsClick,\n    onMentionsHover = _c.onMentionsHover;\n  var _d = usePinHandler(message, pinPermissions, {\n      getErrorNotification: getPinMessageErrorNotification,\n      notify: addNotification\n    }),\n    canPin = _d.canPin,\n    handlePin = _d.handlePin;\n  var _e = useReactionClick(message, reactionSelectorRef, undefined, closeReactionSelectorOnClick),\n    isReactionEnabled = _e.isReactionEnabled,\n    onReactionListClick = _e.onReactionListClick,\n    showDetailedReactions = _e.showDetailedReactions;\n  var highlighted = highlightedMessageId === message.id;\n  return React.createElement(MemoizedMessage, {\n    additionalMessageInputProps: props.additionalMessageInputProps,\n    autoscrollToBottom: props.autoscrollToBottom,\n    canPin: canPin,\n    customMessageActions: props.customMessageActions,\n    disableQuotedMessages: props.disableQuotedMessages,\n    endOfGroup: props.endOfGroup,\n    firstOfGroup: props.firstOfGroup,\n    formatDate: props.formatDate,\n    groupedByUser: props.groupedByUser,\n    groupStyles: props.groupStyles,\n    handleAction: handleAction,\n    handleDelete: handleDelete,\n    handleFetchReactions: handleFetchReactions,\n    handleFlag: handleFlag,\n    handleMarkUnread: handleMarkUnread,\n    handleMute: handleMute,\n    handleOpenThread: handleOpenThread,\n    handlePin: handlePin,\n    handleReaction: handleReaction,\n    handleRetry: handleRetry,\n    highlighted: highlighted,\n    initialMessage: props.initialMessage,\n    isReactionEnabled: isReactionEnabled,\n    lastReceivedId: props.lastReceivedId,\n    message: message,\n    Message: props.Message,\n    messageActions: props.messageActions,\n    messageListRect: props.messageListRect,\n    mutes: mutes,\n    onMentionsClickMessage: onMentionsClick,\n    onMentionsHoverMessage: onMentionsHover,\n    onReactionListClick: onReactionListClick,\n    onUserClick: props.onUserClick,\n    onUserHover: props.onUserHover,\n    pinPermissions: props.pinPermissions,\n    reactionSelectorRef: reactionSelectorRef,\n    readBy: props.readBy,\n    renderText: props.renderText,\n    showDetailedReactions: showDetailedReactions,\n    sortReactionDetails: sortReactionDetails,\n    sortReactions: sortReactions,\n    threadList: props.threadList,\n    unsafeHTML: props.unsafeHTML,\n    userRoles: userRoles\n  });\n};","map":{"version":3,"names":["__assign","__rest","React","useCallback","useMemo","useRef","useActionHandler","useDeleteHandler","useEditHandler","useFlagHandler","useMarkUnreadHandler","useMentionsHandler","useMuteHandler","useOpenThreadHandler","usePinHandler","useReactionClick","useReactionHandler","useReactionsFetcher","useRetryHandler","useUserHandler","useUserRole","areMessagePropsEqual","getMessageActions","MESSAGE_ACTIONS","MessageProvider","useChannelActionContext","useChannelStateContext","useChatContext","useComponentContext","MessageWithContext","props","canPin","groupedByUser","propMessage","Message","message","_a","messageActions","Object","keys","propOnUserClick","onUserClick","propOnUserHover","onUserHover","userRoles","client","read","contextMessage","actionsEnabled","type","status","MessageUIComponent","_b","clearEdit","editing","setEdit","_c","onUserClickHandler","onUserHoverHandler","canDelete","canEdit","canFlag","canMarkUnread","canMute","canQuote","canReact","canReply","isMyMessage","messageIsUnread","user","id","created_at","Date","getTime","last_read","messageActionsHandler","canPinPropToNotPass","messageActionsPropToNotPass","onlySenderCanEditPropToNotPass","onlySenderCanEdit","onUserClickPropToNotPass","onUserHoverPropToNotPass","userRolesPropToNotPass","rest","messageContextValue","clearEditingState","handleEdit","setEditingState","createElement","value","MemoizedMessage","memo","closeReactionSelectorOnClick","disableQuotedMessages","getDeleteMessageErrorNotification","getFetchReactionsErrorNotification","getFlagMessageErrorNotification","getFlagMessageSuccessNotification","getMarkMessageUnreadErrorNotification","getMarkMessageUnreadSuccessNotification","getMuteUserErrorNotification","getMuteUserSuccessNotification","getPinMessageErrorNotification","propOnMentionsClick","onMentionsClick","propOnMentionsHover","onMentionsHover","propOpenThread","openThread","pinPermissions","propRetrySendMessage","retrySendMessage","sortReactionDetails","sortReactions","addNotification","highlightedMessageId","mutes","reactionSelectorRef","handleAction","handleOpenThread","handleReaction","handleRetry","handleFetchReactions","getErrorNotification","notify","handleDelete","handleFlag","getSuccessNotification","handleMarkUnread","handleMute","_d","handlePin","_e","undefined","isReactionEnabled","onReactionListClick","showDetailedReactions","highlighted","additionalMessageInputProps","autoscrollToBottom","customMessageActions","endOfGroup","firstOfGroup","formatDate","groupStyles","initialMessage","lastReceivedId","messageListRect","onMentionsClickMessage","onMentionsHoverMessage","readBy","renderText","threadList","unsafeHTML"],"sources":["C:/Users/Gesti/Desktop/chat_application/client/node_modules/stream-chat-react/dist/components/Message/Message.js"],"sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport React, { useCallback, useMemo, useRef } from 'react';\nimport { useActionHandler, useDeleteHandler, useEditHandler, useFlagHandler, useMarkUnreadHandler, useMentionsHandler, useMuteHandler, useOpenThreadHandler, usePinHandler, useReactionClick, useReactionHandler, useReactionsFetcher, useRetryHandler, useUserHandler, useUserRole, } from './hooks';\nimport { areMessagePropsEqual, getMessageActions, MESSAGE_ACTIONS } from './utils';\nimport { MessageProvider, useChannelActionContext, useChannelStateContext, useChatContext, useComponentContext, } from '../../context';\nvar MessageWithContext = function (props) {\n    var canPin = props.canPin, groupedByUser = props.groupedByUser, propMessage = props.Message, message = props.message, _a = props.messageActions, messageActions = _a === void 0 ? Object.keys(MESSAGE_ACTIONS) : _a, propOnUserClick = props.onUserClick, propOnUserHover = props.onUserHover, userRoles = props.userRoles;\n    var client = useChatContext('Message').client;\n    var read = useChannelStateContext('Message').read;\n    var contextMessage = useComponentContext('Message').Message;\n    var actionsEnabled = message.type === 'regular' && message.status === 'received';\n    var MessageUIComponent = propMessage || contextMessage;\n    var _b = useEditHandler(), clearEdit = _b.clearEdit, editing = _b.editing, setEdit = _b.setEdit;\n    var _c = useUserHandler(message, {\n        onUserClickHandler: propOnUserClick,\n        onUserHoverHandler: propOnUserHover,\n    }), onUserClick = _c.onUserClick, onUserHover = _c.onUserHover;\n    var canDelete = userRoles.canDelete, canEdit = userRoles.canEdit, canFlag = userRoles.canFlag, canMarkUnread = userRoles.canMarkUnread, canMute = userRoles.canMute, canQuote = userRoles.canQuote, canReact = userRoles.canReact, canReply = userRoles.canReply, isMyMessage = userRoles.isMyMessage;\n    var messageIsUnread = useMemo(function () {\n        var _a;\n        return !!(!isMyMessage &&\n            ((_a = client.user) === null || _a === void 0 ? void 0 : _a.id) &&\n            read &&\n            (!read[client.user.id] ||\n                ((message === null || message === void 0 ? void 0 : message.created_at) &&\n                    new Date(message.created_at).getTime() > read[client.user.id].last_read.getTime())));\n    }, [client, isMyMessage, message.created_at, read]);\n    var messageActionsHandler = useCallback(function () {\n        return getMessageActions(messageActions, {\n            canDelete: canDelete,\n            canEdit: canEdit,\n            canFlag: canFlag,\n            canMarkUnread: canMarkUnread,\n            canMute: canMute,\n            canPin: canPin,\n            canQuote: canQuote,\n            canReact: canReact,\n            canReply: canReply,\n        });\n    }, [\n        messageActions,\n        canDelete,\n        canEdit,\n        canFlag,\n        canMarkUnread,\n        canMute,\n        canPin,\n        canQuote,\n        canReact,\n        canReply,\n    ]);\n    var canPinPropToNotPass = props.canPin, // eslint-disable-line @typescript-eslint/no-unused-vars\n    messageActionsPropToNotPass = props.messageActions, // eslint-disable-line @typescript-eslint/no-unused-vars\n    onlySenderCanEditPropToNotPass = props.onlySenderCanEdit, // eslint-disable-line @typescript-eslint/no-unused-vars\n    onUserClickPropToNotPass = props.onUserClick, // eslint-disable-line @typescript-eslint/no-unused-vars\n    onUserHoverPropToNotPass = props.onUserHover, // eslint-disable-line @typescript-eslint/no-unused-vars\n    userRolesPropToNotPass = props.userRoles, // eslint-disable-line @typescript-eslint/no-unused-vars\n    rest = __rest(props, [\"canPin\", \"messageActions\", \"onlySenderCanEdit\", \"onUserClick\", \"onUserHover\", \"userRoles\"]);\n    var messageContextValue = __assign(__assign({}, rest), { actionsEnabled: actionsEnabled, clearEditingState: clearEdit, editing: editing, getMessageActions: messageActionsHandler, handleEdit: setEdit, isMyMessage: function () { return isMyMessage; }, messageIsUnread: messageIsUnread, onUserClick: onUserClick, onUserHover: onUserHover, setEditingState: setEdit });\n    return (React.createElement(MessageProvider, { value: messageContextValue },\n        React.createElement(MessageUIComponent, { groupedByUser: groupedByUser })));\n};\nvar MemoizedMessage = React.memo(MessageWithContext, areMessagePropsEqual);\n/**\n * The Message component is a context provider which implements all the logic required for rendering\n * an individual message. The actual UI of the message is delegated via the Message prop on Channel.\n */\nexport var Message = function (props) {\n    var closeReactionSelectorOnClick = props.closeReactionSelectorOnClick, disableQuotedMessages = props.disableQuotedMessages, getDeleteMessageErrorNotification = props.getDeleteMessageErrorNotification, getFetchReactionsErrorNotification = props.getFetchReactionsErrorNotification, getFlagMessageErrorNotification = props.getFlagMessageErrorNotification, getFlagMessageSuccessNotification = props.getFlagMessageSuccessNotification, getMarkMessageUnreadErrorNotification = props.getMarkMessageUnreadErrorNotification, getMarkMessageUnreadSuccessNotification = props.getMarkMessageUnreadSuccessNotification, getMuteUserErrorNotification = props.getMuteUserErrorNotification, getMuteUserSuccessNotification = props.getMuteUserSuccessNotification, getPinMessageErrorNotification = props.getPinMessageErrorNotification, message = props.message, _a = props.onlySenderCanEdit, onlySenderCanEdit = _a === void 0 ? false : _a, propOnMentionsClick = props.onMentionsClick, propOnMentionsHover = props.onMentionsHover, propOpenThread = props.openThread, pinPermissions = props.pinPermissions, propRetrySendMessage = props.retrySendMessage, sortReactionDetails = props.sortReactionDetails, sortReactions = props.sortReactions;\n    var addNotification = useChannelActionContext('Message').addNotification;\n    var _b = useChannelStateContext('Message'), highlightedMessageId = _b.highlightedMessageId, mutes = _b.mutes;\n    var reactionSelectorRef = useRef(null);\n    var handleAction = useActionHandler(message);\n    var handleOpenThread = useOpenThreadHandler(message, propOpenThread);\n    var handleReaction = useReactionHandler(message);\n    var handleRetry = useRetryHandler(propRetrySendMessage);\n    var userRoles = useUserRole(message, onlySenderCanEdit, disableQuotedMessages);\n    var handleFetchReactions = useReactionsFetcher(message, {\n        getErrorNotification: getFetchReactionsErrorNotification,\n        notify: addNotification,\n    });\n    var handleDelete = useDeleteHandler(message, {\n        getErrorNotification: getDeleteMessageErrorNotification,\n        notify: addNotification,\n    });\n    var handleFlag = useFlagHandler(message, {\n        getErrorNotification: getFlagMessageErrorNotification,\n        getSuccessNotification: getFlagMessageSuccessNotification,\n        notify: addNotification,\n    });\n    var handleMarkUnread = useMarkUnreadHandler(message, {\n        getErrorNotification: getMarkMessageUnreadErrorNotification,\n        getSuccessNotification: getMarkMessageUnreadSuccessNotification,\n        notify: addNotification,\n    });\n    var handleMute = useMuteHandler(message, {\n        getErrorNotification: getMuteUserErrorNotification,\n        getSuccessNotification: getMuteUserSuccessNotification,\n        notify: addNotification,\n    });\n    var _c = useMentionsHandler(message, {\n        onMentionsClick: propOnMentionsClick,\n        onMentionsHover: propOnMentionsHover,\n    }), onMentionsClick = _c.onMentionsClick, onMentionsHover = _c.onMentionsHover;\n    var _d = usePinHandler(message, pinPermissions, {\n        getErrorNotification: getPinMessageErrorNotification,\n        notify: addNotification,\n    }), canPin = _d.canPin, handlePin = _d.handlePin;\n    var _e = useReactionClick(message, reactionSelectorRef, undefined, closeReactionSelectorOnClick), isReactionEnabled = _e.isReactionEnabled, onReactionListClick = _e.onReactionListClick, showDetailedReactions = _e.showDetailedReactions;\n    var highlighted = highlightedMessageId === message.id;\n    return (React.createElement(MemoizedMessage, { additionalMessageInputProps: props.additionalMessageInputProps, autoscrollToBottom: props.autoscrollToBottom, canPin: canPin, customMessageActions: props.customMessageActions, disableQuotedMessages: props.disableQuotedMessages, endOfGroup: props.endOfGroup, firstOfGroup: props.firstOfGroup, formatDate: props.formatDate, groupedByUser: props.groupedByUser, groupStyles: props.groupStyles, handleAction: handleAction, handleDelete: handleDelete, handleFetchReactions: handleFetchReactions, handleFlag: handleFlag, handleMarkUnread: handleMarkUnread, handleMute: handleMute, handleOpenThread: handleOpenThread, handlePin: handlePin, handleReaction: handleReaction, handleRetry: handleRetry, highlighted: highlighted, initialMessage: props.initialMessage, isReactionEnabled: isReactionEnabled, lastReceivedId: props.lastReceivedId, message: message, Message: props.Message, messageActions: props.messageActions, messageListRect: props.messageListRect, mutes: mutes, onMentionsClickMessage: onMentionsClick, onMentionsHoverMessage: onMentionsHover, onReactionListClick: onReactionListClick, onUserClick: props.onUserClick, onUserHover: props.onUserHover, pinPermissions: props.pinPermissions, reactionSelectorRef: reactionSelectorRef, readBy: props.readBy, renderText: props.renderText, showDetailedReactions: showDetailedReactions, sortReactionDetails: sortReactionDetails, sortReactions: sortReactions, threadList: props.threadList, unsafeHTML: props.unsafeHTML, userRoles: userRoles }));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}