{"ast":null,"code":"import { __assign, __awaiter, __generator, __spreadArray } from \"tslib\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport uniqBy from 'lodash.uniqby';\nimport { MAX_QUERY_CHANNELS_LIMIT } from '../utils';\nimport { useChatContext } from '../../../context/ChatContext';\nimport { DEFAULT_INITIAL_CHANNEL_PAGE_SIZE } from '../../../constants/limits';\nvar RECOVER_LOADED_CHANNELS_THROTTLE_INTERVAL_IN_MS = 5000;\nvar MIN_RECOVER_LOADED_CHANNELS_THROTTLE_INTERVAL_IN_MS = 2000;\nexport var usePaginatedChannels = function (client, filters, sort, options, activeChannelHandler, recoveryThrottleIntervalMs, customQueryChannels) {\n  if (recoveryThrottleIntervalMs === void 0) {\n    recoveryThrottleIntervalMs = RECOVER_LOADED_CHANNELS_THROTTLE_INTERVAL_IN_MS;\n  }\n  var _a = useChatContext('usePaginatedChannels').channelsQueryState,\n    error = _a.error,\n    setError = _a.setError,\n    setQueryInProgress = _a.setQueryInProgress;\n  var _b = useState([]),\n    channels = _b[0],\n    setChannels = _b[1];\n  var _c = useState(true),\n    hasNextPage = _c[0],\n    setHasNextPage = _c[1];\n  var lastRecoveryTimestamp = useRef();\n  var recoveryThrottleInterval = recoveryThrottleIntervalMs < MIN_RECOVER_LOADED_CHANNELS_THROTTLE_INTERVAL_IN_MS ? MIN_RECOVER_LOADED_CHANNELS_THROTTLE_INTERVAL_IN_MS : recoveryThrottleIntervalMs !== null && recoveryThrottleIntervalMs !== void 0 ? recoveryThrottleIntervalMs : RECOVER_LOADED_CHANNELS_THROTTLE_INTERVAL_IN_MS;\n  // memoize props\n  var filterString = useMemo(function () {\n    return JSON.stringify(filters);\n  }, [filters]);\n  var sortString = useMemo(function () {\n    return JSON.stringify(sort);\n  }, [sort]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  var queryChannels = function (queryType) {\n    if (queryType === void 0) {\n      queryType = 'load-more';\n    }\n    return __awaiter(void 0, void 0, void 0, function () {\n      var offset, newOptions, channelQueryResponse, newChannels, err_1;\n      var _a, _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            setError(null);\n            if (queryType === 'reload') {\n              setChannels([]);\n            }\n            setQueryInProgress(queryType);\n            _c.label = 1;\n          case 1:\n            _c.trys.push([1, 6,, 7]);\n            if (!customQueryChannels) return [3 /*break*/, 3];\n            return [4 /*yield*/, customQueryChannels({\n              currentChannels: channels,\n              queryType: queryType,\n              setChannels: setChannels,\n              setHasNextPage: setHasNextPage\n            })];\n          case 2:\n            _c.sent();\n            return [3 /*break*/, 5];\n          case 3:\n            offset = queryType === 'reload' ? 0 : channels.length;\n            newOptions = __assign({\n              limit: (_a = options === null || options === void 0 ? void 0 : options.limit) !== null && _a !== void 0 ? _a : MAX_QUERY_CHANNELS_LIMIT,\n              message_limit: (_b = options === null || options === void 0 ? void 0 : options.message_limit) !== null && _b !== void 0 ? _b : DEFAULT_INITIAL_CHANNEL_PAGE_SIZE,\n              offset: offset\n            }, options);\n            return [4 /*yield*/, client.queryChannels(filters, sort || {}, newOptions)];\n          case 4:\n            channelQueryResponse = _c.sent();\n            newChannels = queryType === 'reload' ? channelQueryResponse : uniqBy(__spreadArray(__spreadArray([], channels, true), channelQueryResponse, true), 'cid');\n            setChannels(newChannels);\n            setHasNextPage(channelQueryResponse.length >= newOptions.limit);\n            // Set active channel only on load of first page\n            if (!offset && activeChannelHandler) {\n              activeChannelHandler(newChannels, setChannels);\n            }\n            _c.label = 5;\n          case 5:\n            return [3 /*break*/, 7];\n          case 6:\n            err_1 = _c.sent();\n            console.warn(err_1);\n            setError(err_1);\n            return [3 /*break*/, 7];\n          case 7:\n            setQueryInProgress(null);\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  var throttleRecover = useCallback(function () {\n    var now = Date.now();\n    var isFirstRecovery = !lastRecoveryTimestamp.current;\n    var timeElapsedSinceLastRecoveryMs = lastRecoveryTimestamp.current ? now - lastRecoveryTimestamp.current : 0;\n    if (!isFirstRecovery && timeElapsedSinceLastRecoveryMs < recoveryThrottleInterval && !error) {\n      return;\n    }\n    lastRecoveryTimestamp.current = now;\n    queryChannels('reload');\n  }, [error, queryChannels, recoveryThrottleInterval]);\n  var loadNextPage = function () {\n    queryChannels();\n  };\n  useEffect(function () {\n    if (client.recoverStateOnReconnect) return;\n    var unsubscribe = client.on('connection.recovered', throttleRecover).unsubscribe;\n    return function () {\n      unsubscribe();\n    };\n  }, [client, throttleRecover]);\n  useEffect(function () {\n    queryChannels('reload');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filterString, sortString]);\n  return {\n    channels: channels,\n    hasNextPage: hasNextPage,\n    loadNextPage: loadNextPage,\n    setChannels: setChannels\n  };\n};","map":{"version":3,"names":["__assign","__awaiter","__generator","__spreadArray","useCallback","useEffect","useMemo","useRef","useState","uniqBy","MAX_QUERY_CHANNELS_LIMIT","useChatContext","DEFAULT_INITIAL_CHANNEL_PAGE_SIZE","RECOVER_LOADED_CHANNELS_THROTTLE_INTERVAL_IN_MS","MIN_RECOVER_LOADED_CHANNELS_THROTTLE_INTERVAL_IN_MS","usePaginatedChannels","client","filters","sort","options","activeChannelHandler","recoveryThrottleIntervalMs","customQueryChannels","_a","channelsQueryState","error","setError","setQueryInProgress","_b","channels","setChannels","_c","hasNextPage","setHasNextPage","lastRecoveryTimestamp","recoveryThrottleInterval","filterString","JSON","stringify","sortString","queryChannels","queryType","offset","newOptions","channelQueryResponse","newChannels","err_1","label","trys","push","currentChannels","sent","length","limit","message_limit","console","warn","throttleRecover","now","Date","isFirstRecovery","current","timeElapsedSinceLastRecoveryMs","loadNextPage","recoverStateOnReconnect","unsubscribe","on"],"sources":["C:/Users/Gesti/Desktop/chat_application/client/node_modules/stream-chat-react/dist/components/ChannelList/hooks/usePaginatedChannels.js"],"sourcesContent":["import { __assign, __awaiter, __generator, __spreadArray } from \"tslib\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport uniqBy from 'lodash.uniqby';\nimport { MAX_QUERY_CHANNELS_LIMIT } from '../utils';\nimport { useChatContext } from '../../../context/ChatContext';\nimport { DEFAULT_INITIAL_CHANNEL_PAGE_SIZE } from '../../../constants/limits';\nvar RECOVER_LOADED_CHANNELS_THROTTLE_INTERVAL_IN_MS = 5000;\nvar MIN_RECOVER_LOADED_CHANNELS_THROTTLE_INTERVAL_IN_MS = 2000;\nexport var usePaginatedChannels = function (client, filters, sort, options, activeChannelHandler, recoveryThrottleIntervalMs, customQueryChannels) {\n    if (recoveryThrottleIntervalMs === void 0) { recoveryThrottleIntervalMs = RECOVER_LOADED_CHANNELS_THROTTLE_INTERVAL_IN_MS; }\n    var _a = useChatContext('usePaginatedChannels').channelsQueryState, error = _a.error, setError = _a.setError, setQueryInProgress = _a.setQueryInProgress;\n    var _b = useState([]), channels = _b[0], setChannels = _b[1];\n    var _c = useState(true), hasNextPage = _c[0], setHasNextPage = _c[1];\n    var lastRecoveryTimestamp = useRef();\n    var recoveryThrottleInterval = recoveryThrottleIntervalMs < MIN_RECOVER_LOADED_CHANNELS_THROTTLE_INTERVAL_IN_MS\n        ? MIN_RECOVER_LOADED_CHANNELS_THROTTLE_INTERVAL_IN_MS\n        : recoveryThrottleIntervalMs !== null && recoveryThrottleIntervalMs !== void 0 ? recoveryThrottleIntervalMs : RECOVER_LOADED_CHANNELS_THROTTLE_INTERVAL_IN_MS;\n    // memoize props\n    var filterString = useMemo(function () { return JSON.stringify(filters); }, [filters]);\n    var sortString = useMemo(function () { return JSON.stringify(sort); }, [sort]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    var queryChannels = function (queryType) {\n        if (queryType === void 0) { queryType = 'load-more'; }\n        return __awaiter(void 0, void 0, void 0, function () {\n            var offset, newOptions, channelQueryResponse, newChannels, err_1;\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        setError(null);\n                        if (queryType === 'reload') {\n                            setChannels([]);\n                        }\n                        setQueryInProgress(queryType);\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 6, , 7]);\n                        if (!customQueryChannels) return [3 /*break*/, 3];\n                        return [4 /*yield*/, customQueryChannels({\n                                currentChannels: channels,\n                                queryType: queryType,\n                                setChannels: setChannels,\n                                setHasNextPage: setHasNextPage,\n                            })];\n                    case 2:\n                        _c.sent();\n                        return [3 /*break*/, 5];\n                    case 3:\n                        offset = queryType === 'reload' ? 0 : channels.length;\n                        newOptions = __assign({ limit: (_a = options === null || options === void 0 ? void 0 : options.limit) !== null && _a !== void 0 ? _a : MAX_QUERY_CHANNELS_LIMIT, message_limit: (_b = options === null || options === void 0 ? void 0 : options.message_limit) !== null && _b !== void 0 ? _b : DEFAULT_INITIAL_CHANNEL_PAGE_SIZE, offset: offset }, options);\n                        return [4 /*yield*/, client.queryChannels(filters, sort || {}, newOptions)];\n                    case 4:\n                        channelQueryResponse = _c.sent();\n                        newChannels = queryType === 'reload'\n                            ? channelQueryResponse\n                            : uniqBy(__spreadArray(__spreadArray([], channels, true), channelQueryResponse, true), 'cid');\n                        setChannels(newChannels);\n                        setHasNextPage(channelQueryResponse.length >= newOptions.limit);\n                        // Set active channel only on load of first page\n                        if (!offset && activeChannelHandler) {\n                            activeChannelHandler(newChannels, setChannels);\n                        }\n                        _c.label = 5;\n                    case 5: return [3 /*break*/, 7];\n                    case 6:\n                        err_1 = _c.sent();\n                        console.warn(err_1);\n                        setError(err_1);\n                        return [3 /*break*/, 7];\n                    case 7:\n                        setQueryInProgress(null);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    var throttleRecover = useCallback(function () {\n        var now = Date.now();\n        var isFirstRecovery = !lastRecoveryTimestamp.current;\n        var timeElapsedSinceLastRecoveryMs = lastRecoveryTimestamp.current\n            ? now - lastRecoveryTimestamp.current\n            : 0;\n        if (!isFirstRecovery && timeElapsedSinceLastRecoveryMs < recoveryThrottleInterval && !error) {\n            return;\n        }\n        lastRecoveryTimestamp.current = now;\n        queryChannels('reload');\n    }, [error, queryChannels, recoveryThrottleInterval]);\n    var loadNextPage = function () {\n        queryChannels();\n    };\n    useEffect(function () {\n        if (client.recoverStateOnReconnect)\n            return;\n        var unsubscribe = client.on('connection.recovered', throttleRecover).unsubscribe;\n        return function () {\n            unsubscribe();\n        };\n    }, [client, throttleRecover]);\n    useEffect(function () {\n        queryChannels('reload');\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filterString, sortString]);\n    return {\n        channels: channels,\n        hasNextPage: hasNextPage,\n        loadNextPage: loadNextPage,\n        setChannels: setChannels,\n    };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}