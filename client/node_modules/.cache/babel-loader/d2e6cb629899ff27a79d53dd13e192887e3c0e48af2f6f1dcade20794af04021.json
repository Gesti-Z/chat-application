{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { validateAndGetMessage } from '../utils';\nimport { useChannelStateContext, useTranslationContext } from '../../../context';\nexport var useMarkUnreadHandler = function (message, notifications) {\n  if (notifications === void 0) {\n    notifications = {};\n  }\n  var getErrorNotification = notifications.getErrorNotification,\n    getSuccessNotification = notifications.getSuccessNotification,\n    notify = notifications.notify;\n  var channel = useChannelStateContext('useMarkUnreadHandler').channel;\n  var t = useTranslationContext('useMarkUnreadHandler').t;\n  return function (event) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var successMessage, e_1, errorMessage;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            event.preventDefault();\n            if (!(message === null || message === void 0 ? void 0 : message.id)) {\n              console.warn('Mark unread handler does not have access to message id');\n              return [2 /*return*/];\n            }\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, channel.markUnread({\n              message_id: message.id\n            })];\n          case 2:\n            _a.sent();\n            if (!notify) return [2 /*return*/];\n            successMessage = getSuccessNotification && validateAndGetMessage(getSuccessNotification, [message]);\n            if (successMessage) notify(successMessage, 'success');\n            return [3 /*break*/, 4];\n          case 3:\n            e_1 = _a.sent();\n            if (!notify) return [2 /*return*/];\n            errorMessage = getErrorNotification && validateAndGetMessage(getErrorNotification, [message]);\n            if (getErrorNotification && !errorMessage) return [2 /*return*/];\n            notify(errorMessage || t('Error marking message unread. Cannot mark unread messages older than the newest 100 channel messages.'), 'error');\n            return [3 /*break*/, 4];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n};","map":{"version":3,"names":["__awaiter","__generator","validateAndGetMessage","useChannelStateContext","useTranslationContext","useMarkUnreadHandler","message","notifications","getErrorNotification","getSuccessNotification","notify","channel","t","event","successMessage","e_1","errorMessage","_a","label","preventDefault","id","console","warn","trys","push","markUnread","message_id","sent"],"sources":["C:/Users/Gesti/Desktop/chat_application/client/node_modules/stream-chat-react/dist/components/Message/hooks/useMarkUnreadHandler.js"],"sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { validateAndGetMessage } from '../utils';\nimport { useChannelStateContext, useTranslationContext } from '../../../context';\nexport var useMarkUnreadHandler = function (message, notifications) {\n    if (notifications === void 0) { notifications = {}; }\n    var getErrorNotification = notifications.getErrorNotification, getSuccessNotification = notifications.getSuccessNotification, notify = notifications.notify;\n    var channel = useChannelStateContext('useMarkUnreadHandler').channel;\n    var t = useTranslationContext('useMarkUnreadHandler').t;\n    return function (event) { return __awaiter(void 0, void 0, void 0, function () {\n        var successMessage, e_1, errorMessage;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    event.preventDefault();\n                    if (!(message === null || message === void 0 ? void 0 : message.id)) {\n                        console.warn('Mark unread handler does not have access to message id');\n                        return [2 /*return*/];\n                    }\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, channel.markUnread({ message_id: message.id })];\n                case 2:\n                    _a.sent();\n                    if (!notify)\n                        return [2 /*return*/];\n                    successMessage = getSuccessNotification && validateAndGetMessage(getSuccessNotification, [message]);\n                    if (successMessage)\n                        notify(successMessage, 'success');\n                    return [3 /*break*/, 4];\n                case 3:\n                    e_1 = _a.sent();\n                    if (!notify)\n                        return [2 /*return*/];\n                    errorMessage = getErrorNotification && validateAndGetMessage(getErrorNotification, [message]);\n                    if (getErrorNotification && !errorMessage)\n                        return [2 /*return*/];\n                    notify(errorMessage ||\n                        t('Error marking message unread. Cannot mark unread messages older than the newest 100 channel messages.'), 'error');\n                    return [3 /*break*/, 4];\n                case 4: return [2 /*return*/];\n            }\n        });\n    }); };\n};\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC9C,SAASC,qBAAqB,QAAQ,UAAU;AAChD,SAASC,sBAAsB,EAAEC,qBAAqB,QAAQ,kBAAkB;AAChF,OAAO,IAAIC,oBAAoB,GAAG,SAAAA,CAAUC,OAAO,EAAEC,aAAa,EAAE;EAChE,IAAIA,aAAa,KAAK,KAAK,CAAC,EAAE;IAAEA,aAAa,GAAG,CAAC,CAAC;EAAE;EACpD,IAAIC,oBAAoB,GAAGD,aAAa,CAACC,oBAAoB;IAAEC,sBAAsB,GAAGF,aAAa,CAACE,sBAAsB;IAAEC,MAAM,GAAGH,aAAa,CAACG,MAAM;EAC3J,IAAIC,OAAO,GAAGR,sBAAsB,CAAC,sBAAsB,CAAC,CAACQ,OAAO;EACpE,IAAIC,CAAC,GAAGR,qBAAqB,CAAC,sBAAsB,CAAC,CAACQ,CAAC;EACvD,OAAO,UAAUC,KAAK,EAAE;IAAE,OAAOb,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC3E,IAAIc,cAAc,EAAEC,GAAG,EAAEC,YAAY;MACrC,OAAOf,WAAW,CAAC,IAAI,EAAE,UAAUgB,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACC,KAAK;UACZ,KAAK,CAAC;YACFL,KAAK,CAACM,cAAc,CAAC,CAAC;YACtB,IAAI,EAAEb,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACc,EAAE,CAAC,EAAE;cACjEC,OAAO,CAACC,IAAI,CAAC,wDAAwD,CAAC;cACtE,OAAO,CAAC,CAAC,CAAC,WAAW;YACzB;YACAL,EAAE,CAACC,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACFD,EAAE,CAACM,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,CAAC,CAAC,WAAWb,OAAO,CAACc,UAAU,CAAC;cAAEC,UAAU,EAAEpB,OAAO,CAACc;YAAG,CAAC,CAAC,CAAC;UACxE,KAAK,CAAC;YACFH,EAAE,CAACU,IAAI,CAAC,CAAC;YACT,IAAI,CAACjB,MAAM,EACP,OAAO,CAAC,CAAC,CAAC,WAAW;YACzBI,cAAc,GAAGL,sBAAsB,IAAIP,qBAAqB,CAACO,sBAAsB,EAAE,CAACH,OAAO,CAAC,CAAC;YACnG,IAAIQ,cAAc,EACdJ,MAAM,CAACI,cAAc,EAAE,SAAS,CAAC;YACrC,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;UAC3B,KAAK,CAAC;YACFC,GAAG,GAAGE,EAAE,CAACU,IAAI,CAAC,CAAC;YACf,IAAI,CAACjB,MAAM,EACP,OAAO,CAAC,CAAC,CAAC,WAAW;YACzBM,YAAY,GAAGR,oBAAoB,IAAIN,qBAAqB,CAACM,oBAAoB,EAAE,CAACF,OAAO,CAAC,CAAC;YAC7F,IAAIE,oBAAoB,IAAI,CAACQ,YAAY,EACrC,OAAO,CAAC,CAAC,CAAC,WAAW;YACzBN,MAAM,CAACM,YAAY,IACfJ,CAAC,CAAC,uGAAuG,CAAC,EAAE,OAAO,CAAC;YACxH,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;UAC3B,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW;QACjC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EAAE,CAAC;AACT,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}