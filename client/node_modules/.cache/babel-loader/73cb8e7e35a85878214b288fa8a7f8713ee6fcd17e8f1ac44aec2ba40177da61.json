{"ast":null,"code":"import { __assign, __spreadArray } from \"tslib\";\nimport React from 'react';\nimport ReactMarkdown, { defaultUrlTransform } from 'react-markdown';\nimport { find } from 'linkifyjs';\nimport uniqBy from 'lodash.uniqby';\nimport remarkGfm from 'remark-gfm';\nimport { Anchor, Emoji, Mention } from './componentRenderers';\nimport { detectHttp, escapeRegExp, matchMarkdownLinks, messageCodeBlocks } from './regex';\nimport { emojiMarkdownPlugin, mentionsMarkdownPlugin } from './rehypePlugins';\nimport { htmlToTextPlugin, keepLineBreaksPlugin } from './remarkPlugins';\nexport var defaultAllowedTagNames = ['html', 'text', 'br', 'p', 'em', 'strong', 'a', 'ol', 'ul', 'li', 'code', 'pre', 'blockquote', 'del',\n// custom types (tagNames)\n'emoji', 'mention'];\nfunction formatUrlForDisplay(url) {\n  try {\n    return decodeURIComponent(url).replace(detectHttp, '');\n  } catch (e) {\n    return url;\n  }\n}\nfunction encodeDecode(url) {\n  try {\n    return encodeURI(decodeURIComponent(url));\n  } catch (error) {\n    return url;\n  }\n}\nvar urlTransform = function (uri) {\n  return uri.startsWith('app://') ? uri : defaultUrlTransform(uri);\n};\nvar getPluginsForward = function (plugins) {\n  return plugins;\n};\nexport var markDownRenderers = {\n  a: Anchor,\n  emoji: Emoji,\n  mention: Mention\n};\nexport var renderText = function (text, mentionedUsers, _a) {\n  var _b = _a === void 0 ? {} : _a,\n    _c = _b.allowedTagNames,\n    allowedTagNames = _c === void 0 ? defaultAllowedTagNames : _c,\n    customMarkDownRenderers = _b.customMarkDownRenderers,\n    _d = _b.getRehypePlugins,\n    getRehypePlugins = _d === void 0 ? getPluginsForward : _d,\n    _e = _b.getRemarkPlugins,\n    getRemarkPlugins = _e === void 0 ? getPluginsForward : _e;\n  // take the @ mentions and turn them into markdown?\n  // translate links\n  if (!text) return null;\n  if (text.trim().length === 1) return React.createElement(React.Fragment, null, text);\n  var newText = text;\n  var markdownLinks = matchMarkdownLinks(newText);\n  var codeBlocks = messageCodeBlocks(newText);\n  // extract all valid links/emails within text and replace it with proper markup\n  uniqBy(__spreadArray(__spreadArray([], find(newText, 'email'), true), find(newText, 'url'), true), 'value').forEach(function (_a) {\n    var href = _a.href,\n      type = _a.type,\n      value = _a.value;\n    var linkIsInBlock = codeBlocks.some(function (block) {\n      return block === null || block === void 0 ? void 0 : block.includes(value);\n    });\n    // check if message is already  markdown\n    var noParsingNeeded = markdownLinks && markdownLinks.filter(function (text) {\n      var strippedHref = href === null || href === void 0 ? void 0 : href.replace(detectHttp, '');\n      var strippedText = text === null || text === void 0 ? void 0 : text.replace(detectHttp, '');\n      if (!strippedHref || !strippedText) return false;\n      return strippedHref.includes(strippedText) || strippedText.includes(strippedHref);\n    });\n    if (noParsingNeeded.length > 0 || linkIsInBlock) return;\n    try {\n      // special case for mentions:\n      // it could happen that a user's name matches with an e-mail format pattern.\n      // in that case, we check whether the found e-mail is actually a mention\n      // by naively checking for an existence of @ sign in front of it.\n      if (type === 'email' && mentionedUsers) {\n        var emailMatchesWithName = mentionedUsers.some(function (u) {\n          return u.name === value;\n        });\n        if (emailMatchesWithName) {\n          newText = newText.replace(new RegExp(escapeRegExp(value), 'g'), function (match, position) {\n            var isMention = newText.charAt(position - 1) === '@';\n            // in case of mention, we leave the match in its original form,\n            // and we let `mentionsMarkdownPlugin` to do its job\n            return isMention ? match : \"[\".concat(match, \"](\").concat(encodeDecode(href), \")\");\n          });\n          return;\n        }\n      }\n      var displayLink = type === 'email' ? value : formatUrlForDisplay(href);\n      newText = newText.replace(new RegExp(escapeRegExp(value), 'g'), \"[\".concat(displayLink, \"](\").concat(encodeDecode(href), \")\"));\n    } catch (e) {\n      void e;\n    }\n  });\n  var remarkPlugins = [htmlToTextPlugin, keepLineBreaksPlugin, [remarkGfm, {\n    singleTilde: false\n  }]];\n  var rehypePlugins = [emojiMarkdownPlugin];\n  if (mentionedUsers === null || mentionedUsers === void 0 ? void 0 : mentionedUsers.length) {\n    rehypePlugins.push(mentionsMarkdownPlugin(mentionedUsers));\n  }\n  return React.createElement(ReactMarkdown, {\n    allowedElements: allowedTagNames,\n    components: __assign(__assign({}, markDownRenderers), customMarkDownRenderers),\n    rehypePlugins: getRehypePlugins(rehypePlugins),\n    remarkPlugins: getRemarkPlugins(remarkPlugins),\n    skipHtml: true,\n    unwrapDisallowed: true,\n    urlTransform: urlTransform\n  }, newText);\n};","map":{"version":3,"names":["__assign","__spreadArray","React","ReactMarkdown","defaultUrlTransform","find","uniqBy","remarkGfm","Anchor","Emoji","Mention","detectHttp","escapeRegExp","matchMarkdownLinks","messageCodeBlocks","emojiMarkdownPlugin","mentionsMarkdownPlugin","htmlToTextPlugin","keepLineBreaksPlugin","defaultAllowedTagNames","formatUrlForDisplay","url","decodeURIComponent","replace","e","encodeDecode","encodeURI","error","urlTransform","uri","startsWith","getPluginsForward","plugins","markDownRenderers","a","emoji","mention","renderText","text","mentionedUsers","_a","_b","_c","allowedTagNames","customMarkDownRenderers","_d","getRehypePlugins","_e","getRemarkPlugins","trim","length","createElement","Fragment","newText","markdownLinks","codeBlocks","forEach","href","type","value","linkIsInBlock","some","block","includes","noParsingNeeded","filter","strippedHref","strippedText","emailMatchesWithName","u","name","RegExp","match","position","isMention","charAt","concat","displayLink","remarkPlugins","singleTilde","rehypePlugins","push","allowedElements","components","skipHtml","unwrapDisallowed"],"sources":["C:/Users/Gesti/Desktop/chat_application/client/node_modules/stream-chat-react/dist/components/Message/renderText/renderText.js"],"sourcesContent":["import { __assign, __spreadArray } from \"tslib\";\nimport React from 'react';\nimport ReactMarkdown, { defaultUrlTransform } from 'react-markdown';\nimport { find } from 'linkifyjs';\nimport uniqBy from 'lodash.uniqby';\nimport remarkGfm from 'remark-gfm';\nimport { Anchor, Emoji, Mention } from './componentRenderers';\nimport { detectHttp, escapeRegExp, matchMarkdownLinks, messageCodeBlocks } from './regex';\nimport { emojiMarkdownPlugin, mentionsMarkdownPlugin } from './rehypePlugins';\nimport { htmlToTextPlugin, keepLineBreaksPlugin } from './remarkPlugins';\nexport var defaultAllowedTagNames = [\n    'html',\n    'text',\n    'br',\n    'p',\n    'em',\n    'strong',\n    'a',\n    'ol',\n    'ul',\n    'li',\n    'code',\n    'pre',\n    'blockquote',\n    'del',\n    // custom types (tagNames)\n    'emoji',\n    'mention',\n];\nfunction formatUrlForDisplay(url) {\n    try {\n        return decodeURIComponent(url).replace(detectHttp, '');\n    }\n    catch (e) {\n        return url;\n    }\n}\nfunction encodeDecode(url) {\n    try {\n        return encodeURI(decodeURIComponent(url));\n    }\n    catch (error) {\n        return url;\n    }\n}\nvar urlTransform = function (uri) { return (uri.startsWith('app://') ? uri : defaultUrlTransform(uri)); };\nvar getPluginsForward = function (plugins) { return plugins; };\nexport var markDownRenderers = {\n    a: Anchor,\n    emoji: Emoji,\n    mention: Mention,\n};\nexport var renderText = function (text, mentionedUsers, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.allowedTagNames, allowedTagNames = _c === void 0 ? defaultAllowedTagNames : _c, customMarkDownRenderers = _b.customMarkDownRenderers, _d = _b.getRehypePlugins, getRehypePlugins = _d === void 0 ? getPluginsForward : _d, _e = _b.getRemarkPlugins, getRemarkPlugins = _e === void 0 ? getPluginsForward : _e;\n    // take the @ mentions and turn them into markdown?\n    // translate links\n    if (!text)\n        return null;\n    if (text.trim().length === 1)\n        return React.createElement(React.Fragment, null, text);\n    var newText = text;\n    var markdownLinks = matchMarkdownLinks(newText);\n    var codeBlocks = messageCodeBlocks(newText);\n    // extract all valid links/emails within text and replace it with proper markup\n    uniqBy(__spreadArray(__spreadArray([], find(newText, 'email'), true), find(newText, 'url'), true), 'value').forEach(function (_a) {\n        var href = _a.href, type = _a.type, value = _a.value;\n        var linkIsInBlock = codeBlocks.some(function (block) { return block === null || block === void 0 ? void 0 : block.includes(value); });\n        // check if message is already  markdown\n        var noParsingNeeded = markdownLinks &&\n            markdownLinks.filter(function (text) {\n                var strippedHref = href === null || href === void 0 ? void 0 : href.replace(detectHttp, '');\n                var strippedText = text === null || text === void 0 ? void 0 : text.replace(detectHttp, '');\n                if (!strippedHref || !strippedText)\n                    return false;\n                return strippedHref.includes(strippedText) || strippedText.includes(strippedHref);\n            });\n        if (noParsingNeeded.length > 0 || linkIsInBlock)\n            return;\n        try {\n            // special case for mentions:\n            // it could happen that a user's name matches with an e-mail format pattern.\n            // in that case, we check whether the found e-mail is actually a mention\n            // by naively checking for an existence of @ sign in front of it.\n            if (type === 'email' && mentionedUsers) {\n                var emailMatchesWithName = mentionedUsers.some(function (u) { return u.name === value; });\n                if (emailMatchesWithName) {\n                    newText = newText.replace(new RegExp(escapeRegExp(value), 'g'), function (match, position) {\n                        var isMention = newText.charAt(position - 1) === '@';\n                        // in case of mention, we leave the match in its original form,\n                        // and we let `mentionsMarkdownPlugin` to do its job\n                        return isMention ? match : \"[\".concat(match, \"](\").concat(encodeDecode(href), \")\");\n                    });\n                    return;\n                }\n            }\n            var displayLink = type === 'email' ? value : formatUrlForDisplay(href);\n            newText = newText.replace(new RegExp(escapeRegExp(value), 'g'), \"[\".concat(displayLink, \"](\").concat(encodeDecode(href), \")\"));\n        }\n        catch (e) {\n            void e;\n        }\n    });\n    var remarkPlugins = [\n        htmlToTextPlugin,\n        keepLineBreaksPlugin,\n        [remarkGfm, { singleTilde: false }],\n    ];\n    var rehypePlugins = [emojiMarkdownPlugin];\n    if (mentionedUsers === null || mentionedUsers === void 0 ? void 0 : mentionedUsers.length) {\n        rehypePlugins.push(mentionsMarkdownPlugin(mentionedUsers));\n    }\n    return (React.createElement(ReactMarkdown, { allowedElements: allowedTagNames, components: __assign(__assign({}, markDownRenderers), customMarkDownRenderers), rehypePlugins: getRehypePlugins(rehypePlugins), remarkPlugins: getRemarkPlugins(remarkPlugins), skipHtml: true, unwrapDisallowed: true, urlTransform: urlTransform }, newText));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}