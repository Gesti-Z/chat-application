{"ast":null,"code":"import React from 'react';\nimport { CloseIcon } from './icons';\nimport { useChannelActionContext, useTranslationContext } from '../../context';\nexport var UnreadMessagesNotification = function (_a) {\n  var queryMessageLimit = _a.queryMessageLimit,\n    showCount = _a.showCount,\n    unreadCount = _a.unreadCount;\n  var _b = useChannelActionContext('UnreadMessagesNotification'),\n    jumpToFirstUnreadMessage = _b.jumpToFirstUnreadMessage,\n    markRead = _b.markRead;\n  var t = useTranslationContext('UnreadMessagesNotification').t;\n  return React.createElement(\"div\", {\n    className: 'str-chat__unread-messages-notification',\n    \"data-testid\": 'unread-messages-notification'\n  }, React.createElement(\"button\", {\n    onClick: function () {\n      return jumpToFirstUnreadMessage(queryMessageLimit);\n    }\n  }, unreadCount && showCount ? t('{{count}} unread', {\n    count: unreadCount !== null && unreadCount !== void 0 ? unreadCount : 0\n  }) : t('Unread messages')), React.createElement(\"button\", {\n    onClick: function () {\n      return markRead();\n    }\n  }, React.createElement(CloseIcon, null)));\n};","map":{"version":3,"names":["React","CloseIcon","useChannelActionContext","useTranslationContext","UnreadMessagesNotification","_a","queryMessageLimit","showCount","unreadCount","_b","jumpToFirstUnreadMessage","markRead","t","createElement","className","onClick","count"],"sources":["C:/Users/Gesti/Desktop/chat_application/client/node_modules/stream-chat-react/dist/components/MessageList/UnreadMessagesNotification.js"],"sourcesContent":["import React from 'react';\nimport { CloseIcon } from './icons';\nimport { useChannelActionContext, useTranslationContext } from '../../context';\nexport var UnreadMessagesNotification = function (_a) {\n    var queryMessageLimit = _a.queryMessageLimit, showCount = _a.showCount, unreadCount = _a.unreadCount;\n    var _b = useChannelActionContext('UnreadMessagesNotification'), jumpToFirstUnreadMessage = _b.jumpToFirstUnreadMessage, markRead = _b.markRead;\n    var t = useTranslationContext('UnreadMessagesNotification').t;\n    return (React.createElement(\"div\", { className: 'str-chat__unread-messages-notification', \"data-testid\": 'unread-messages-notification' },\n        React.createElement(\"button\", { onClick: function () { return jumpToFirstUnreadMessage(queryMessageLimit); } }, unreadCount && showCount\n            ? t('{{count}} unread', { count: unreadCount !== null && unreadCount !== void 0 ? unreadCount : 0 })\n            : t('Unread messages')),\n        React.createElement(\"button\", { onClick: function () { return markRead(); } },\n            React.createElement(CloseIcon, null))));\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,SAAS;AACnC,SAASC,uBAAuB,EAAEC,qBAAqB,QAAQ,eAAe;AAC9E,OAAO,IAAIC,0BAA0B,GAAG,SAAAA,CAAUC,EAAE,EAAE;EAClD,IAAIC,iBAAiB,GAAGD,EAAE,CAACC,iBAAiB;IAAEC,SAAS,GAAGF,EAAE,CAACE,SAAS;IAAEC,WAAW,GAAGH,EAAE,CAACG,WAAW;EACpG,IAAIC,EAAE,GAAGP,uBAAuB,CAAC,4BAA4B,CAAC;IAAEQ,wBAAwB,GAAGD,EAAE,CAACC,wBAAwB;IAAEC,QAAQ,GAAGF,EAAE,CAACE,QAAQ;EAC9I,IAAIC,CAAC,GAAGT,qBAAqB,CAAC,4BAA4B,CAAC,CAACS,CAAC;EAC7D,OAAQZ,KAAK,CAACa,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE,wCAAwC;IAAE,aAAa,EAAE;EAA+B,CAAC,EACrId,KAAK,CAACa,aAAa,CAAC,QAAQ,EAAE;IAAEE,OAAO,EAAE,SAAAA,CAAA,EAAY;MAAE,OAAOL,wBAAwB,CAACJ,iBAAiB,CAAC;IAAE;EAAE,CAAC,EAAEE,WAAW,IAAID,SAAS,GAClIK,CAAC,CAAC,kBAAkB,EAAE;IAAEI,KAAK,EAAER,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,KAAK,CAAC,GAAGA,WAAW,GAAG;EAAE,CAAC,CAAC,GAClGI,CAAC,CAAC,iBAAiB,CAAC,CAAC,EAC3BZ,KAAK,CAACa,aAAa,CAAC,QAAQ,EAAE;IAAEE,OAAO,EAAE,SAAAA,CAAA,EAAY;MAAE,OAAOJ,QAAQ,CAAC,CAAC;IAAE;EAAE,CAAC,EACzEX,KAAK,CAACa,aAAa,CAACZ,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;AAClD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}